<?xml version="1.0" encoding="UTF-8"?>
<lrml:LegalRuleML xmlns:lrml="http://docs.oasis-open.org/legalruleml/ns/v1.0/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ruleml="http://ruleml.org/spec" xsi:schemaLocation="http://docs.oasis-open.org/legalruleml/ns/v1.0/lrml-compact.xsd">
  <lrml:Prefix pre="GDPR" refID="/akn/eu/act/regulation/2018-05-25/eng@2018-05-25/!main#" />
  <lrml:Prefix pre="rioOnto" refID="http://www.liviorobaldo.com/rioOnto#" />
  <lrml:Prefix pre="prOnto" refID="https://w3id.org/ontology/pronto#" />
  <lrml:LegalReferences type="legislative">
    <lrml:LegalReference refersTo="gdprC2A5P1p1ref" refID="GDPR:art_5__para_1__content__list_1__point_a" />
    <lrml:LegalReference refersTo="gdprC2A5P1p2ref" refID="GDPR:art_5__para_1__content__list_1__point_b" />
    <lrml:LegalReference refersTo="gdprC2A5P1p3ref" refID="GDPR:art_5__para_1__content__list_1__point_c" />
    <lrml:LegalReference refersTo="gdprC2A5P1p4ref" refID="GDPR:art_5__para_1__content__list_1__point_d" />
    <lrml:LegalReference refersTo="gdprC2A5P1p5ref" refID="GDPR:art_5__para_1__content__list_1__point_e" />
    <lrml:LegalReference refersTo="gdprC2A5P1p6ref" refID="GDPR:art_5__para_1__content__list_1__point_f" />
    <lrml:LegalReference refersTo="gdprC2A6P1p1ref" refID="GDPR:art_6__para_1__content__list_1__point_a" />
    <lrml:LegalReference refersTo="gdprC2A6P1p2ref" refID="GDPR:art_6__para_1__content__list_1__point_b" />
    <lrml:LegalReference refersTo="gdprC2A6P1p3ref" refID="GDPR:art_6__para_1__content__list_1__point_c" />
    <lrml:LegalReference refersTo="gdprC2A6P1p4ref" refID="GDPR:art_6__para_1__content__list_1__point_d" />
    <lrml:LegalReference refersTo="gdprC2A6P1p5ref" refID="GDPR:art_6__para_1__content__list_1__point_e" />
    <lrml:LegalReference refersTo="gdprC2A6P1p6ref" refID="GDPR:art_6__para_1__content__list_1__point_f" />
    <lrml:LegalReference refersTo="gdprC2A6P4ref" refID="GDPR:art_6__para_4" />
    <lrml:LegalReference refersTo="gdprC2A7P1ref" refID="GDPR:art_7__para_1" />
    <lrml:LegalReference refersTo="gdprC2A7P2ref" refID="GDPR:art_7__para_2" />
    <lrml:LegalReference refersTo="gdprC2A7P3ref" refID="GDPR:art_7__para_3" />
    <lrml:LegalReference refersTo="gdprC2A8P1ref" refID="GDPR:art_8__para_1" />
    <lrml:LegalReference refersTo="gdprC2A8P2ref" refID="GDPR:art_8__para_2" />
    <lrml:LegalReference refersTo="gdprC2A9P1ref" refID="GDPR:art_9__para_1" />
    <lrml:LegalReference refersTo="gdprC2A9P2p1ref" refID="GDPR:art_9__para_1__content__list_1__point_a" />
    <lrml:LegalReference refersTo="gdprC2A9P2p2ref" refID="GDPR:art_9__para_2__content__list_1__point_b" />
    <lrml:LegalReference refersTo="gdprC2A9P2p3ref" refID="GDPR:art_9__para_2__content__list_1__point_c" />
    <lrml:LegalReference refersTo="gdprC2A9P2p4ref" refID="GDPR:art_9__para_2__content__list_1__point_d" />
    <lrml:LegalReference refersTo="gdprC2A9P2p5ref" refID="GDPR:art_9__para_2__content__list_1__point_e" />
    <lrml:LegalReference refersTo="gdprC2A9P2p6ref" refID="GDPR:art_9__para_2__content__list_1__point_f" />
    <lrml:LegalReference refersTo="gdprC2A9P2p7ref" refID="GDPR:art_9__para_2__content__list_1__point_g" />
    <lrml:LegalReference refersTo="gdprC2A9P2p8ref" refID="GDPR:art_9__para_2__content__list_1__point_h" />
    <lrml:LegalReference refersTo="gdprC2A9P2p9ref" refID="GDPR:art_9__para_2__content__list_1__point_i" />
    <lrml:LegalReference refersTo="gdprC2A10P1ref" refID="GDPR:art_10__para_1" />
    <lrml:LegalReference refersTo="gdprC2A11P1ref" refID="GDPR:art_11__para_1" />
    <lrml:LegalReference refersTo="gdprC2A11P2ref" refID="GDPR:art_11__para_2" />
    <lrml:LegalReference refersTo="gdprC3S1A12P1ref" refID="GDPR:art_12__para_1" />
    <lrml:LegalReference refersTo="gdprC3S1A12P2ref" refID="GDPR:art_12__para_2" />
    <lrml:LegalReference refersTo="gdprC3S1A12P3ref" refID="GDPR:art_12__para_3" />
    <lrml:LegalReference refersTo="gdprC3S1A12P4ref" refID="GDPR:art_12__para_4" />
    <lrml:LegalReference refersTo="gdprC3S1A12P5ref" refID="GDPR:art_12__para_5" />
    <lrml:LegalReference refersTo="gdprC3S1A12P6ref" refID="GDPR:art_12__para_6" />
    <lrml:LegalReference refersTo="gdprC3S1A12P7ref" refID="GDPR:art_12__para_7" />
    <lrml:LegalReference refersTo="gdprC3S2A13P1p1ref" refID="GDPR:art_13__para_1__content__list_1__point_a" />
    <lrml:LegalReference refersTo="gdprC3S2A13P1p2ref" refID="GDPR:art_13__para_1__content__list_1__point_b" />
    <lrml:LegalReference refersTo="gdprC3S2A13P1p3ref" refID="GDPR:art_13__para_1__content__list_1__point_c" />
    <lrml:LegalReference refersTo="gdprC3S2A13P1p4ref" refID="GDPR:art_13__para_1__content__list_1__point_d" />
    <lrml:LegalReference refersTo="gdprC3S2A13P1p5ref" refID="GDPR:art_13__para_1__content__list_1__point_e" />
    <lrml:LegalReference refersTo="gdprC3S2A13P1p6ref" refID="GDPR:art_13__para_1__content__list_1__point_f" />
    <lrml:LegalReference refersTo="gdprC3S2A13P2p1ref" refID="GDPR:art_13__para_2__content__list_1__point_a" />
    <lrml:LegalReference refersTo="gdprC3S2A13P2p2ref" refID="GDPR:art_13__para_2__content__list_1__point_b" />
    <lrml:LegalReference refersTo="gdprC3S2A13P2p3ref" refID="GDPR:art_13__para_2__content__list_1__point_c" />
    <lrml:LegalReference refersTo="gdprC3S2A13P2p4ref" refID="GDPR:art_13__para_2__content__list_1__point_d" />
    <lrml:LegalReference refersTo="gdprC3S2A13P2p5ref" refID="GDPR:art_13__para_2__content__list_1__point_e" />
    <lrml:LegalReference refersTo="gdprC3S2A13P2p6ref" refID="GDPR:art_13__para_2__content__list_1__point_f" />
    <lrml:LegalReference refersTo="gdprC3S2A13P3ref" refID="GDPR:art_13__para_3" />
    <lrml:LegalReference refersTo="gdprC3S2A14P1p1ref" refID="GDPR:art_14__para_1__content__list_1__point_a" />
    <lrml:LegalReference refersTo="gdprC3S2A14P1p2ref" refID="GDPR:art_14__para_1__content__list_1__point_b" />
    <lrml:LegalReference refersTo="gdprC3S2A14P1p3ref" refID="GDPR:art_14__para_1__content__list_1__point_c" />
    <lrml:LegalReference refersTo="gdprC3S2A14P1p4ref" refID="GDPR:art_14__para_1__content__list_1__point_d" />
    <lrml:LegalReference refersTo="gdprC3S2A14P1p5ref" refID="GDPR:art_14__para_1__content__list_1__point_e" />
    <lrml:LegalReference refersTo="gdprC3S2A14P1p6ref" refID="GDPR:art_14__para_1__content__list_1__point_f" />
    <lrml:LegalReference refersTo="gdprC3S2A14P2p1ref" refID="GDPR:art_14__para_2__content__list_1__point_a" />
    <lrml:LegalReference refersTo="gdprC3S2A14P2p2ref" refID="GDPR:art_14__para_2__content__list_1__point_b" />
    <lrml:LegalReference refersTo="gdprC3S2A14P2p3ref" refID="GDPR:art_14__para_2__content__list_1__point_c" />
    <lrml:LegalReference refersTo="gdprC3S2A14P2p4ref" refID="GDPR:art_14__para_2__content__list_1__point_d" />
    <lrml:LegalReference refersTo="gdprC3S2A14P2p5ref" refID="GDPR:art_14__para_2__content__list_1__point_e" />
    <lrml:LegalReference refersTo="gdprC3S2A14P2p6ref" refID="GDPR:art_14__para_2__content__list_1__point_f" />
    <lrml:LegalReference refersTo="gdprC3S2A14P2p7ref" refID="GDPR:art_14__para_2__content__list_1__point_g" />
    <lrml:LegalReference refersTo="gdprC3S2A14P3p1ref" refID="GDPR:art_14__para_3__content__list_1__point_a" />
    <lrml:LegalReference refersTo="gdprC3S2A14P3p2ref" refID="GDPR:art_14__para_3__content__list_1__point_b" />
    <lrml:LegalReference refersTo="gdprC3S2A14P3p3ref" refID="GDPR:art_14__para_3__content__list_1__point_c" />
    <lrml:LegalReference refersTo="gdprC3S2A14P4ref" refID="GDPR:art_14__para_4" />
    <lrml:LegalReference refersTo="gdprC3S2A14P5p2ref" refID="GDPR:art_14__para_5__content__list_1__point_b" />
    <lrml:LegalReference refersTo="gdprC3S2A14P5p3ref" refID="GDPR:art_14__para_5__content__list_1__point_c" />
    <lrml:LegalReference refersTo="gdprC3S2A14P5p4ref" refID="GDPR:art_14__para_5__content__list_1__point_d" />
    <lrml:LegalReference refersTo="gdprC3S2A15P1p1ref" refID="GDPR:art_15__para_1__content__list_1__point_a" />
    <lrml:LegalReference refersTo="gdprC3S2A15P1p2ref" refID="GDPR:art_15__para_1__content__list_1__point_b" />
    <lrml:LegalReference refersTo="gdprC3S2A15P1p3ref" refID="GDPR:art_15__para_1__content__list_1__point_c" />
    <lrml:LegalReference refersTo="gdprC3S2A15P1p4ref" refID="GDPR:art_15__para_1__content__list_1__point_d" />
    <lrml:LegalReference refersTo="gdprC3S2A15P1p5ref" refID="GDPR:art_15__para_1__content__list_1__point_e" />
    <lrml:LegalReference refersTo="gdprC3S2A15P1p6ref" refID="GDPR:art_15__para_1__content__list_1__point_f" />
    <lrml:LegalReference refersTo="gdprC3S2A15P1p7ref" refID="GDPR:art_15__para_1__content__list_1__point_g" />
    <lrml:LegalReference refersTo="gdprC3S2A15P1p8ref" refID="GDPR:art_15__para_1__content__list_1__point_h" />
    <lrml:LegalReference refersTo="gdprC3S2A15P2ref" refID="GDPR:art_15__para_2" />
    <lrml:LegalReference refersTo="gdprC3S2A15P3ref" refID="GDPR:art_15__para_3" />
    <lrml:LegalReference refersTo="gdprC3S2A15P4ref" refID="GDPR:art_15__para_4" />
    <lrml:LegalReference refersTo="gdprC3S3A16P1ref" refID="GDPR:art_16__para_1" />
    <lrml:LegalReference refersTo="gdprC3S3A17P1ref" refID="GDPR:art_17__para_1" />
    <lrml:LegalReference refersTo="gdprC3S3A17P1p1ref" refID="GDPR:art_17__para_1__content__list_1__point_a" />
    <lrml:LegalReference refersTo="gdprC3S3A17P1p2ref" refID="GDPR:art_17__para_1__content__list_1__point_b" />
    <lrml:LegalReference refersTo="gdprC3S3A17P1p3ref" refID="GDPR:art_17__para_1__content__list_1__point_c" />
    <lrml:LegalReference refersTo="gdprC3S3A17P1p4ref" refID="GDPR:art_17__para_1__content__list_1__point_d" />
    <lrml:LegalReference refersTo="gdprC3S3A17P1p5ref" refID="GDPR:art_17__para_1__content__list_1__point_e" />
    <lrml:LegalReference refersTo="gdprC3S3A17P1p6ref" refID="GDPR:art_17__para_1__content__list_1__point_f" />
    <lrml:LegalReference refersTo="gdprC3S3A17P2ref" refID="GDPR:art_17__para_2" />
    <lrml:LegalReference refersTo="gdprC3S3A17P3p1ref" refID="GDPR:art_17__para_3__content__list_1__point_a" />
    <lrml:LegalReference refersTo="gdprC3S3A17P3p2ref" refID="GDPR:art_17__para_3__content__list_1__point_b" />
    <lrml:LegalReference refersTo="gdprC3S3A17P3p3ref" refID="GDPR:art_17__para_3__content__list_1__point_c" />
    <lrml:LegalReference refersTo="gdprC3S3A17P3p4ref" refID="GDPR:art_17__para_3__content__list_1__point_d" />
    <lrml:LegalReference refersTo="gdprC3S3A17P3p5ref" refID="GDPR:art_17__para_3__content__list_1__point_e" />
    <lrml:LegalReference refersTo="gdprC3S3A18P1p1ref" refID="GDPR:art_18__para_1__content__list_1__point_a" />
    <lrml:LegalReference refersTo="gdprC3S3A18P1p2ref" refID="GDPR:art_18__para_1__content__list_1__point_b" />
    <lrml:LegalReference refersTo="gdprC3S3A18P1p3ref" refID="GDPR:art_18__para_1__content__list_1__point_c" />
    <lrml:LegalReference refersTo="gdprC3S3A18P1p4ref" refID="GDPR:art_18__para_1__content__list_1__point_d" />
    <lrml:LegalReference refersTo="gdprC3S3A18P2ref" refID="GDPR:art_18__para_2" />
    <lrml:LegalReference refersTo="gdprC3S3A18P3ref" refID="GDPR:art_18__para_3" />
    <lrml:LegalReference refersTo="gdprC3S3A19P1ref" refID="GDPR:art_19__para_1" />
    <lrml:LegalReference refersTo="gdprC3S3A20P1ref" refID="GDPR:art_20__para_1" />
    <lrml:LegalReference refersTo="gdprC3S3A20P2ref" refID="GDPR:art_20__para_2" />
    <lrml:LegalReference refersTo="gdprC3S3A20P3ref" refID="GDPR:art_20__para_3" />
    <lrml:LegalReference refersTo="gdprC3S3A20P4ref" refID="GDPR:art_20__para_4" />
    <lrml:LegalReference refersTo="gdprC3S4A21P1ref" refID="GDPR:art_21__para_1" />
    <lrml:LegalReference refersTo="gdprC3S4A21P2ref" refID="GDPR:art_21__para_2" />
    <lrml:LegalReference refersTo="gdprC3S4A21P3ref" refID="GDPR:art_21__para_3" />
    <lrml:LegalReference refersTo="gdprC3S4A21P4ref" refID="GDPR:art_21__para_4" />
    <lrml:LegalReference refersTo="gdprC3S4A21P5ref" refID="GDPR:art_21__para_5" />
    <lrml:LegalReference refersTo="gdprC3S4A21P6ref" refID="GDPR:art_21__para_6" />
    <lrml:LegalReference refersTo="gdprC3S4A22P1ref" refID="GDPR:art_22__para_1" />
    <lrml:LegalReference refersTo="gdprC3S4A22P2p1ref" refID="GDPR:art_22__para_2__content__list_1__point_a" />
    <lrml:LegalReference refersTo="gdprC3S4A22P2p2ref" refID="GDPR:art_22__para_2__content__list_1__point_b" />
    <lrml:LegalReference refersTo="gdprC3S4A22P2p3ref" refID="GDPR:art_22__para_2__content__list_1__point_c" />
    <lrml:LegalReference refersTo="gdprC3S4A22P4ref" refID="GDPR:art_22__para_4" />
    <lrml:LegalReference refersTo="gdprC4S1A24P1ref" refID="GDPR:art_24__para_1" />
    <lrml:LegalReference refersTo="gdprC4S1A24P2ref" refID="GDPR:art_24__para_2" />
    <lrml:LegalReference refersTo="gdprC4S1A24P3ref" refID="GDPR:art_24__para_3" />
    <lrml:LegalReference refersTo="gdprC4S1A25P1ref" refID="GDPR:art_25__para_1" />
    <lrml:LegalReference refersTo="gdprC4S1A25P2ref" refID="GDPR:art_25__para_2" />
    <lrml:LegalReference refersTo="gdprC4S1A26P1ref" refID="GDPR:art_26__para_1" />
    <lrml:LegalReference refersTo="gdprC4S1A26P2ref" refID="GDPR:art_26__para_2" />
    <lrml:LegalReference refersTo="gdprC4S1A26P3ref" refID="GDPR:art_26__para_3" />
    <lrml:LegalReference refersTo="gdprC4S1A27P1ref" refID="GDPR:art_27__para_1" />
    <lrml:LegalReference refersTo="gdprC4S1A27P2p1ref" refID="GDPR:art_27__para_2__content__list_1__point_a" />
    <lrml:LegalReference refersTo="gdprC4S1A27P2p2ref" refID="GDPR:art_27__para_2__content__list_1__point_b" />
    <lrml:LegalReference refersTo="gdprC4S1A27P4ref" refID="GDPR:art_27__para_4" />
    <lrml:LegalReference refersTo="gdprC4S1A27P5ref" refID="GDPR:art_27__para_5" />
    <lrml:LegalReference refersTo="gdprC4S1A28P1ref" refID="GDPR:art_28__para_1" />
    <lrml:LegalReference refersTo="gdprC4S1A28P2ref" refID="GDPR:art_28__para_2" />
    <lrml:LegalReference refersTo="gdprC4S1A28P3ref" refID="GDPR:art_28__para_3" />
    <lrml:LegalReference refersTo="gdprC4S1A28P3p1ref" refID="GDPR:art_28__para_3__content__list_1__point_a" />
    <lrml:LegalReference refersTo="gdprC4S1A28P3p2ref" refID="GDPR:art_28__para_3__content__list_1__point_b" />
    <lrml:LegalReference refersTo="gdprC4S1A28P3p5ref" refID="GDPR:art_28__para_3__content__list_1__point_e" />
    <lrml:LegalReference refersTo="gdprC4S1A28P3p6ref" refID="GDPR:art_28__para_3__content__list_1__point_f" />
    <lrml:LegalReference refersTo="gdprC4S1A28P3p7ref" refID="GDPR:art_28__para_3__content__list_1__point_g" />
    <lrml:LegalReference refersTo="gdprC4S1A28P3p8ref" refID="GDPR:art_28__para_3__content__list_1__point_h" />
    <lrml:LegalReference refersTo="gdprC4S1A28P4ref" refID="GDPR:art_28__para_4" />
    <lrml:LegalReference refersTo="gdprC4S1A28P5ref" refID="GDPR:art_28__para_5" />
    <lrml:LegalReference refersTo="gdprC4S1A28P6ref" refID="GDPR:art_28__para_6" />
    <lrml:LegalReference refersTo="gdprC4S1A28P9ref" refID="GDPR:art_28__para_9" />
    <lrml:LegalReference refersTo="gdprC4S1A28P1ref" refID="GDPR:art_28__para_10" />
    <lrml:LegalReference refersTo="gdprC4S1A29P1ref" refID="GDPR:art_29__para_1" />
    <lrml:LegalReference refersTo="gdprC4S1A30P1ref" refID="GDPR:art_30__para_1" />
    <lrml:LegalReference refersTo="gdprC4S1A30P1p1ref" refID="GDPR:art_30__para_1__content__list_1__point_a" />
    <lrml:LegalReference refersTo="gdprC4S1A30P1p2ref" refID="GDPR:art_30__para_1__content__list_1__point_b" />
    <lrml:LegalReference refersTo="gdprC4S1A30P1p3ref" refID="GDPR:art_30__para_1__content__list_1__point_c" />
    <lrml:LegalReference refersTo="gdprC4S1A30P1p4ref" refID="GDPR:art_30__para_1__content__list_1__point_d" />
    <lrml:LegalReference refersTo="gdprC4S1A30P1p5ref" refID="GDPR:art_30__para_1__content__list_1__point_e" />
    <lrml:LegalReference refersTo="gdprC4S1A30P1p6ref" refID="GDPR:art_30__para_1__content__list_1__point_f" />
    <lrml:LegalReference refersTo="gdprC4S1A30P1p7ref" refID="GDPR:art_30__para_1__content__list_1__point_g" />
    <lrml:LegalReference refersTo="gdprC4S1A30P2ref" refID="GDPR:art_30__para_2" />
    <lrml:LegalReference refersTo="gdprC4S1A30P2p1ref" refID="GDPR:art_30__para_2__content__list_1__point_a" />
    <lrml:LegalReference refersTo="gdprC4S1A30P2p2ref" refID="GDPR:art_30__para_2__content__list_1__point_b" />
    <lrml:LegalReference refersTo="gdprC4S1A30P2p3ref" refID="GDPR:art_30__para_2__content__list_1__point_c" />
    <lrml:LegalReference refersTo="gdprC4S1A30P2p4ref" refID="GDPR:art_30__para_2__content__list_1__point_d" />
    <lrml:LegalReference refersTo="gdprC4S1A30P3ref" refID="GDPR:art_30__para_3" />
    <lrml:LegalReference refersTo="gdprC4S1A30P4ref" refID="GDPR:art_30__para_4" />
    <lrml:LegalReference refersTo="gdprC4S1A30P5ref" refID="GDPR:art_30__para_5" />
    <lrml:LegalReference refersTo="gdprC4S1A31P1ref" refID="GDPR:art_31__para_1" />
    <lrml:LegalReference refersTo="gdprC4S2A32P1ref" refID="GDPR:art_32__para_1" />
    <lrml:LegalReference refersTo="gdprC4S2A32P3ref" refID="GDPR:art_32__para_3" />
    <lrml:LegalReference refersTo="gdprC4S2A32P4ref" refID="GDPR:art_32__para_4" />
    <lrml:LegalReference refersTo="gdprC4S2A33P1ref" refID="GDPR:art_33__para_1" />
    <lrml:LegalReference refersTo="gdprC4S2A33P2ref" refID="GDPR:art_33__para_2" />
    <lrml:LegalReference refersTo="gdprC4S2A33P3p1ref" refID="GDPR:art_33__para_3__content__list_1__point_a" />
    <lrml:LegalReference refersTo="gdprC4S2A33P3p2ref" refID="GDPR:art_33__para_3__content__list_1__point_b" />
    <lrml:LegalReference refersTo="gdprC4S2A33P3p3ref" refID="GDPR:art_33__para_3__content__list_1__point_c" />
    <lrml:LegalReference refersTo="gdprC4S2A33P3p4ref" refID="GDPR:art_33__para_3__content__list_1__point_d" />
    <lrml:LegalReference refersTo="gdprC4S2A33P4ref" refID="GDPR:art_33__para_4" />
    <lrml:LegalReference refersTo="gdprC4S2A33P5ref" refID="GDPR:art_33__para_5" />
    <lrml:LegalReference refersTo="gdprC4S2A34P1ref" refID="GDPR:art_34__para_1" />
    <lrml:LegalReference refersTo="gdprC4S2A34P2ref" refID="GDPR:art_34__para_2" />
    <lrml:LegalReference refersTo="gdprC4S2A34P3p1ref" refID="GDPR:art_34__para_3__content__list_1__point_a" />
    <lrml:LegalReference refersTo="gdprC4S2A34P3p2ref" refID="GDPR:art_34__para_3__content__list_1__point_b" />
    <lrml:LegalReference refersTo="gdprC4S2A34P3p3ref" refID="GDPR:art_34__para_3__content__list_1__point_c" />
    <lrml:LegalReference refersTo="gdprC4S3A35P1ref" refID="GDPR:art_35__para_1" />
    <lrml:LegalReference refersTo="gdprC4S3A35P2ref" refID="GDPR:art_35__para_2" />
    <lrml:LegalReference refersTo="gdprC4S3A35P3p1ref" refID="GDPR:art_35__para_3__content__list_1__point_a" />
    <lrml:LegalReference refersTo="gdprC4S3A35P3p2ref" refID="GDPR:art_35__para_3__content__list_1__point_b" />
    <lrml:LegalReference refersTo="gdprC4S3A35P3p3ref" refID="GDPR:art_35__para_3__content__list_1__point_c" />
    <lrml:LegalReference refersTo="gdprC4S3A35P7ref" refID="GDPR:art_35__para_7" />
    <lrml:LegalReference refersTo="gdprC4S3A35P9ref" refID="GDPR:art_35__para_9" />
    <lrml:LegalReference refersTo="gdprC4S3A35P10ref" refID="GDPR:art_35__para_10" />
    <lrml:LegalReference refersTo="gdprC4S3A35P11ref" refID="GDPR:art_35__para_11" />
    <lrml:LegalReference refersTo="gdprC4S3A36P1ref" refID="GDPR:art_36__para_1" />
    <lrml:LegalReference refersTo="gdprC4S3A36P3p1ref" refID="GDPR:art_36__para_3__content__list_1__point_a" />
    <lrml:LegalReference refersTo="gdprC4S3A36P3p2ref" refID="GDPR:art_36__para_3__content__list_1__point_b" />
    <lrml:LegalReference refersTo="gdprC4S3A36P3p3ref" refID="GDPR:art_36__para_3__content__list_1__point_c" />
    <lrml:LegalReference refersTo="gdprC4S3A36P3p4ref" refID="GDPR:art_36__para_3__content__list_1__point_d" />
    <lrml:LegalReference refersTo="gdprC4S3A36P3p5ref" refID="GDPR:art_36__para_3__content__list_1__point_e" />
    <lrml:LegalReference refersTo="gdprC4S3A36P3p6ref" refID="GDPR:art_36__para_3__content__list_1__point_f" />
    <lrml:LegalReference refersTo="gdprC4S4A37P1p1ref" refID="GDPR:art_37__para_1__content__list_1__point_a" />
    <lrml:LegalReference refersTo="gdprC4S4A37P1p2ref" refID="GDPR:art_37__para_1__content__list_1__point_b" />
    <lrml:LegalReference refersTo="gdprC4S4A37P1p3ref" refID="GDPR:art_37__para_1__content__list_1__point_c" />
    <lrml:LegalReference refersTo="gdprC4S4A37P2ref" refID="GDPR:art_37__para_2" />
    <lrml:LegalReference refersTo="gdprC4S4A37P3ref" refID="GDPR:art_37__para_3" />
    <lrml:LegalReference refersTo="gdprC4S4A37P4ref" refID="GDPR:art_37__para_4" />
    <lrml:LegalReference refersTo="gdprC4S4A37P5ref" refID="GDPR:art_37__para_5" />
    <lrml:LegalReference refersTo="gdprC4S4A37P6ref" refID="GDPR:art_37__para_6" />
    <lrml:LegalReference refersTo="gdprC4S4A37P7ref" refID="GDPR:art_37__para_7" />
    <lrml:LegalReference refersTo="gdprC4S4A38P1ref" refID="GDPR:art_38__para_1" />
    <lrml:LegalReference refersTo="gdprC4S4A38P2ref" refID="GDPR:art_38__para_2" />
    <lrml:LegalReference refersTo="gdprC4S4A38P3ref" refID="GDPR:art_38__para_3" />
    <lrml:LegalReference refersTo="gdprC4S4A38P4ref" refID="GDPR:art_38__para_4" />
    <lrml:LegalReference refersTo="gdprC4S4A38P5ref" refID="GDPR:art_38__para_5" />
    <lrml:LegalReference refersTo="gdprC4S4A38P6ref" refID="GDPR:art_38__para_6" />
    <lrml:LegalReference refersTo="gdprC4S4A39P1p1ref" refID="GDPR:art_39__para_1__content__list_1__point_a" />
    <lrml:LegalReference refersTo="gdprC4S4A39P1p2ref" refID="GDPR:art_39__para_1__content__list_1__point_b" />
    <lrml:LegalReference refersTo="gdprC4S4A39P1p3ref" refID="GDPR:art_39__para_1__content__list_1__point_c" />
    <lrml:LegalReference refersTo="gdprC4S4A39P1p4ref" refID="GDPR:art_39__para_1__content__list_1__point_d" />
    <lrml:LegalReference refersTo="gdprC4S4A39P1p5ref" refID="GDPR:art_39__para_1__content__list_1__point_e" />
    <lrml:LegalReference refersTo="gdprC4S4A39P2ref" refID="GDPR:art_39__para_2" />
    <lrml:LegalReference refersTo="gdprC4S5A40P2p1ref" refID="GDPR:art_40__para_2__content__list_1__point_a" />
    <lrml:LegalReference refersTo="gdprC4S5A40P2p2ref" refID="GDPR:art_40__para_2__content__list_1__point_b" />
    <lrml:LegalReference refersTo="gdprC4S5A40P2p3ref" refID="GDPR:art_40__para_2__content__list_1__point_c" />
    <lrml:LegalReference refersTo="gdprC4S5A40P2p4ref" refID="GDPR:art_40__para_2__content__list_1__point_d" />
    <lrml:LegalReference refersTo="gdprC4S5A40P2p5ref" refID="GDPR:art_40__para_2__content__list_1__point_e" />
    <lrml:LegalReference refersTo="gdprC4S5A40P2p6ref" refID="GDPR:art_40__para_2__content__list_1__point_f" />
    <lrml:LegalReference refersTo="gdprC4S5A40P2p7ref" refID="GDPR:art_40__para_2__content__list_1__point_g" />
    <lrml:LegalReference refersTo="gdprC4S5A40P2p8ref" refID="GDPR:art_40__para_2__content__list_1__point_h" />
    <lrml:LegalReference refersTo="gdprC4S5A40P2p9ref" refID="GDPR:art_40__para_2__content__list_1__point_i" />
    <lrml:LegalReference refersTo="gdprC4S5A40P2p10ref" refID="GDPR:art_40__para_2__content__list_1__point_j" />
    <lrml:LegalReference refersTo="gdprC4S5A40P2p11ref" refID="GDPR:art_40__para_2__content__list_1__point_k" />
    <lrml:LegalReference refersTo="gdprC4S5A40P3ref" refID="GDPR:art_40__para_3" />
    <lrml:LegalReference refersTo="gdprC4S5A40P4ref" refID="GDPR:art_40__para_4" />
    <lrml:LegalReference refersTo="gdprC4S5A40P5ref" refID="GDPR:art_40__para_5" />
    <lrml:LegalReference refersTo="gdprC4S5A41P1ref" refID="GDPR:art_41__para_1" />
    <lrml:LegalReference refersTo="gdprC4S5A41P2ref" refID="GDPR:art_41__para_2" />
    <lrml:LegalReference refersTo="gdprC4S5A41P4ref" refID="GDPR:art_41__para_4" />
    <lrml:LegalReference refersTo="gdprC4S5A41P6ref" refID="GDPR:art_41__para_6" />
    <lrml:LegalReference refersTo="gdprC4S5A42P2ref" refID="GDPR:art_42__para_2" />
    <lrml:LegalReference refersTo="gdprC4S5A42P3ref" refID="GDPR:art_42__para_3" />
    <lrml:LegalReference refersTo="gdprC4S5A42P6ref" refID="GDPR:art_42__para_6" />
    <lrml:LegalReference refersTo="gdprC4S5A42P7ref" refID="GDPR:art_42__para_7" />
    <lrml:LegalReference refersTo="gdprC4S5A43P1ref" refID="GDPR:art_43__para_1" />
    <lrml:LegalReference refersTo="gdprC4S5A43P4ref" refID="GDPR:art_43__para_4" />
    <lrml:LegalReference refersTo="gdprC4S5A43P5ref" refID="GDPR:art_43__para_5" />
    <lrml:LegalReference refersTo="gdprC5A45P1ref" refID="GDPR:art_45__para_1" />
    <lrml:LegalReference refersTo="gdprC5A45P3ref" refID="GDPR:art_45__para_3" />
    <lrml:LegalReference refersTo="gdprC5A46P1ref" refID="GDPR:art_46__para_1" />
    <lrml:LegalReference refersTo="gdprC5A46P2p1ref" refID="GDPR:art_46__para_2__content__list_1__point_a" />
    <lrml:LegalReference refersTo="gdprC5A46P2p2ref" refID="GDPR:art_46__para_2__content__list_1__point_b" />
    <lrml:LegalReference refersTo="gdprC5A46P2p5ref" refID="GDPR:art_46__para_2__content__list_1__point_e" />
    <lrml:LegalReference refersTo="gdprC5A46P2p6ref" refID="GDPR:art_46__para_2__content__list_1__point_f" />
    <lrml:LegalReference refersTo="gdprC5A46P3p1ref" refID="GDPR:art_46__para_3__content__list_1__point_a" />
    <lrml:LegalReference refersTo="gdprC5A46P3p2ref" refID="GDPR:art_46__para_3__content__list_1__point_b" />
    <lrml:LegalReference refersTo="gdprC5A47P1ref" refID="GDPR:art_47__para_1" />
    <lrml:LegalReference refersTo="gdprC5A47P2ref" refID="GDPR:art_47__para_2" />
    <lrml:LegalReference refersTo="gdprC5A48P1ref" refID="GDPR:art_48__para_1" />
    <lrml:LegalReference refersTo="gdprC5A49P1ref" refID="GDPR:art_49__para_1" />
    <lrml:LegalReference refersTo="gdprC5A49P1p1ref" refID="GDPR:art_49__para_1__content__list_1__point_a" />
    <lrml:LegalReference refersTo="gdprC5A49P1p2ref" refID="GDPR:art_49__para_1__content__list_1__point_b" />
    <lrml:LegalReference refersTo="gdprC5A49P1p3ref" refID="GDPR:art_49__para_1__content__list_1__point_c" />
    <lrml:LegalReference refersTo="gdprC5A49P1p4ref" refID="GDPR:art_49__para_1__content__list_1__point_d" />
    <lrml:LegalReference refersTo="gdprC5A49P1p5ref" refID="GDPR:art_49__para_1__content__list_1__point_e" />
    <lrml:LegalReference refersTo="gdprC5A49P1p6ref" refID="GDPR:art_49__para_1__content__list_1__point_f" />
    <lrml:LegalReference refersTo="gdprC5A49P2ref" refID="GDPR:art_49__para_2" />
    <lrml:LegalReference refersTo="gdprC5A49P3ref" refID="GDPR:art_49__para_3" />
    <lrml:LegalReference refersTo="gdprC5A49P6ref" refID="GDPR:art_49__para_6" />
    <lrml:LegalReference refersTo="gdprC8A77P1ref" refID="GDPR:art_77__para_1" />
    <lrml:LegalReference refersTo="gdprC8A78P1ref" refID="GDPR:art_78__para_1" />
    <lrml:LegalReference refersTo="gdprC8A78P2ref" refID="GDPR:art_78__para_2" />
    <lrml:LegalReference refersTo="gdprC8A79P1ref" refID="GDPR:art_79__para_1" />
    <lrml:LegalReference refersTo="gdprC8A80P1ref" refID="GDPR:art_80__para_1" />
    <lrml:LegalReference refersTo="gdprC8A82P1ref" refID="GDPR:art_82__para_1" />
    <lrml:LegalReference refersTo="gdprC8A82P2ref" refID="GDPR:art_82__para_2" />
    <lrml:LegalReference refersTo="gdprC8A82P3ref" refID="GDPR:art_82__para_3" />
    <lrml:LegalReference refersTo="gdprC8A82P4ref" refID="GDPR:art_82__para_4" />
    <lrml:LegalReference refersTo="gdprC8A82P5ref" refID="GDPR:art_82__para_5" />
    <lrml:LegalReference refersTo="gdprC9A86P1ref" refID="GDPR:art_86__para_1" />
    <lrml:LegalReference refersTo="gdprC9A89P1ref" refID="GDPR:art_89__para_1" />
  </lrml:LegalReferences>
  <lrml:Associations>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC2A5P1p1ref" />
      <lrml:toTarget keyref="#statements1" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC2A5P1p2ref" />
      <lrml:toTarget keyref="#statements2" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC2A5P1p3ref" />
      <lrml:toTarget keyref="#statements3" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC2A5P1p4ref" />
      <lrml:toTarget keyref="#statements4" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC2A5P1p5ref" />
      <lrml:toTarget keyref="#statements5" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC2A5P1p6ref" />
      <lrml:toTarget keyref="#statements6" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC2A6P1p1ref" />
      <lrml:toTarget keyref="#statements7" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC2A6P1p2ref" />
      <lrml:toTarget keyref="#statements8" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC2A6P1p3ref" />
      <lrml:toTarget keyref="#statements9" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC2A6P1p4ref" />
      <lrml:toTarget keyref="#statements10" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC2A6P1p5ref" />
      <lrml:toTarget keyref="#statements11" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC2A6P1p6ref" />
      <lrml:toTarget keyref="#statements12" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC2A6P4ref" />
      <lrml:toTarget keyref="#statements13" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC2A7P1ref" />
      <lrml:toTarget keyref="#statements14" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC2A7P2ref" />
      <lrml:toTarget keyref="#statements15" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC2A7P3ref" />
      <lrml:toTarget keyref="#statements16" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC2A8P1ref" />
      <lrml:toTarget keyref="#statements17" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC2A8P2ref" />
      <lrml:toTarget keyref="#statements18" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC2A9P1ref" />
      <lrml:toTarget keyref="#statements19" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC2A9P2p1ref" />
      <lrml:toTarget keyref="#statements20" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC2A9P2p2ref" />
      <lrml:toTarget keyref="#statements21" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC2A9P2p3ref" />
      <lrml:toTarget keyref="#statements22" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC2A9P2p4ref" />
      <lrml:toTarget keyref="#statements23" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC2A9P2p5ref" />
      <lrml:toTarget keyref="#statements24" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC2A9P2p6ref" />
      <lrml:toTarget keyref="#statements25" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC2A9P2p7ref" />
      <lrml:toTarget keyref="#statements26" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC2A9P2p8ref" />
      <lrml:toTarget keyref="#statements27" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC2A9P2p9ref" />
      <lrml:toTarget keyref="#statements28" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC2A10P1ref" />
      <lrml:toTarget keyref="#statements29" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC2A11P1ref" />
      <lrml:toTarget keyref="#statements30" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC2A11P2ref" />
      <lrml:toTarget keyref="#statements31" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC3S1A12P1ref" />
      <lrml:toTarget keyref="#statements32" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC3S1A12P2ref" />
      <lrml:toTarget keyref="#statements33" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC3S1A12P3ref" />
      <lrml:toTarget keyref="#statements34" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC3S1A12P4ref" />
      <lrml:toTarget keyref="#statements35" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC3S1A12P5ref" />
      <lrml:toTarget keyref="#statements36" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC3S1A12P6ref" />
      <lrml:toTarget keyref="#statements37" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC3S1A12P7ref" />
      <lrml:toTarget keyref="#statements38" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC3S2A13P1p1ref" />
      <lrml:toTarget keyref="#statements39" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC3S2A13P1p2ref" />
      <lrml:toTarget keyref="#statements40" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC3S2A13P1p3ref" />
      <lrml:toTarget keyref="#statements41" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC3S2A13P1p4ref" />
      <lrml:toTarget keyref="#statements42" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC3S2A13P1p5ref" />
      <lrml:toTarget keyref="#statements43" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC3S2A13P1p6ref" />
      <lrml:toTarget keyref="#statements44" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC3S2A13P2p1ref" />
      <lrml:toTarget keyref="#statements45" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC3S2A13P2p2ref" />
      <lrml:toTarget keyref="#statements46" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC3S2A13P2p3ref" />
      <lrml:toTarget keyref="#statements47" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC3S2A13P2p4ref" />
      <lrml:toTarget keyref="#statements48" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC3S2A13P2p5ref" />
      <lrml:toTarget keyref="#statements49" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC3S2A13P2p6ref" />
      <lrml:toTarget keyref="#statements50" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC3S2A13P3ref" />
      <lrml:toTarget keyref="#statements51" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC3S2A14P1p1ref" />
      <lrml:toTarget keyref="#statements52" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC3S2A14P1p2ref" />
      <lrml:toTarget keyref="#statements53" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC3S2A14P1p3ref" />
      <lrml:toTarget keyref="#statements54" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC3S2A14P1p4ref" />
      <lrml:toTarget keyref="#statements55" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC3S2A14P1p5ref" />
      <lrml:toTarget keyref="#statements56" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC3S2A14P1p6ref" />
      <lrml:toTarget keyref="#statements57" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC3S2A14P2p1ref" />
      <lrml:toTarget keyref="#statements58" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC3S2A14P2p2ref" />
      <lrml:toTarget keyref="#statements59" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC3S2A14P2p3ref" />
      <lrml:toTarget keyref="#statements60" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC3S2A14P2p4ref" />
      <lrml:toTarget keyref="#statements61" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC3S2A14P2p5ref" />
      <lrml:toTarget keyref="#statements62" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC3S2A14P2p6ref" />
      <lrml:toTarget keyref="#statements63" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC3S2A14P2p7ref" />
      <lrml:toTarget keyref="#statements64" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC3S2A14P3p1ref" />
      <lrml:toTarget keyref="#statements65" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC3S2A14P3p2ref" />
      <lrml:toTarget keyref="#statements66" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC3S2A14P3p3ref" />
      <lrml:toTarget keyref="#statements67" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC3S2A14P4ref" />
      <lrml:toTarget keyref="#statements68" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC3S2A14P5p2ref" />
      <lrml:toTarget keyref="#statements69" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC3S2A14P5p3ref" />
      <lrml:toTarget keyref="#statements70" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC3S2A14P5p4ref" />
      <lrml:toTarget keyref="#statements71" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC3S2A15P1p1ref" />
      <lrml:toTarget keyref="#statements72" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC3S2A15P1p2ref" />
      <lrml:toTarget keyref="#statements73" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC3S2A15P1p3ref" />
      <lrml:toTarget keyref="#statements74" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC3S2A15P1p4ref" />
      <lrml:toTarget keyref="#statements75" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC3S2A15P1p5ref" />
      <lrml:toTarget keyref="#statements76" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC3S2A15P1p6ref" />
      <lrml:toTarget keyref="#statements77" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC3S2A15P1p7ref" />
      <lrml:toTarget keyref="#statements78" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC3S2A15P1p8ref" />
      <lrml:toTarget keyref="#statements79" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC3S2A15P2ref" />
      <lrml:toTarget keyref="#statements80" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC3S2A15P3ref" />
      <lrml:toTarget keyref="#statements81" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC3S2A15P4ref" />
      <lrml:toTarget keyref="#statements82" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC3S3A16P1ref" />
      <lrml:toTarget keyref="#statements83" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC3S3A17P1ref" />
      <lrml:toTarget keyref="#statements84" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC3S3A17P1p1ref" />
      <lrml:toTarget keyref="#statements85" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC3S3A17P1p2ref" />
      <lrml:toTarget keyref="#statements86" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC3S3A17P1p3ref" />
      <lrml:toTarget keyref="#statements87" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC3S3A17P1p4ref" />
      <lrml:toTarget keyref="#statements88" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC3S3A17P1p5ref" />
      <lrml:toTarget keyref="#statements89" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC3S3A17P1p6ref" />
      <lrml:toTarget keyref="#statements90" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC3S3A17P2ref" />
      <lrml:toTarget keyref="#statements91" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC3S3A17P3p1ref" />
      <lrml:toTarget keyref="#statements92" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC3S3A17P3p2ref" />
      <lrml:toTarget keyref="#statements93" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC3S3A17P3p3ref" />
      <lrml:toTarget keyref="#statements94" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC3S3A17P3p4ref" />
      <lrml:toTarget keyref="#statements95" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC3S3A17P3p5ref" />
      <lrml:toTarget keyref="#statements96" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC3S3A18P1p1ref" />
      <lrml:toTarget keyref="#statements97" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC3S3A18P1p2ref" />
      <lrml:toTarget keyref="#statements98" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC3S3A18P1p3ref" />
      <lrml:toTarget keyref="#statements99" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC3S3A18P1p4ref" />
      <lrml:toTarget keyref="#statements100" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC3S3A18P2ref" />
      <lrml:toTarget keyref="#statements101" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC3S3A18P3ref" />
      <lrml:toTarget keyref="#statements102" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC3S3A19P1ref" />
      <lrml:toTarget keyref="#statements103" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC3S3A20P1ref" />
      <lrml:toTarget keyref="#statements104" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC3S3A20P2ref" />
      <lrml:toTarget keyref="#statements105" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC3S3A20P3ref" />
      <lrml:toTarget keyref="#statements106" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC3S3A20P4ref" />
      <lrml:toTarget keyref="#statements107" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC3S4A21P1ref" />
      <lrml:toTarget keyref="#statements108" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC3S4A21P2ref" />
      <lrml:toTarget keyref="#statements109" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC3S4A21P3ref" />
      <lrml:toTarget keyref="#statements110" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC3S4A21P4ref" />
      <lrml:toTarget keyref="#statements111" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC3S4A21P5ref" />
      <lrml:toTarget keyref="#statements112" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC3S4A21P6ref" />
      <lrml:toTarget keyref="#statements113" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC3S4A22P1ref" />
      <lrml:toTarget keyref="#statements114" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC3S4A22P2p1ref" />
      <lrml:toTarget keyref="#statements115" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC3S4A22P2p2ref" />
      <lrml:toTarget keyref="#statements116" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC3S4A22P2p3ref" />
      <lrml:toTarget keyref="#statements117" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC3S4A22P4ref" />
      <lrml:toTarget keyref="#statements118" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S1A24P1ref" />
      <lrml:toTarget keyref="#statements119" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S1A24P2ref" />
      <lrml:toTarget keyref="#statements120" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S1A24P3ref" />
      <lrml:toTarget keyref="#statements121" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S1A25P1ref" />
      <lrml:toTarget keyref="#statements122" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S1A25P2ref" />
      <lrml:toTarget keyref="#statements123" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S1A26P1ref" />
      <lrml:toTarget keyref="#statements124" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S1A26P2ref" />
      <lrml:toTarget keyref="#statements125" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S1A26P3ref" />
      <lrml:toTarget keyref="#statements126" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S1A27P1ref" />
      <lrml:toTarget keyref="#statements127" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S1A27P2p1ref" />
      <lrml:toTarget keyref="#statements128" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S1A27P2p2ref" />
      <lrml:toTarget keyref="#statements129" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S1A27P4ref" />
      <lrml:toTarget keyref="#statements130" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S1A27P5ref" />
      <lrml:toTarget keyref="#statements131" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S1A28P1ref" />
      <lrml:toTarget keyref="#statements132" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S1A28P2ref" />
      <lrml:toTarget keyref="#statements133" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S1A28P3ref" />
      <lrml:toTarget keyref="#statements134" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S1A28P3p1ref" />
      <lrml:toTarget keyref="#statements135" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S1A28P3p2ref" />
      <lrml:toTarget keyref="#statements136" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S1A28P3p5ref" />
      <lrml:toTarget keyref="#statements137" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S1A28P3p6ref" />
      <lrml:toTarget keyref="#statements138" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S1A28P3p7ref" />
      <lrml:toTarget keyref="#statements139" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S1A28P3p8ref" />
      <lrml:toTarget keyref="#statements140" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S1A28P4ref" />
      <lrml:toTarget keyref="#statements141" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S1A28P5ref" />
      <lrml:toTarget keyref="#statements142" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S1A28P6ref" />
      <lrml:toTarget keyref="#statements143" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S1A28P9ref" />
      <lrml:toTarget keyref="#statements144" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S1A28P10ref" />
      <lrml:toTarget keyref="#statements145" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S1A29P1ref" />
      <lrml:toTarget keyref="#statements146" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S1A30P1ref" />
      <lrml:toTarget keyref="#statements147" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S1A30P1p1ref" />
      <lrml:toTarget keyref="#statements148" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S1A30P1p2ref" />
      <lrml:toTarget keyref="#statements149" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S1A30P1p3ref" />
      <lrml:toTarget keyref="#statements150" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S1A30P1p4ref" />
      <lrml:toTarget keyref="#statements151" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S1A30P1p5ref" />
      <lrml:toTarget keyref="#statements152" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S1A30P1p6ref" />
      <lrml:toTarget keyref="#statements153" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S1A30P1p7ref" />
      <lrml:toTarget keyref="#statements154" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S1A30P2ref" />
      <lrml:toTarget keyref="#statements155" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S1A30P2p1ref" />
      <lrml:toTarget keyref="#statements156" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S1A30P2p2ref" />
      <lrml:toTarget keyref="#statements157" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S1A30P2p3ref" />
      <lrml:toTarget keyref="#statements158" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S1A30P2p4ref" />
      <lrml:toTarget keyref="#statements159" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S1A30P3ref" />
      <lrml:toTarget keyref="#statements160" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S1A30P4ref" />
      <lrml:toTarget keyref="#statements161" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S1A30P5ref" />
      <lrml:toTarget keyref="#statements162" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S1A31P1ref" />
      <lrml:toTarget keyref="#statements163" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S2A32P1ref" />
      <lrml:toTarget keyref="#statements164" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S2A32P3ref" />
      <lrml:toTarget keyref="#statements165" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S2A32P4ref" />
      <lrml:toTarget keyref="#statements166" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S2A33P1ref" />
      <lrml:toTarget keyref="#statements167" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S2A33P2ref" />
      <lrml:toTarget keyref="#statements168" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S2A33P3p1ref" />
      <lrml:toTarget keyref="#statements169" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S2A33P3p2ref" />
      <lrml:toTarget keyref="#statements170" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S2A33P3p3ref" />
      <lrml:toTarget keyref="#statements171" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S2A33P3p4ref" />
      <lrml:toTarget keyref="#statements172" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S2A33P4ref" />
      <lrml:toTarget keyref="#statements173" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S2A33P5ref" />
      <lrml:toTarget keyref="#statements174" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S2A34P1ref" />
      <lrml:toTarget keyref="#statements175" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S2A34P2ref" />
      <lrml:toTarget keyref="#statements176" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S2A34P3p1ref" />
      <lrml:toTarget keyref="#statements177" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S2A34P3p2ref" />
      <lrml:toTarget keyref="#statements178" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S2A34P3p3ref" />
      <lrml:toTarget keyref="#statements179" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S3A35P1ref" />
      <lrml:toTarget keyref="#statements180" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S3A35P2ref" />
      <lrml:toTarget keyref="#statements181" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S3A35P3p1ref" />
      <lrml:toTarget keyref="#statements182" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S3A35P3p2ref" />
      <lrml:toTarget keyref="#statements183" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S3A35P3p3ref" />
      <lrml:toTarget keyref="#statements184" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S3A35P7ref" />
      <lrml:toTarget keyref="#statements185" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S3A35P9ref" />
      <lrml:toTarget keyref="#statements186" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S3A35P10ref" />
      <lrml:toTarget keyref="#statements187" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S3A35P11ref" />
      <lrml:toTarget keyref="#statements188" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S3A36P1ref" />
      <lrml:toTarget keyref="#statements189" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S3A36P3p1ref" />
      <lrml:toTarget keyref="#statements190" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S3A36P3p2ref" />
      <lrml:toTarget keyref="#statements191" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S3A36P3p3ref" />
      <lrml:toTarget keyref="#statements192" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S3A36P3p4ref" />
      <lrml:toTarget keyref="#statements193" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S3A36P3p5ref" />
      <lrml:toTarget keyref="#statements194" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S3A36P3p6ref" />
      <lrml:toTarget keyref="#statements195" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S4A37P1p1ref" />
      <lrml:toTarget keyref="#statements196" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S4A37P1p2ref" />
      <lrml:toTarget keyref="#statements197" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S4A37P1p3ref" />
      <lrml:toTarget keyref="#statements198" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S4A37P2ref" />
      <lrml:toTarget keyref="#statements199" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S4A37P3ref" />
      <lrml:toTarget keyref="#statements200" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S4A37P4ref" />
      <lrml:toTarget keyref="#statements201" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S4A37P5ref" />
      <lrml:toTarget keyref="#statements202" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S4A37P6ref" />
      <lrml:toTarget keyref="#statements203" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S4A37P7ref" />
      <lrml:toTarget keyref="#statements204" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S4A38P1ref" />
      <lrml:toTarget keyref="#statements205" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S4A38P2ref" />
      <lrml:toTarget keyref="#statements206" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S4A38P3ref" />
      <lrml:toTarget keyref="#statements207" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S4A38P4ref" />
      <lrml:toTarget keyref="#statements208" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S4A38P5ref" />
      <lrml:toTarget keyref="#statements209" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S4A38P6ref" />
      <lrml:toTarget keyref="#statements210" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S4A39P1p1ref" />
      <lrml:toTarget keyref="#statements211" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S4A39P1p2ref" />
      <lrml:toTarget keyref="#statements212" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S4A39P1p3ref" />
      <lrml:toTarget keyref="#statements213" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S4A39P1p4ref" />
      <lrml:toTarget keyref="#statements214" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S4A39P1p5ref" />
      <lrml:toTarget keyref="#statements215" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S4A39P2ref" />
      <lrml:toTarget keyref="#statements216" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S5A40P2p1ref" />
      <lrml:toTarget keyref="#statements217" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S5A40P2p2ref" />
      <lrml:toTarget keyref="#statements218" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S5A40P2p3ref" />
      <lrml:toTarget keyref="#statements219" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S5A40P2p4ref" />
      <lrml:toTarget keyref="#statements220" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S5A40P2p5ref" />
      <lrml:toTarget keyref="#statements221" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S5A40P2p6ref" />
      <lrml:toTarget keyref="#statements222" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S5A40P2p7ref" />
      <lrml:toTarget keyref="#statements223" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S5A40P2p8ref" />
      <lrml:toTarget keyref="#statements224" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S5A40P2p9ref" />
      <lrml:toTarget keyref="#statements225" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S5A40P2p10ref" />
      <lrml:toTarget keyref="#statements226" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S5A40P2p11ref" />
      <lrml:toTarget keyref="#statements227" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S5A40P3ref" />
      <lrml:toTarget keyref="#statements228" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S5A40P4ref" />
      <lrml:toTarget keyref="#statements229" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S5A40P5ref" />
      <lrml:toTarget keyref="#statements230" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S5A41P1ref" />
      <lrml:toTarget keyref="#statements231" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S5A41P2ref" />
      <lrml:toTarget keyref="#statements232" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S5A41P4ref" />
      <lrml:toTarget keyref="#statements233" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S5A41P6ref" />
      <lrml:toTarget keyref="#statements234" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S5A42P2ref" />
      <lrml:toTarget keyref="#statements235" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S5A42P3ref" />
      <lrml:toTarget keyref="#statements236" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S5A42P6ref" />
      <lrml:toTarget keyref="#statements237" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S5A42P7ref" />
      <lrml:toTarget keyref="#statements238" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S5A43P1ref" />
      <lrml:toTarget keyref="#statements239" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S5A43P4ref" />
      <lrml:toTarget keyref="#statements240" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC4S5A43P5ref" />
      <lrml:toTarget keyref="#statements241" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC5A45P1ref" />
      <lrml:toTarget keyref="#statements242" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC5A45P3ref" />
      <lrml:toTarget keyref="#statements243" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC5A46P1ref" />
      <lrml:toTarget keyref="#statements244" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC5A46P2p1ref" />
      <lrml:toTarget keyref="#statements245" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC5A46P2p2ref" />
      <lrml:toTarget keyref="#statements246" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC5A46P2p5ref" />
      <lrml:toTarget keyref="#statements247" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC5A46P2p6ref" />
      <lrml:toTarget keyref="#statements248" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC5A46P3p1ref" />
      <lrml:toTarget keyref="#statements249" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC5A46P3p2ref" />
      <lrml:toTarget keyref="#statements250" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC5A47P1ref" />
      <lrml:toTarget keyref="#statements251" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC5A47P2ref" />
      <lrml:toTarget keyref="#statements252" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC5A48P1ref" />
      <lrml:toTarget keyref="#statements253" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC5A49P1ref" />
      <lrml:toTarget keyref="#statements254" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC5A49P1p1ref" />
      <lrml:toTarget keyref="#statements255" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC5A49P1p2ref" />
      <lrml:toTarget keyref="#statements256" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC5A49P1p3ref" />
      <lrml:toTarget keyref="#statements257" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC5A49P1p4ref" />
      <lrml:toTarget keyref="#statements258" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC5A49P1p5ref" />
      <lrml:toTarget keyref="#statements259" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC5A49P1p6ref" />
      <lrml:toTarget keyref="#statements260" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC5A49P2ref" />
      <lrml:toTarget keyref="#statements261" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC5A49P3ref" />
      <lrml:toTarget keyref="#statements262" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC5A49P6ref" />
      <lrml:toTarget keyref="#statements263" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC8A77P1ref" />
      <lrml:toTarget keyref="#statements264" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC8A78P1ref" />
      <lrml:toTarget keyref="#statements265" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC8A78P2ref" />
      <lrml:toTarget keyref="#statements266" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC8A79P1ref" />
      <lrml:toTarget keyref="#statements267" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC8A80P1ref" />
      <lrml:toTarget keyref="#statements268" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC8A82P1ref" />
      <lrml:toTarget keyref="#statements269" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC8A82P2ref" />
      <lrml:toTarget keyref="#statements270" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC8A82P3ref" />
      <lrml:toTarget keyref="#statements271" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC8A82P4ref" />
      <lrml:toTarget keyref="#statements272" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC8A82P5ref" />
      <lrml:toTarget keyref="#statements273" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC9A86P1ref" />
      <lrml:toTarget keyref="#statements274" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesSource keyref="#gdprC9A89P1ref" />
      <lrml:toTarget keyref="#statements275" />
    </lrml:Association>
    <lrml:Association>
      <lrml:appliesModality iri="#rioOnto:reification" />
      <lrml:toTarget keyref="#A1" />
      <lrml:toTarget keyref="#A2" />
      <lrml:toTarget keyref="#A3" />
      <lrml:toTarget keyref="#A4" />
      <lrml:toTarget keyref="#A5" />
      <lrml:toTarget keyref="#A6" />
      <lrml:toTarget keyref="#A7" />
      <lrml:toTarget keyref="#A8" />
      <lrml:toTarget keyref="#A9" />
      <lrml:toTarget keyref="#A10" />
      <lrml:toTarget keyref="#A11" />
      <lrml:toTarget keyref="#A12" />
      <lrml:toTarget keyref="#A13" />
      <lrml:toTarget keyref="#A14" />
      <lrml:toTarget keyref="#A15" />
      <lrml:toTarget keyref="#A16" />
      <lrml:toTarget keyref="#A17" />
      <lrml:toTarget keyref="#A18" />
      <lrml:toTarget keyref="#A19" />
      <lrml:toTarget keyref="#A20" />
      <lrml:toTarget keyref="#A21" />
      <lrml:toTarget keyref="#A22" />
      <lrml:toTarget keyref="#A23" />
      <lrml:toTarget keyref="#A24" />
      <lrml:toTarget keyref="#A25" />
      <lrml:toTarget keyref="#A26" />
      <lrml:toTarget keyref="#A27" />
      <lrml:toTarget keyref="#A28" />
      <lrml:toTarget keyref="#A29" />
      <lrml:toTarget keyref="#A30" />
      <lrml:toTarget keyref="#A31" />
      <lrml:toTarget keyref="#A32" />
      <lrml:toTarget keyref="#A33" />
      <lrml:toTarget keyref="#A34" />
      <lrml:toTarget keyref="#A35" />
      <lrml:toTarget keyref="#A36" />
      <lrml:toTarget keyref="#A37" />
      <lrml:toTarget keyref="#A38" />
      <lrml:toTarget keyref="#A39" />
      <lrml:toTarget keyref="#A40" />
      <lrml:toTarget keyref="#A41" />
      <lrml:toTarget keyref="#A42" />
      <lrml:toTarget keyref="#A43" />
      <lrml:toTarget keyref="#A44" />
      <lrml:toTarget keyref="#A45" />
      <lrml:toTarget keyref="#A46" />
      <lrml:toTarget keyref="#A47" />
      <lrml:toTarget keyref="#A48" />
      <lrml:toTarget keyref="#A49" />
      <lrml:toTarget keyref="#A50" />
      <lrml:toTarget keyref="#A51" />
      <lrml:toTarget keyref="#A52" />
      <lrml:toTarget keyref="#A53" />
      <lrml:toTarget keyref="#A54" />
      <lrml:toTarget keyref="#A55" />
      <lrml:toTarget keyref="#A56" />
      <lrml:toTarget keyref="#A57" />
      <lrml:toTarget keyref="#A58" />
      <lrml:toTarget keyref="#A59" />
      <lrml:toTarget keyref="#A60" />
      <lrml:toTarget keyref="#A61" />
      <lrml:toTarget keyref="#A62" />
      <lrml:toTarget keyref="#A63" />
      <lrml:toTarget keyref="#A64" />
      <lrml:toTarget keyref="#A65" />
      <lrml:toTarget keyref="#A66" />
      <lrml:toTarget keyref="#A67" />
      <lrml:toTarget keyref="#A68" />
      <lrml:toTarget keyref="#A69" />
      <lrml:toTarget keyref="#A70" />
      <lrml:toTarget keyref="#A71" />
      <lrml:toTarget keyref="#A72" />
      <lrml:toTarget keyref="#A73" />
      <lrml:toTarget keyref="#A74" />
      <lrml:toTarget keyref="#A75" />
      <lrml:toTarget keyref="#A76" />
      <lrml:toTarget keyref="#A77" />
      <lrml:toTarget keyref="#A78" />
      <lrml:toTarget keyref="#A79" />
      <lrml:toTarget keyref="#A80" />
      <lrml:toTarget keyref="#A81" />
      <lrml:toTarget keyref="#A82" />
      <lrml:toTarget keyref="#A83" />
      <lrml:toTarget keyref="#A84" />
      <lrml:toTarget keyref="#A85" />
      <lrml:toTarget keyref="#A86" />
      <lrml:toTarget keyref="#A87" />
      <lrml:toTarget keyref="#A88" />
      <lrml:toTarget keyref="#A89" />
      <lrml:toTarget keyref="#A90" />
      <lrml:toTarget keyref="#A91" />
      <lrml:toTarget keyref="#A92" />
      <lrml:toTarget keyref="#A93" />
      <lrml:toTarget keyref="#A94" />
      <lrml:toTarget keyref="#A95" />
      <lrml:toTarget keyref="#A96" />
      <lrml:toTarget keyref="#A97" />
      <lrml:toTarget keyref="#A98" />
      <lrml:toTarget keyref="#A99" />
      <lrml:toTarget keyref="#A100" />
      <lrml:toTarget keyref="#A101" />
      <lrml:toTarget keyref="#A102" />
      <lrml:toTarget keyref="#A103" />
      <lrml:toTarget keyref="#A104" />
      <lrml:toTarget keyref="#A105" />
      <lrml:toTarget keyref="#A106" />
      <lrml:toTarget keyref="#A107" />
      <lrml:toTarget keyref="#A108" />
      <lrml:toTarget keyref="#A109" />
      <lrml:toTarget keyref="#A110" />
      <lrml:toTarget keyref="#A111" />
      <lrml:toTarget keyref="#A112" />
      <lrml:toTarget keyref="#A113" />
      <lrml:toTarget keyref="#A114" />
      <lrml:toTarget keyref="#A115" />
      <lrml:toTarget keyref="#A116" />
      <lrml:toTarget keyref="#A117" />
      <lrml:toTarget keyref="#A118" />
      <lrml:toTarget keyref="#A119" />
      <lrml:toTarget keyref="#A120" />
      <lrml:toTarget keyref="#A121" />
      <lrml:toTarget keyref="#A122" />
      <lrml:toTarget keyref="#A123" />
      <lrml:toTarget keyref="#A124" />
      <lrml:toTarget keyref="#A125" />
      <lrml:toTarget keyref="#A126" />
      <lrml:toTarget keyref="#A127" />
      <lrml:toTarget keyref="#A128" />
      <lrml:toTarget keyref="#A129" />
      <lrml:toTarget keyref="#A130" />
      <lrml:toTarget keyref="#A131" />
      <lrml:toTarget keyref="#A132" />
      <lrml:toTarget keyref="#A133" />
      <lrml:toTarget keyref="#A134" />
      <lrml:toTarget keyref="#A135" />
      <lrml:toTarget keyref="#A136" />
      <lrml:toTarget keyref="#A137" />
      <lrml:toTarget keyref="#A138" />
      <lrml:toTarget keyref="#A139" />
      <lrml:toTarget keyref="#A140" />
      <lrml:toTarget keyref="#A141" />
      <lrml:toTarget keyref="#A142" />
      <lrml:toTarget keyref="#A143" />
      <lrml:toTarget keyref="#A144" />
      <lrml:toTarget keyref="#A145" />
      <lrml:toTarget keyref="#A146" />
      <lrml:toTarget keyref="#A147" />
      <lrml:toTarget keyref="#A148" />
      <lrml:toTarget keyref="#A149" />
      <lrml:toTarget keyref="#A150" />
      <lrml:toTarget keyref="#A151" />
      <lrml:toTarget keyref="#A152" />
      <lrml:toTarget keyref="#A153" />
      <lrml:toTarget keyref="#A154" />
      <lrml:toTarget keyref="#A155" />
      <lrml:toTarget keyref="#A156" />
      <lrml:toTarget keyref="#A157" />
      <lrml:toTarget keyref="#A158" />
      <lrml:toTarget keyref="#A159" />
      <lrml:toTarget keyref="#A160" />
      <lrml:toTarget keyref="#A161" />
      <lrml:toTarget keyref="#A162" />
      <lrml:toTarget keyref="#A163" />
      <lrml:toTarget keyref="#A164" />
      <lrml:toTarget keyref="#A165" />
      <lrml:toTarget keyref="#A166" />
      <lrml:toTarget keyref="#A167" />
      <lrml:toTarget keyref="#A168" />
      <lrml:toTarget keyref="#A169" />
      <lrml:toTarget keyref="#A170" />
      <lrml:toTarget keyref="#A171" />
      <lrml:toTarget keyref="#A172" />
      <lrml:toTarget keyref="#A173" />
      <lrml:toTarget keyref="#A174" />
      <lrml:toTarget keyref="#A175" />
      <lrml:toTarget keyref="#A176" />
      <lrml:toTarget keyref="#A177" />
      <lrml:toTarget keyref="#A178" />
      <lrml:toTarget keyref="#A179" />
      <lrml:toTarget keyref="#A180" />
      <lrml:toTarget keyref="#A181" />
      <lrml:toTarget keyref="#A182" />
      <lrml:toTarget keyref="#A183" />
      <lrml:toTarget keyref="#A184" />
      <lrml:toTarget keyref="#A185" />
      <lrml:toTarget keyref="#A186" />
      <lrml:toTarget keyref="#A187" />
      <lrml:toTarget keyref="#A188" />
      <lrml:toTarget keyref="#A189" />
      <lrml:toTarget keyref="#A190" />
      <lrml:toTarget keyref="#A191" />
      <lrml:toTarget keyref="#A192" />
      <lrml:toTarget keyref="#A193" />
      <lrml:toTarget keyref="#A194" />
      <lrml:toTarget keyref="#A195" />
      <lrml:toTarget keyref="#A196" />
      <lrml:toTarget keyref="#A197" />
      <lrml:toTarget keyref="#A198" />
      <lrml:toTarget keyref="#A199" />
      <lrml:toTarget keyref="#A200" />
      <lrml:toTarget keyref="#A201" />
      <lrml:toTarget keyref="#A202" />
      <lrml:toTarget keyref="#A203" />
      <lrml:toTarget keyref="#A204" />
      <lrml:toTarget keyref="#A205" />
      <lrml:toTarget keyref="#A206" />
      <lrml:toTarget keyref="#A207" />
      <lrml:toTarget keyref="#A208" />
      <lrml:toTarget keyref="#A209" />
      <lrml:toTarget keyref="#A210" />
      <lrml:toTarget keyref="#A211" />
      <lrml:toTarget keyref="#A212" />
      <lrml:toTarget keyref="#A213" />
      <lrml:toTarget keyref="#A214" />
      <lrml:toTarget keyref="#A215" />
      <lrml:toTarget keyref="#A216" />
      <lrml:toTarget keyref="#A217" />
      <lrml:toTarget keyref="#A218" />
      <lrml:toTarget keyref="#A219" />
      <lrml:toTarget keyref="#A220" />
      <lrml:toTarget keyref="#A221" />
      <lrml:toTarget keyref="#A222" />
      <lrml:toTarget keyref="#A223" />
      <lrml:toTarget keyref="#A224" />
      <lrml:toTarget keyref="#A225" />
      <lrml:toTarget keyref="#A226" />
      <lrml:toTarget keyref="#A227" />
      <lrml:toTarget keyref="#A228" />
      <lrml:toTarget keyref="#A229" />
      <lrml:toTarget keyref="#A230" />
      <lrml:toTarget keyref="#A231" />
      <lrml:toTarget keyref="#A232" />
      <lrml:toTarget keyref="#A233" />
      <lrml:toTarget keyref="#A234" />
      <lrml:toTarget keyref="#A235" />
      <lrml:toTarget keyref="#A236" />
      <lrml:toTarget keyref="#A237" />
      <lrml:toTarget keyref="#A238" />
      <lrml:toTarget keyref="#A239" />
      <lrml:toTarget keyref="#A240" />
      <lrml:toTarget keyref="#A241" />
      <lrml:toTarget keyref="#A242" />
      <lrml:toTarget keyref="#A243" />
      <lrml:toTarget keyref="#A244" />
      <lrml:toTarget keyref="#A245" />
      <lrml:toTarget keyref="#A246" />
      <lrml:toTarget keyref="#A247" />
      <lrml:toTarget keyref="#A248" />
      <lrml:toTarget keyref="#A249" />
      <lrml:toTarget keyref="#A250" />
      <lrml:toTarget keyref="#A251" />
      <lrml:toTarget keyref="#A252" />
      <lrml:toTarget keyref="#A253" />
      <lrml:toTarget keyref="#A254" />
      <lrml:toTarget keyref="#A255" />
      <lrml:toTarget keyref="#A256" />
      <lrml:toTarget keyref="#A257" />
      <lrml:toTarget keyref="#A258" />
      <lrml:toTarget keyref="#A259" />
      <lrml:toTarget keyref="#A260" />
      <lrml:toTarget keyref="#A261" />
      <lrml:toTarget keyref="#A262" />
      <lrml:toTarget keyref="#A263" />
      <lrml:toTarget keyref="#A264" />
      <lrml:toTarget keyref="#A265" />
      <lrml:toTarget keyref="#A266" />
      <lrml:toTarget keyref="#A267" />
      <lrml:toTarget keyref="#A268" />
      <lrml:toTarget keyref="#A269" />
      <lrml:toTarget keyref="#A270" />
      <lrml:toTarget keyref="#A271" />
      <lrml:toTarget keyref="#A272" />
      <lrml:toTarget keyref="#A273" />
      <lrml:toTarget keyref="#A274" />
      <lrml:toTarget keyref="#A275" />
      <lrml:toTarget keyref="#A276" />
      <lrml:toTarget keyref="#A277" />
      <lrml:toTarget keyref="#A278" />
      <lrml:toTarget keyref="#A279" />
      <lrml:toTarget keyref="#A280" />
      <lrml:toTarget keyref="#A281" />
      <lrml:toTarget keyref="#A282" />
      <lrml:toTarget keyref="#A283" />
      <lrml:toTarget keyref="#A284" />
      <lrml:toTarget keyref="#A285" />
      <lrml:toTarget keyref="#A286" />
      <lrml:toTarget keyref="#A287" />
      <lrml:toTarget keyref="#A288" />
      <lrml:toTarget keyref="#A289" />
      <lrml:toTarget keyref="#A290" />
      <lrml:toTarget keyref="#A291" />
      <lrml:toTarget keyref="#A292" />
      <lrml:toTarget keyref="#A293" />
      <lrml:toTarget keyref="#A294" />
      <lrml:toTarget keyref="#A295" />
      <lrml:toTarget keyref="#A296" />
      <lrml:toTarget keyref="#A297" />
      <lrml:toTarget keyref="#A298" />
      <lrml:toTarget keyref="#A299" />
      <lrml:toTarget keyref="#A300" />
      <lrml:toTarget keyref="#A301" />
      <lrml:toTarget keyref="#A302" />
      <lrml:toTarget keyref="#A303" />
      <lrml:toTarget keyref="#A304" />
      <lrml:toTarget keyref="#A305" />
      <lrml:toTarget keyref="#A306" />
      <lrml:toTarget keyref="#A307" />
      <lrml:toTarget keyref="#A308" />
      <lrml:toTarget keyref="#A309" />
      <lrml:toTarget keyref="#A310" />
      <lrml:toTarget keyref="#A311" />
      <lrml:toTarget keyref="#A312" />
      <lrml:toTarget keyref="#A313" />
      <lrml:toTarget keyref="#A314" />
      <lrml:toTarget keyref="#A315" />
      <lrml:toTarget keyref="#A316" />
      <lrml:toTarget keyref="#A317" />
      <lrml:toTarget keyref="#A318" />
      <lrml:toTarget keyref="#A319" />
      <lrml:toTarget keyref="#A320" />
      <lrml:toTarget keyref="#A321" />
      <lrml:toTarget keyref="#A322" />
      <lrml:toTarget keyref="#A323" />
      <lrml:toTarget keyref="#A324" />
      <lrml:toTarget keyref="#A325" />
      <lrml:toTarget keyref="#A326" />
      <lrml:toTarget keyref="#A327" />
      <lrml:toTarget keyref="#A328" />
      <lrml:toTarget keyref="#A329" />
      <lrml:toTarget keyref="#A330" />
      <lrml:toTarget keyref="#A331" />
      <lrml:toTarget keyref="#A332" />
      <lrml:toTarget keyref="#A333" />
      <lrml:toTarget keyref="#A334" />
      <lrml:toTarget keyref="#A335" />
      <lrml:toTarget keyref="#A336" />
      <lrml:toTarget keyref="#A337" />
      <lrml:toTarget keyref="#A338" />
      <lrml:toTarget keyref="#A339" />
      <lrml:toTarget keyref="#A340" />
      <lrml:toTarget keyref="#A341" />
      <lrml:toTarget keyref="#A342" />
      <lrml:toTarget keyref="#A343" />
      <lrml:toTarget keyref="#A344" />
      <lrml:toTarget keyref="#A345" />
      <lrml:toTarget keyref="#A346" />
      <lrml:toTarget keyref="#A347" />
      <lrml:toTarget keyref="#A348" />
      <lrml:toTarget keyref="#A349" />
      <lrml:toTarget keyref="#A350" />
      <lrml:toTarget keyref="#A351" />
      <lrml:toTarget keyref="#A352" />
      <lrml:toTarget keyref="#A353" />
      <lrml:toTarget keyref="#A354" />
      <lrml:toTarget keyref="#A355" />
      <lrml:toTarget keyref="#A356" />
      <lrml:toTarget keyref="#A357" />
      <lrml:toTarget keyref="#A358" />
      <lrml:toTarget keyref="#A359" />
      <lrml:toTarget keyref="#A360" />
      <lrml:toTarget keyref="#A361" />
      <lrml:toTarget keyref="#A362" />
      <lrml:toTarget keyref="#A363" />
      <lrml:toTarget keyref="#A364" />
      <lrml:toTarget keyref="#A365" />
      <lrml:toTarget keyref="#A366" />
      <lrml:toTarget keyref="#A367" />
      <lrml:toTarget keyref="#A368" />
      <lrml:toTarget keyref="#A369" />
      <lrml:toTarget keyref="#A370" />
      <lrml:toTarget keyref="#A371" />
      <lrml:toTarget keyref="#A372" />
      <lrml:toTarget keyref="#A373" />
      <lrml:toTarget keyref="#A374" />
      <lrml:toTarget keyref="#A375" />
      <lrml:toTarget keyref="#A376" />
      <lrml:toTarget keyref="#A377" />
      <lrml:toTarget keyref="#A378" />
      <lrml:toTarget keyref="#A379" />
      <lrml:toTarget keyref="#A380" />
      <lrml:toTarget keyref="#A381" />
      <lrml:toTarget keyref="#A382" />
      <lrml:toTarget keyref="#A383" />
      <lrml:toTarget keyref="#A384" />
      <lrml:toTarget keyref="#A385" />
      <lrml:toTarget keyref="#A386" />
      <lrml:toTarget keyref="#A387" />
      <lrml:toTarget keyref="#A388" />
      <lrml:toTarget keyref="#A389" />
      <lrml:toTarget keyref="#A390" />
      <lrml:toTarget keyref="#A391" />
      <lrml:toTarget keyref="#A392" />
      <lrml:toTarget keyref="#A393" />
      <lrml:toTarget keyref="#A394" />
      <lrml:toTarget keyref="#A395" />
      <lrml:toTarget keyref="#A396" />
      <lrml:toTarget keyref="#A397" />
      <lrml:toTarget keyref="#A398" />
      <lrml:toTarget keyref="#A399" />
      <lrml:toTarget keyref="#A400" />
      <lrml:toTarget keyref="#A401" />
      <lrml:toTarget keyref="#A402" />
      <lrml:toTarget keyref="#A403" />
      <lrml:toTarget keyref="#A404" />
      <lrml:toTarget keyref="#A405" />
      <lrml:toTarget keyref="#A406" />
      <lrml:toTarget keyref="#A407" />
      <lrml:toTarget keyref="#A408" />
      <lrml:toTarget keyref="#A409" />
      <lrml:toTarget keyref="#A410" />
      <lrml:toTarget keyref="#A411" />
      <lrml:toTarget keyref="#A412" />
      <lrml:toTarget keyref="#A413" />
      <lrml:toTarget keyref="#A414" />
      <lrml:toTarget keyref="#A415" />
      <lrml:toTarget keyref="#A416" />
      <lrml:toTarget keyref="#A417" />
      <lrml:toTarget keyref="#A418" />
      <lrml:toTarget keyref="#A419" />
      <lrml:toTarget keyref="#A420" />
      <lrml:toTarget keyref="#A421" />
      <lrml:toTarget keyref="#A422" />
      <lrml:toTarget keyref="#A423" />
      <lrml:toTarget keyref="#A424" />
      <lrml:toTarget keyref="#A425" />
      <lrml:toTarget keyref="#A426" />
      <lrml:toTarget keyref="#A427" />
      <lrml:toTarget keyref="#A428" />
      <lrml:toTarget keyref="#A429" />
      <lrml:toTarget keyref="#A430" />
      <lrml:toTarget keyref="#A431" />
      <lrml:toTarget keyref="#A432" />
      <lrml:toTarget keyref="#A433" />
      <lrml:toTarget keyref="#A434" />
      <lrml:toTarget keyref="#A435" />
      <lrml:toTarget keyref="#A436" />
      <lrml:toTarget keyref="#A437" />
      <lrml:toTarget keyref="#A438" />
      <lrml:toTarget keyref="#A439" />
      <lrml:toTarget keyref="#A440" />
      <lrml:toTarget keyref="#A441" />
      <lrml:toTarget keyref="#A442" />
      <lrml:toTarget keyref="#A443" />
      <lrml:toTarget keyref="#A444" />
      <lrml:toTarget keyref="#A445" />
      <lrml:toTarget keyref="#A446" />
      <lrml:toTarget keyref="#A447" />
      <lrml:toTarget keyref="#A448" />
      <lrml:toTarget keyref="#A449" />
      <lrml:toTarget keyref="#A450" />
      <lrml:toTarget keyref="#A451" />
      <lrml:toTarget keyref="#A452" />
      <lrml:toTarget keyref="#A453" />
      <lrml:toTarget keyref="#A454" />
      <lrml:toTarget keyref="#A455" />
      <lrml:toTarget keyref="#A456" />
      <lrml:toTarget keyref="#A457" />
      <lrml:toTarget keyref="#A458" />
      <lrml:toTarget keyref="#A459" />
      <lrml:toTarget keyref="#A460" />
      <lrml:toTarget keyref="#A461" />
      <lrml:toTarget keyref="#A462" />
      <lrml:toTarget keyref="#A463" />
      <lrml:toTarget keyref="#A464" />
      <lrml:toTarget keyref="#A465" />
      <lrml:toTarget keyref="#A466" />
      <lrml:toTarget keyref="#A467" />
      <lrml:toTarget keyref="#A468" />
      <lrml:toTarget keyref="#A469" />
      <lrml:toTarget keyref="#A470" />
      <lrml:toTarget keyref="#A471" />
      <lrml:toTarget keyref="#A472" />
      <lrml:toTarget keyref="#A473" />
      <lrml:toTarget keyref="#A474" />
      <lrml:toTarget keyref="#A475" />
      <lrml:toTarget keyref="#A476" />
      <lrml:toTarget keyref="#A477" />
      <lrml:toTarget keyref="#A478" />
      <lrml:toTarget keyref="#A479" />
      <lrml:toTarget keyref="#A480" />
      <lrml:toTarget keyref="#A481" />
      <lrml:toTarget keyref="#A482" />
      <lrml:toTarget keyref="#A483" />
      <lrml:toTarget keyref="#A484" />
      <lrml:toTarget keyref="#A485" />
      <lrml:toTarget keyref="#A486" />
      <lrml:toTarget keyref="#A487" />
      <lrml:toTarget keyref="#A488" />
      <lrml:toTarget keyref="#A489" />
      <lrml:toTarget keyref="#A490" />
      <lrml:toTarget keyref="#A491" />
      <lrml:toTarget keyref="#A492" />
      <lrml:toTarget keyref="#A493" />
      <lrml:toTarget keyref="#A494" />
      <lrml:toTarget keyref="#A495" />
      <lrml:toTarget keyref="#A496" />
      <lrml:toTarget keyref="#A497" />
      <lrml:toTarget keyref="#A498" />
      <lrml:toTarget keyref="#A499" />
      <lrml:toTarget keyref="#A500" />
      <lrml:toTarget keyref="#A501" />
      <lrml:toTarget keyref="#A502" />
      <lrml:toTarget keyref="#A503" />
      <lrml:toTarget keyref="#A504" />
      <lrml:toTarget keyref="#A505" />
      <lrml:toTarget keyref="#A506" />
      <lrml:toTarget keyref="#A507" />
      <lrml:toTarget keyref="#A508" />
      <lrml:toTarget keyref="#A509" />
      <lrml:toTarget keyref="#A510" />
      <lrml:toTarget keyref="#A511" />
      <lrml:toTarget keyref="#A512" />
      <lrml:toTarget keyref="#A513" />
      <lrml:toTarget keyref="#A514" />
      <lrml:toTarget keyref="#A515" />
      <lrml:toTarget keyref="#A516" />
      <lrml:toTarget keyref="#A517" />
      <lrml:toTarget keyref="#A518" />
      <lrml:toTarget keyref="#A519" />
      <lrml:toTarget keyref="#A520" />
      <lrml:toTarget keyref="#A521" />
      <lrml:toTarget keyref="#A522" />
      <lrml:toTarget keyref="#A523" />
      <lrml:toTarget keyref="#A524" />
      <lrml:toTarget keyref="#A525" />
      <lrml:toTarget keyref="#A526" />
      <lrml:toTarget keyref="#A527" />
      <lrml:toTarget keyref="#A528" />
      <lrml:toTarget keyref="#A529" />
      <lrml:toTarget keyref="#A530" />
      <lrml:toTarget keyref="#A531" />
      <lrml:toTarget keyref="#A532" />
      <lrml:toTarget keyref="#A533" />
      <lrml:toTarget keyref="#A534" />
      <lrml:toTarget keyref="#A535" />
      <lrml:toTarget keyref="#A536" />
      <lrml:toTarget keyref="#A537" />
      <lrml:toTarget keyref="#A538" />
      <lrml:toTarget keyref="#A539" />
      <lrml:toTarget keyref="#A540" />
      <lrml:toTarget keyref="#A541" />
      <lrml:toTarget keyref="#A542" />
      <lrml:toTarget keyref="#A543" />
      <lrml:toTarget keyref="#A544" />
      <lrml:toTarget keyref="#A545" />
      <lrml:toTarget keyref="#A546" />
      <lrml:toTarget keyref="#A547" />
      <lrml:toTarget keyref="#A548" />
      <lrml:toTarget keyref="#A549" />
      <lrml:toTarget keyref="#A550" />
      <lrml:toTarget keyref="#A551" />
      <lrml:toTarget keyref="#A552" />
      <lrml:toTarget keyref="#A553" />
      <lrml:toTarget keyref="#A554" />
      <lrml:toTarget keyref="#A555" />
      <lrml:toTarget keyref="#A556" />
      <lrml:toTarget keyref="#A557" />
      <lrml:toTarget keyref="#A558" />
      <lrml:toTarget keyref="#A559" />
      <lrml:toTarget keyref="#A560" />
      <lrml:toTarget keyref="#A561" />
      <lrml:toTarget keyref="#A562" />
      <lrml:toTarget keyref="#A563" />
      <lrml:toTarget keyref="#A564" />
      <lrml:toTarget keyref="#A565" />
      <lrml:toTarget keyref="#A566" />
      <lrml:toTarget keyref="#A567" />
      <lrml:toTarget keyref="#A568" />
      <lrml:toTarget keyref="#A569" />
      <lrml:toTarget keyref="#A570" />
      <lrml:toTarget keyref="#A571" />
      <lrml:toTarget keyref="#A572" />
      <lrml:toTarget keyref="#A573" />
      <lrml:toTarget keyref="#A574" />
      <lrml:toTarget keyref="#A575" />
      <lrml:toTarget keyref="#A576" />
      <lrml:toTarget keyref="#A577" />
      <lrml:toTarget keyref="#A578" />
      <lrml:toTarget keyref="#A579" />
      <lrml:toTarget keyref="#A580" />
      <lrml:toTarget keyref="#A581" />
      <lrml:toTarget keyref="#A582" />
      <lrml:toTarget keyref="#A583" />
      <lrml:toTarget keyref="#A584" />
      <lrml:toTarget keyref="#A585" />
      <lrml:toTarget keyref="#A586" />
      <lrml:toTarget keyref="#A587" />
      <lrml:toTarget keyref="#A588" />
      <lrml:toTarget keyref="#A589" />
      <lrml:toTarget keyref="#A590" />
      <lrml:toTarget keyref="#A591" />
      <lrml:toTarget keyref="#A592" />
      <lrml:toTarget keyref="#A593" />
      <lrml:toTarget keyref="#A594" />
      <lrml:toTarget keyref="#A595" />
      <lrml:toTarget keyref="#A596" />
      <lrml:toTarget keyref="#A597" />
      <lrml:toTarget keyref="#A598" />
      <lrml:toTarget keyref="#A599" />
      <lrml:toTarget keyref="#A600" />
      <lrml:toTarget keyref="#A601" />
      <lrml:toTarget keyref="#A602" />
      <lrml:toTarget keyref="#A603" />
      <lrml:toTarget keyref="#A604" />
      <lrml:toTarget keyref="#A605" />
      <lrml:toTarget keyref="#A606" />
      <lrml:toTarget keyref="#A607" />
      <lrml:toTarget keyref="#A608" />
      <lrml:toTarget keyref="#A609" />
      <lrml:toTarget keyref="#A610" />
      <lrml:toTarget keyref="#A611" />
      <lrml:toTarget keyref="#A612" />
      <lrml:toTarget keyref="#A613" />
      <lrml:toTarget keyref="#A614" />
      <lrml:toTarget keyref="#A615" />
      <lrml:toTarget keyref="#A616" />
      <lrml:toTarget keyref="#A617" />
      <lrml:toTarget keyref="#A618" />
      <lrml:toTarget keyref="#A619" />
      <lrml:toTarget keyref="#A620" />
      <lrml:toTarget keyref="#A621" />
      <lrml:toTarget keyref="#A622" />
      <lrml:toTarget keyref="#A623" />
      <lrml:toTarget keyref="#A624" />
      <lrml:toTarget keyref="#A625" />
      <lrml:toTarget keyref="#A626" />
      <lrml:toTarget keyref="#A627" />
      <lrml:toTarget keyref="#A628" />
      <lrml:toTarget keyref="#A629" />
      <lrml:toTarget keyref="#A630" />
      <lrml:toTarget keyref="#A631" />
      <lrml:toTarget keyref="#A632" />
      <lrml:toTarget keyref="#A633" />
      <lrml:toTarget keyref="#A634" />
      <lrml:toTarget keyref="#A635" />
      <lrml:toTarget keyref="#A636" />
      <lrml:toTarget keyref="#A637" />
      <lrml:toTarget keyref="#A638" />
      <lrml:toTarget keyref="#A639" />
      <lrml:toTarget keyref="#A640" />
      <lrml:toTarget keyref="#A641" />
      <lrml:toTarget keyref="#A642" />
      <lrml:toTarget keyref="#A643" />
      <lrml:toTarget keyref="#A644" />
      <lrml:toTarget keyref="#A645" />
      <lrml:toTarget keyref="#A646" />
      <lrml:toTarget keyref="#A647" />
      <lrml:toTarget keyref="#A648" />
      <lrml:toTarget keyref="#A649" />
      <lrml:toTarget keyref="#A650" />
      <lrml:toTarget keyref="#A651" />
      <lrml:toTarget keyref="#A652" />
      <lrml:toTarget keyref="#A653" />
      <lrml:toTarget keyref="#A654" />
      <lrml:toTarget keyref="#A655" />
      <lrml:toTarget keyref="#A656" />
      <lrml:toTarget keyref="#A657" />
      <lrml:toTarget keyref="#A658" />
      <lrml:toTarget keyref="#A659" />
      <lrml:toTarget keyref="#A660" />
      <lrml:toTarget keyref="#A661" />
      <lrml:toTarget keyref="#A662" />
      <lrml:toTarget keyref="#A663" />
      <lrml:toTarget keyref="#A664" />
      <lrml:toTarget keyref="#A665" />
      <lrml:toTarget keyref="#A666" />
      <lrml:toTarget keyref="#A667" />
      <lrml:toTarget keyref="#A668" />
      <lrml:toTarget keyref="#A669" />
      <lrml:toTarget keyref="#A670" />
      <lrml:toTarget keyref="#A671" />
      <lrml:toTarget keyref="#A672" />
      <lrml:toTarget keyref="#A673" />
      <lrml:toTarget keyref="#A674" />
      <lrml:toTarget keyref="#A675" />
      <lrml:toTarget keyref="#A676" />
      <lrml:toTarget keyref="#A677" />
      <lrml:toTarget keyref="#A678" />
      <lrml:toTarget keyref="#A679" />
      <lrml:toTarget keyref="#A680" />
      <lrml:toTarget keyref="#A681" />
      <lrml:toTarget keyref="#A682" />
      <lrml:toTarget keyref="#A683" />
      <lrml:toTarget keyref="#A684" />
      <lrml:toTarget keyref="#A685" />
      <lrml:toTarget keyref="#A686" />
      <lrml:toTarget keyref="#A687" />
      <lrml:toTarget keyref="#A688" />
      <lrml:toTarget keyref="#A689" />
      <lrml:toTarget keyref="#A690" />
      <lrml:toTarget keyref="#A691" />
      <lrml:toTarget keyref="#A692" />
      <lrml:toTarget keyref="#A693" />
      <lrml:toTarget keyref="#A694" />
      <lrml:toTarget keyref="#A695" />
      <lrml:toTarget keyref="#A696" />
      <lrml:toTarget keyref="#A697" />
      <lrml:toTarget keyref="#A698" />
      <lrml:toTarget keyref="#A699" />
      <lrml:toTarget keyref="#A700" />
      <lrml:toTarget keyref="#A701" />
      <lrml:toTarget keyref="#A702" />
      <lrml:toTarget keyref="#A703" />
      <lrml:toTarget keyref="#A704" />
      <lrml:toTarget keyref="#A705" />
      <lrml:toTarget keyref="#A706" />
      <lrml:toTarget keyref="#A707" />
      <lrml:toTarget keyref="#A708" />
      <lrml:toTarget keyref="#A709" />
      <lrml:toTarget keyref="#A710" />
      <lrml:toTarget keyref="#A711" />
      <lrml:toTarget keyref="#A712" />
      <lrml:toTarget keyref="#A713" />
      <lrml:toTarget keyref="#A714" />
      <lrml:toTarget keyref="#A715" />
      <lrml:toTarget keyref="#A716" />
      <lrml:toTarget keyref="#A717" />
      <lrml:toTarget keyref="#A718" />
      <lrml:toTarget keyref="#A719" />
      <lrml:toTarget keyref="#A720" />
      <lrml:toTarget keyref="#A721" />
      <lrml:toTarget keyref="#A722" />
      <lrml:toTarget keyref="#A723" />
      <lrml:toTarget keyref="#A724" />
      <lrml:toTarget keyref="#A725" />
      <lrml:toTarget keyref="#A726" />
      <lrml:toTarget keyref="#A727" />
      <lrml:toTarget keyref="#A728" />
      <lrml:toTarget keyref="#A729" />
      <lrml:toTarget keyref="#A730" />
      <lrml:toTarget keyref="#A731" />
      <lrml:toTarget keyref="#A732" />
      <lrml:toTarget keyref="#A733" />
      <lrml:toTarget keyref="#A734" />
      <lrml:toTarget keyref="#A735" />
      <lrml:toTarget keyref="#A736" />
      <lrml:toTarget keyref="#A737" />
      <lrml:toTarget keyref="#A738" />
      <lrml:toTarget keyref="#A739" />
      <lrml:toTarget keyref="#A740" />
      <lrml:toTarget keyref="#A741" />
      <lrml:toTarget keyref="#A742" />
      <lrml:toTarget keyref="#A743" />
      <lrml:toTarget keyref="#A744" />
      <lrml:toTarget keyref="#A745" />
      <lrml:toTarget keyref="#A746" />
      <lrml:toTarget keyref="#A747" />
      <lrml:toTarget keyref="#A748" />
      <lrml:toTarget keyref="#A749" />
      <lrml:toTarget keyref="#A750" />
      <lrml:toTarget keyref="#A751" />
      <lrml:toTarget keyref="#A752" />
      <lrml:toTarget keyref="#A753" />
      <lrml:toTarget keyref="#A754" />
      <lrml:toTarget keyref="#A755" />
      <lrml:toTarget keyref="#A756" />
      <lrml:toTarget keyref="#A757" />
      <lrml:toTarget keyref="#A758" />
      <lrml:toTarget keyref="#A759" />
      <lrml:toTarget keyref="#A760" />
      <lrml:toTarget keyref="#A761" />
      <lrml:toTarget keyref="#A762" />
      <lrml:toTarget keyref="#A763" />
      <lrml:toTarget keyref="#A764" />
      <lrml:toTarget keyref="#A765" />
      <lrml:toTarget keyref="#A766" />
      <lrml:toTarget keyref="#A767" />
      <lrml:toTarget keyref="#A768" />
      <lrml:toTarget keyref="#A769" />
      <lrml:toTarget keyref="#A770" />
      <lrml:toTarget keyref="#A771" />
      <lrml:toTarget keyref="#A772" />
      <lrml:toTarget keyref="#A773" />
      <lrml:toTarget keyref="#A774" />
      <lrml:toTarget keyref="#A775" />
      <lrml:toTarget keyref="#A776" />
      <lrml:toTarget keyref="#A777" />
      <lrml:toTarget keyref="#A778" />
      <lrml:toTarget keyref="#A779" />
      <lrml:toTarget keyref="#A780" />
      <lrml:toTarget keyref="#A781" />
      <lrml:toTarget keyref="#A782" />
      <lrml:toTarget keyref="#A783" />
      <lrml:toTarget keyref="#A784" />
      <lrml:toTarget keyref="#A785" />
      <lrml:toTarget keyref="#A786" />
      <lrml:toTarget keyref="#A787" />
      <lrml:toTarget keyref="#A788" />
      <lrml:toTarget keyref="#A789" />
      <lrml:toTarget keyref="#A790" />
      <lrml:toTarget keyref="#A791" />
      <lrml:toTarget keyref="#A792" />
      <lrml:toTarget keyref="#A793" />
      <lrml:toTarget keyref="#A794" />
      <lrml:toTarget keyref="#A795" />
      <lrml:toTarget keyref="#A796" />
      <lrml:toTarget keyref="#A797" />
      <lrml:toTarget keyref="#A798" />
      <lrml:toTarget keyref="#A799" />
      <lrml:toTarget keyref="#A800" />
      <lrml:toTarget keyref="#A801" />
      <lrml:toTarget keyref="#A802" />
      <lrml:toTarget keyref="#A803" />
      <lrml:toTarget keyref="#A804" />
      <lrml:toTarget keyref="#A805" />
      <lrml:toTarget keyref="#A806" />
      <lrml:toTarget keyref="#A807" />
      <lrml:toTarget keyref="#A808" />
      <lrml:toTarget keyref="#A809" />
      <lrml:toTarget keyref="#A810" />
      <lrml:toTarget keyref="#A811" />
      <lrml:toTarget keyref="#A812" />
      <lrml:toTarget keyref="#A813" />
      <lrml:toTarget keyref="#A814" />
      <lrml:toTarget keyref="#A815" />
      <lrml:toTarget keyref="#A816" />
      <lrml:toTarget keyref="#A817" />
      <lrml:toTarget keyref="#A818" />
      <lrml:toTarget keyref="#A819" />
      <lrml:toTarget keyref="#A820" />
      <lrml:toTarget keyref="#A821" />
      <lrml:toTarget keyref="#A822" />
      <lrml:toTarget keyref="#A823" />
      <lrml:toTarget keyref="#A824" />
      <lrml:toTarget keyref="#A825" />
      <lrml:toTarget keyref="#A826" />
      <lrml:toTarget keyref="#A827" />
      <lrml:toTarget keyref="#A828" />
      <lrml:toTarget keyref="#A829" />
      <lrml:toTarget keyref="#A830" />
      <lrml:toTarget keyref="#A831" />
      <lrml:toTarget keyref="#A832" />
      <lrml:toTarget keyref="#A833" />
      <lrml:toTarget keyref="#A834" />
      <lrml:toTarget keyref="#A835" />
      <lrml:toTarget keyref="#A836" />
      <lrml:toTarget keyref="#A837" />
      <lrml:toTarget keyref="#A838" />
      <lrml:toTarget keyref="#A839" />
      <lrml:toTarget keyref="#A840" />
      <lrml:toTarget keyref="#A841" />
      <lrml:toTarget keyref="#A842" />
      <lrml:toTarget keyref="#A843" />
      <lrml:toTarget keyref="#A844" />
      <lrml:toTarget keyref="#A845" />
      <lrml:toTarget keyref="#A846" />
      <lrml:toTarget keyref="#A847" />
      <lrml:toTarget keyref="#A848" />
      <lrml:toTarget keyref="#A849" />
      <lrml:toTarget keyref="#A850" />
      <lrml:toTarget keyref="#A851" />
      <lrml:toTarget keyref="#A852" />
      <lrml:toTarget keyref="#A853" />
      <lrml:toTarget keyref="#A854" />
      <lrml:toTarget keyref="#A855" />
      <lrml:toTarget keyref="#A856" />
      <lrml:toTarget keyref="#A857" />
      <lrml:toTarget keyref="#A858" />
      <lrml:toTarget keyref="#A859" />
      <lrml:toTarget keyref="#A860" />
      <lrml:toTarget keyref="#A861" />
      <lrml:toTarget keyref="#A862" />
      <lrml:toTarget keyref="#A863" />
      <lrml:toTarget keyref="#A864" />
      <lrml:toTarget keyref="#A865" />
      <lrml:toTarget keyref="#A866" />
      <lrml:toTarget keyref="#A867" />
      <lrml:toTarget keyref="#A868" />
      <lrml:toTarget keyref="#A869" />
      <lrml:toTarget keyref="#A870" />
      <lrml:toTarget keyref="#A871" />
      <lrml:toTarget keyref="#A872" />
      <lrml:toTarget keyref="#A873" />
      <lrml:toTarget keyref="#A874" />
      <lrml:toTarget keyref="#A875" />
      <lrml:toTarget keyref="#A876" />
      <lrml:toTarget keyref="#A877" />
      <lrml:toTarget keyref="#A878" />
      <lrml:toTarget keyref="#A879" />
      <lrml:toTarget keyref="#A880" />
      <lrml:toTarget keyref="#A881" />
      <lrml:toTarget keyref="#A882" />
      <lrml:toTarget keyref="#A883" />
      <lrml:toTarget keyref="#A884" />
      <lrml:toTarget keyref="#A885" />
      <lrml:toTarget keyref="#A886" />
      <lrml:toTarget keyref="#A887" />
      <lrml:toTarget keyref="#A888" />
      <lrml:toTarget keyref="#A889" />
      <lrml:toTarget keyref="#A890" />
      <lrml:toTarget keyref="#A891" />
      <lrml:toTarget keyref="#A892" />
      <lrml:toTarget keyref="#A893" />
      <lrml:toTarget keyref="#A894" />
      <lrml:toTarget keyref="#A895" />
      <lrml:toTarget keyref="#A896" />
      <lrml:toTarget keyref="#A897" />
      <lrml:toTarget keyref="#A898" />
      <lrml:toTarget keyref="#A899" />
      <lrml:toTarget keyref="#A900" />
      <lrml:toTarget keyref="#A901" />
      <lrml:toTarget keyref="#A902" />
      <lrml:toTarget keyref="#A903" />
      <lrml:toTarget keyref="#A904" />
      <lrml:toTarget keyref="#A905" />
      <lrml:toTarget keyref="#A906" />
      <lrml:toTarget keyref="#A907" />
      <lrml:toTarget keyref="#A908" />
      <lrml:toTarget keyref="#A909" />
      <lrml:toTarget keyref="#A910" />
      <lrml:toTarget keyref="#A911" />
      <lrml:toTarget keyref="#A912" />
      <lrml:toTarget keyref="#A913" />
      <lrml:toTarget keyref="#A914" />
      <lrml:toTarget keyref="#A915" />
      <lrml:toTarget keyref="#A916" />
      <lrml:toTarget keyref="#A917" />
      <lrml:toTarget keyref="#A918" />
      <lrml:toTarget keyref="#A919" />
      <lrml:toTarget keyref="#A920" />
      <lrml:toTarget keyref="#A921" />
      <lrml:toTarget keyref="#A922" />
      <lrml:toTarget keyref="#A923" />
      <lrml:toTarget keyref="#A924" />
      <lrml:toTarget keyref="#A925" />
      <lrml:toTarget keyref="#A926" />
      <lrml:toTarget keyref="#A927" />
      <lrml:toTarget keyref="#A928" />
      <lrml:toTarget keyref="#A929" />
      <lrml:toTarget keyref="#A930" />
      <lrml:toTarget keyref="#A931" />
      <lrml:toTarget keyref="#A932" />
      <lrml:toTarget keyref="#A933" />
      <lrml:toTarget keyref="#A934" />
      <lrml:toTarget keyref="#A935" />
      <lrml:toTarget keyref="#A936" />
      <lrml:toTarget keyref="#A937" />
      <lrml:toTarget keyref="#A938" />
      <lrml:toTarget keyref="#A939" />
      <lrml:toTarget keyref="#A940" />
      <lrml:toTarget keyref="#A941" />
      <lrml:toTarget keyref="#A942" />
      <lrml:toTarget keyref="#A943" />
      <lrml:toTarget keyref="#A944" />
      <lrml:toTarget keyref="#A945" />
      <lrml:toTarget keyref="#A946" />
      <lrml:toTarget keyref="#A947" />
      <lrml:toTarget keyref="#A948" />
      <lrml:toTarget keyref="#A949" />
      <lrml:toTarget keyref="#A950" />
      <lrml:toTarget keyref="#A951" />
      <lrml:toTarget keyref="#A952" />
      <lrml:toTarget keyref="#A953" />
      <lrml:toTarget keyref="#A954" />
      <lrml:toTarget keyref="#A955" />
      <lrml:toTarget keyref="#A956" />
      <lrml:toTarget keyref="#A957" />
      <lrml:toTarget keyref="#A958" />
      <lrml:toTarget keyref="#A959" />
      <lrml:toTarget keyref="#A960" />
      <lrml:toTarget keyref="#A961" />
      <lrml:toTarget keyref="#A962" />
      <lrml:toTarget keyref="#A963" />
      <lrml:toTarget keyref="#A964" />
      <lrml:toTarget keyref="#A965" />
      <lrml:toTarget keyref="#A966" />
      <lrml:toTarget keyref="#A967" />
      <lrml:toTarget keyref="#A968" />
      <lrml:toTarget keyref="#A969" />
      <lrml:toTarget keyref="#A970" />
      <lrml:toTarget keyref="#A971" />
      <lrml:toTarget keyref="#A972" />
      <lrml:toTarget keyref="#A973" />
      <lrml:toTarget keyref="#A974" />
      <lrml:toTarget keyref="#A975" />
      <lrml:toTarget keyref="#A976" />
      <lrml:toTarget keyref="#A977" />
      <lrml:toTarget keyref="#A978" />
      <lrml:toTarget keyref="#A979" />
      <lrml:toTarget keyref="#A980" />
      <lrml:toTarget keyref="#A981" />
      <lrml:toTarget keyref="#A982" />
      <lrml:toTarget keyref="#A983" />
      <lrml:toTarget keyref="#A984" />
      <lrml:toTarget keyref="#A985" />
      <lrml:toTarget keyref="#A986" />
      <lrml:toTarget keyref="#A987" />
      <lrml:toTarget keyref="#A988" />
      <lrml:toTarget keyref="#A989" />
      <lrml:toTarget keyref="#A990" />
      <lrml:toTarget keyref="#A991" />
      <lrml:toTarget keyref="#A992" />
      <lrml:toTarget keyref="#A993" />
      <lrml:toTarget keyref="#A994" />
      <lrml:toTarget keyref="#A995" />
      <lrml:toTarget keyref="#A996" />
      <lrml:toTarget keyref="#A997" />
      <lrml:toTarget keyref="#A998" />
      <lrml:toTarget keyref="#A999" />
      <lrml:toTarget keyref="#A1000" />
      <lrml:toTarget keyref="#A1001" />
      <lrml:toTarget keyref="#A1002" />
      <lrml:toTarget keyref="#A1003" />
      <lrml:toTarget keyref="#A1004" />
      <lrml:toTarget keyref="#A1005" />
      <lrml:toTarget keyref="#A1006" />
      <lrml:toTarget keyref="#A1007" />
      <lrml:toTarget keyref="#A1008" />
      <lrml:toTarget keyref="#A1009" />
      <lrml:toTarget keyref="#A1010" />
      <lrml:toTarget keyref="#A1011" />
      <lrml:toTarget keyref="#A1012" />
      <lrml:toTarget keyref="#A1013" />
      <lrml:toTarget keyref="#A1014" />
      <lrml:toTarget keyref="#A1015" />
      <lrml:toTarget keyref="#A1016" />
      <lrml:toTarget keyref="#A1017" />
      <lrml:toTarget keyref="#A1018" />
      <lrml:toTarget keyref="#A1019" />
      <lrml:toTarget keyref="#A1020" />
      <lrml:toTarget keyref="#A1021" />
      <lrml:toTarget keyref="#A1022" />
      <lrml:toTarget keyref="#A1023" />
      <lrml:toTarget keyref="#A1024" />
      <lrml:toTarget keyref="#A1025" />
      <lrml:toTarget keyref="#A1026" />
      <lrml:toTarget keyref="#A1027" />
      <lrml:toTarget keyref="#A1028" />
      <lrml:toTarget keyref="#A1029" />
      <lrml:toTarget keyref="#A1030" />
      <lrml:toTarget keyref="#A1031" />
      <lrml:toTarget keyref="#A1032" />
      <lrml:toTarget keyref="#A1033" />
      <lrml:toTarget keyref="#A1034" />
      <lrml:toTarget keyref="#A1035" />
      <lrml:toTarget keyref="#A1036" />
      <lrml:toTarget keyref="#A1037" />
      <lrml:toTarget keyref="#A1038" />
      <lrml:toTarget keyref="#A1039" />
      <lrml:toTarget keyref="#A1040" />
      <lrml:toTarget keyref="#A1041" />
      <lrml:toTarget keyref="#A1042" />
      <lrml:toTarget keyref="#A1043" />
      <lrml:toTarget keyref="#A1044" />
      <lrml:toTarget keyref="#A1045" />
      <lrml:toTarget keyref="#A1046" />
      <lrml:toTarget keyref="#A1047" />
      <lrml:toTarget keyref="#A1048" />
      <lrml:toTarget keyref="#A1049" />
      <lrml:toTarget keyref="#A1050" />
      <lrml:toTarget keyref="#A1051" />
      <lrml:toTarget keyref="#A1052" />
      <lrml:toTarget keyref="#A1053" />
      <lrml:toTarget keyref="#A1054" />
      <lrml:toTarget keyref="#A1055" />
      <lrml:toTarget keyref="#A1056" />
      <lrml:toTarget keyref="#A1057" />
      <lrml:toTarget keyref="#A1058" />
      <lrml:toTarget keyref="#A1059" />
      <lrml:toTarget keyref="#A1060" />
      <lrml:toTarget keyref="#A1061" />
      <lrml:toTarget keyref="#A1062" />
      <lrml:toTarget keyref="#A1063" />
      <lrml:toTarget keyref="#A1064" />
      <lrml:toTarget keyref="#A1065" />
      <lrml:toTarget keyref="#A1066" />
      <lrml:toTarget keyref="#A1067" />
      <lrml:toTarget keyref="#A1068" />
      <lrml:toTarget keyref="#A1069" />
      <lrml:toTarget keyref="#A1070" />
      <lrml:toTarget keyref="#A1071" />
      <lrml:toTarget keyref="#A1072" />
      <lrml:toTarget keyref="#A1073" />
      <lrml:toTarget keyref="#A1074" />
      <lrml:toTarget keyref="#A1075" />
      <lrml:toTarget keyref="#A1076" />
      <lrml:toTarget keyref="#A1077" />
      <lrml:toTarget keyref="#A1078" />
      <lrml:toTarget keyref="#A1079" />
      <lrml:toTarget keyref="#A1080" />
      <lrml:toTarget keyref="#A1081" />
      <lrml:toTarget keyref="#A1082" />
      <lrml:toTarget keyref="#A1083" />
      <lrml:toTarget keyref="#A1084" />
      <lrml:toTarget keyref="#A1085" />
      <lrml:toTarget keyref="#A1086" />
      <lrml:toTarget keyref="#A1087" />
      <lrml:toTarget keyref="#A1088" />
      <lrml:toTarget keyref="#A1089" />
      <lrml:toTarget keyref="#A1090" />
      <lrml:toTarget keyref="#A1091" />
      <lrml:toTarget keyref="#A1092" />
      <lrml:toTarget keyref="#A1093" />
      <lrml:toTarget keyref="#A1094" />
      <lrml:toTarget keyref="#A1095" />
      <lrml:toTarget keyref="#A1096" />
      <lrml:toTarget keyref="#A1097" />
      <lrml:toTarget keyref="#A1098" />
      <lrml:toTarget keyref="#A1099" />
      <lrml:toTarget keyref="#A1100" />
      <lrml:toTarget keyref="#A1101" />
      <lrml:toTarget keyref="#A1102" />
      <lrml:toTarget keyref="#A1103" />
      <lrml:toTarget keyref="#A1104" />
      <lrml:toTarget keyref="#A1105" />
      <lrml:toTarget keyref="#A1106" />
      <lrml:toTarget keyref="#A1107" />
      <lrml:toTarget keyref="#A1108" />
      <lrml:toTarget keyref="#A1109" />
      <lrml:toTarget keyref="#A1110" />
      <lrml:toTarget keyref="#A1111" />
      <lrml:toTarget keyref="#A1112" />
      <lrml:toTarget keyref="#A1113" />
      <lrml:toTarget keyref="#A1114" />
      <lrml:toTarget keyref="#A1115" />
      <lrml:toTarget keyref="#A1116" />
      <lrml:toTarget keyref="#A1117" />
      <lrml:toTarget keyref="#A1118" />
      <lrml:toTarget keyref="#A1119" />
      <lrml:toTarget keyref="#A1120" />
      <lrml:toTarget keyref="#A1121" />
      <lrml:toTarget keyref="#A1122" />
      <lrml:toTarget keyref="#A1123" />
      <lrml:toTarget keyref="#A1124" />
      <lrml:toTarget keyref="#A1125" />
      <lrml:toTarget keyref="#A1126" />
      <lrml:toTarget keyref="#A1127" />
      <lrml:toTarget keyref="#A1128" />
      <lrml:toTarget keyref="#A1129" />
      <lrml:toTarget keyref="#A1130" />
      <lrml:toTarget keyref="#A1131" />
      <lrml:toTarget keyref="#A1132" />
      <lrml:toTarget keyref="#A1133" />
      <lrml:toTarget keyref="#A1134" />
      <lrml:toTarget keyref="#A1135" />
      <lrml:toTarget keyref="#A1136" />
      <lrml:toTarget keyref="#A1137" />
      <lrml:toTarget keyref="#A1138" />
      <lrml:toTarget keyref="#A1139" />
      <lrml:toTarget keyref="#A1140" />
      <lrml:toTarget keyref="#A1141" />
      <lrml:toTarget keyref="#A1142" />
      <lrml:toTarget keyref="#A1143" />
      <lrml:toTarget keyref="#A1144" />
      <lrml:toTarget keyref="#A1145" />
      <lrml:toTarget keyref="#A1146" />
      <lrml:toTarget keyref="#A1147" />
      <lrml:toTarget keyref="#A1148" />
      <lrml:toTarget keyref="#A1149" />
      <lrml:toTarget keyref="#A1150" />
      <lrml:toTarget keyref="#A1151" />
      <lrml:toTarget keyref="#A1152" />
      <lrml:toTarget keyref="#A1153" />
      <lrml:toTarget keyref="#A1154" />
      <lrml:toTarget keyref="#A1155" />
      <lrml:toTarget keyref="#A1156" />
      <lrml:toTarget keyref="#A1157" />
      <lrml:toTarget keyref="#A1158" />
      <lrml:toTarget keyref="#A1159" />
      <lrml:toTarget keyref="#A1160" />
      <lrml:toTarget keyref="#A1161" />
      <lrml:toTarget keyref="#A1162" />
      <lrml:toTarget keyref="#A1163" />
      <lrml:toTarget keyref="#A1164" />
      <lrml:toTarget keyref="#A1165" />
      <lrml:toTarget keyref="#A1166" />
      <lrml:toTarget keyref="#A1167" />
      <lrml:toTarget keyref="#A1168" />
      <lrml:toTarget keyref="#A1169" />
      <lrml:toTarget keyref="#A1170" />
      <lrml:toTarget keyref="#A1171" />
      <lrml:toTarget keyref="#A1172" />
      <lrml:toTarget keyref="#A1173" />
      <lrml:toTarget keyref="#A1174" />
      <lrml:toTarget keyref="#A1175" />
      <lrml:toTarget keyref="#A1176" />
      <lrml:toTarget keyref="#A1177" />
      <lrml:toTarget keyref="#A1178" />
      <lrml:toTarget keyref="#A1179" />
      <lrml:toTarget keyref="#A1180" />
      <lrml:toTarget keyref="#A1181" />
      <lrml:toTarget keyref="#A1182" />
      <lrml:toTarget keyref="#A1183" />
      <lrml:toTarget keyref="#A1184" />
      <lrml:toTarget keyref="#A1185" />
      <lrml:toTarget keyref="#A1186" />
      <lrml:toTarget keyref="#A1187" />
      <lrml:toTarget keyref="#A1188" />
      <lrml:toTarget keyref="#A1189" />
      <lrml:toTarget keyref="#A1190" />
      <lrml:toTarget keyref="#A1191" />
      <lrml:toTarget keyref="#A1192" />
      <lrml:toTarget keyref="#A1193" />
      <lrml:toTarget keyref="#A1194" />
      <lrml:toTarget keyref="#A1195" />
      <lrml:toTarget keyref="#A1196" />
      <lrml:toTarget keyref="#A1197" />
      <lrml:toTarget keyref="#A1198" />
      <lrml:toTarget keyref="#A1199" />
      <lrml:toTarget keyref="#A1200" />
      <lrml:toTarget keyref="#A1201" />
      <lrml:toTarget keyref="#A1202" />
      <lrml:toTarget keyref="#A1203" />
      <lrml:toTarget keyref="#A1204" />
      <lrml:toTarget keyref="#A1205" />
      <lrml:toTarget keyref="#A1206" />
      <lrml:toTarget keyref="#A1207" />
      <lrml:toTarget keyref="#A1208" />
      <lrml:toTarget keyref="#A1209" />
      <lrml:toTarget keyref="#A1210" />
      <lrml:toTarget keyref="#A1211" />
      <lrml:toTarget keyref="#A1212" />
      <lrml:toTarget keyref="#A1213" />
      <lrml:toTarget keyref="#A1214" />
      <lrml:toTarget keyref="#A1215" />
      <lrml:toTarget keyref="#A1216" />
      <lrml:toTarget keyref="#A1217" />
      <lrml:toTarget keyref="#A1218" />
      <lrml:toTarget keyref="#A1219" />
      <lrml:toTarget keyref="#A1220" />
      <lrml:toTarget keyref="#A1221" />
      <lrml:toTarget keyref="#A1222" />
      <lrml:toTarget keyref="#A1223" />
      <lrml:toTarget keyref="#A1224" />
      <lrml:toTarget keyref="#A1225" />
      <lrml:toTarget keyref="#A1226" />
      <lrml:toTarget keyref="#A1227" />
      <lrml:toTarget keyref="#A1228" />
      <lrml:toTarget keyref="#A1229" />
      <lrml:toTarget keyref="#A1230" />
      <lrml:toTarget keyref="#A1231" />
      <lrml:toTarget keyref="#A1232" />
      <lrml:toTarget keyref="#A1233" />
      <lrml:toTarget keyref="#A1234" />
      <lrml:toTarget keyref="#A1235" />
      <lrml:toTarget keyref="#A1236" />
      <lrml:toTarget keyref="#A1237" />
      <lrml:toTarget keyref="#A1238" />
      <lrml:toTarget keyref="#A1239" />
      <lrml:toTarget keyref="#A1240" />
      <lrml:toTarget keyref="#A1241" />
      <lrml:toTarget keyref="#A1242" />
      <lrml:toTarget keyref="#A1243" />
      <lrml:toTarget keyref="#A1244" />
      <lrml:toTarget keyref="#A1245" />
      <lrml:toTarget keyref="#A1246" />
      <lrml:toTarget keyref="#A1247" />
      <lrml:toTarget keyref="#A1248" />
      <lrml:toTarget keyref="#A1249" />
      <lrml:toTarget keyref="#A1250" />
      <lrml:toTarget keyref="#A1251" />
      <lrml:toTarget keyref="#A1252" />
      <lrml:toTarget keyref="#A1253" />
      <lrml:toTarget keyref="#A1254" />
      <lrml:toTarget keyref="#A1255" />
      <lrml:toTarget keyref="#A1256" />
      <lrml:toTarget keyref="#A1257" />
      <lrml:toTarget keyref="#A1258" />
      <lrml:toTarget keyref="#A1259" />
      <lrml:toTarget keyref="#A1260" />
      <lrml:toTarget keyref="#A1261" />
      <lrml:toTarget keyref="#A1262" />
      <lrml:toTarget keyref="#A1263" />
      <lrml:toTarget keyref="#A1264" />
      <lrml:toTarget keyref="#A1265" />
      <lrml:toTarget keyref="#A1266" />
      <lrml:toTarget keyref="#A1267" />
      <lrml:toTarget keyref="#A1268" />
      <lrml:toTarget keyref="#A1269" />
      <lrml:toTarget keyref="#A1270" />
      <lrml:toTarget keyref="#A1271" />
      <lrml:toTarget keyref="#A1272" />
      <lrml:toTarget keyref="#A1273" />
      <lrml:toTarget keyref="#A1274" />
      <lrml:toTarget keyref="#A1275" />
      <lrml:toTarget keyref="#A1276" />
      <lrml:toTarget keyref="#A1277" />
      <lrml:toTarget keyref="#A1278" />
      <lrml:toTarget keyref="#A1279" />
      <lrml:toTarget keyref="#A1280" />
      <lrml:toTarget keyref="#A1281" />
      <lrml:toTarget keyref="#A1282" />
      <lrml:toTarget keyref="#A1283" />
      <lrml:toTarget keyref="#A1284" />
      <lrml:toTarget keyref="#A1285" />
      <lrml:toTarget keyref="#A1286" />
      <lrml:toTarget keyref="#A1287" />
      <lrml:toTarget keyref="#A1288" />
      <lrml:toTarget keyref="#A1289" />
      <lrml:toTarget keyref="#A1290" />
      <lrml:toTarget keyref="#A1291" />
      <lrml:toTarget keyref="#A1292" />
      <lrml:toTarget keyref="#A1293" />
      <lrml:toTarget keyref="#A1294" />
      <lrml:toTarget keyref="#A1295" />
      <lrml:toTarget keyref="#A1296" />
      <lrml:toTarget keyref="#A1297" />
      <lrml:toTarget keyref="#A1298" />
      <lrml:toTarget keyref="#A1299" />
      <lrml:toTarget keyref="#A1300" />
      <lrml:toTarget keyref="#A1301" />
      <lrml:toTarget keyref="#A1302" />
      <lrml:toTarget keyref="#A1303" />
      <lrml:toTarget keyref="#A1304" />
      <lrml:toTarget keyref="#A1305" />
      <lrml:toTarget keyref="#A1306" />
      <lrml:toTarget keyref="#A1307" />
      <lrml:toTarget keyref="#A1308" />
      <lrml:toTarget keyref="#A1309" />
      <lrml:toTarget keyref="#A1310" />
      <lrml:toTarget keyref="#A1311" />
      <lrml:toTarget keyref="#A1312" />
      <lrml:toTarget keyref="#A1313" />
      <lrml:toTarget keyref="#A1314" />
      <lrml:toTarget keyref="#A1315" />
      <lrml:toTarget keyref="#A1316" />
      <lrml:toTarget keyref="#A1317" />
      <lrml:toTarget keyref="#A1318" />
      <lrml:toTarget keyref="#A1319" />
      <lrml:toTarget keyref="#A1320" />
      <lrml:toTarget keyref="#A1321" />
      <lrml:toTarget keyref="#A1322" />
      <lrml:toTarget keyref="#A1323" />
      <lrml:toTarget keyref="#A1324" />
      <lrml:toTarget keyref="#A1325" />
      <lrml:toTarget keyref="#A1326" />
      <lrml:toTarget keyref="#A1327" />
      <lrml:toTarget keyref="#A1328" />
      <lrml:toTarget keyref="#A1329" />
      <lrml:toTarget keyref="#A1330" />
      <lrml:toTarget keyref="#A1331" />
      <lrml:toTarget keyref="#A1332" />
      <lrml:toTarget keyref="#A1333" />
      <lrml:toTarget keyref="#A1334" />
      <lrml:toTarget keyref="#A1335" />
      <lrml:toTarget keyref="#A1336" />
      <lrml:toTarget keyref="#A1337" />
      <lrml:toTarget keyref="#A1338" />
      <lrml:toTarget keyref="#A1339" />
      <lrml:toTarget keyref="#A1340" />
      <lrml:toTarget keyref="#A1341" />
      <lrml:toTarget keyref="#A1342" />
      <lrml:toTarget keyref="#A1343" />
      <lrml:toTarget keyref="#A1344" />
      <lrml:toTarget keyref="#A1345" />
      <lrml:toTarget keyref="#A1346" />
      <lrml:toTarget keyref="#A1347" />
      <lrml:toTarget keyref="#A1348" />
      <lrml:toTarget keyref="#A1349" />
      <lrml:toTarget keyref="#A1350" />
      <lrml:toTarget keyref="#A1351" />
      <lrml:toTarget keyref="#A1352" />
      <lrml:toTarget keyref="#A1353" />
      <lrml:toTarget keyref="#A1354" />
      <lrml:toTarget keyref="#A1355" />
      <lrml:toTarget keyref="#A1356" />
      <lrml:toTarget keyref="#A1357" />
      <lrml:toTarget keyref="#A1358" />
      <lrml:toTarget keyref="#A1359" />
      <lrml:toTarget keyref="#A1360" />
      <lrml:toTarget keyref="#A1361" />
      <lrml:toTarget keyref="#A1362" />
      <lrml:toTarget keyref="#A1363" />
      <lrml:toTarget keyref="#A1364" />
      <lrml:toTarget keyref="#A1365" />
      <lrml:toTarget keyref="#A1366" />
      <lrml:toTarget keyref="#A1367" />
      <lrml:toTarget keyref="#A1368" />
      <lrml:toTarget keyref="#A1369" />
      <lrml:toTarget keyref="#A1370" />
      <lrml:toTarget keyref="#A1371" />
      <lrml:toTarget keyref="#A1372" />
      <lrml:toTarget keyref="#A1373" />
      <lrml:toTarget keyref="#A1374" />
      <lrml:toTarget keyref="#A1375" />
      <lrml:toTarget keyref="#A1376" />
      <lrml:toTarget keyref="#A1377" />
      <lrml:toTarget keyref="#A1378" />
      <lrml:toTarget keyref="#A1379" />
      <lrml:toTarget keyref="#A1380" />
      <lrml:toTarget keyref="#A1381" />
      <lrml:toTarget keyref="#A1382" />
      <lrml:toTarget keyref="#A1383" />
      <lrml:toTarget keyref="#A1384" />
      <lrml:toTarget keyref="#A1385" />
      <lrml:toTarget keyref="#A1386" />
      <lrml:toTarget keyref="#A1387" />
      <lrml:toTarget keyref="#A1388" />
      <lrml:toTarget keyref="#A1389" />
      <lrml:toTarget keyref="#A1390" />
      <lrml:toTarget keyref="#A1391" />
      <lrml:toTarget keyref="#A1392" />
      <lrml:toTarget keyref="#A1393" />
      <lrml:toTarget keyref="#A1394" />
      <lrml:toTarget keyref="#A1395" />
      <lrml:toTarget keyref="#A1396" />
      <lrml:toTarget keyref="#A1397" />
      <lrml:toTarget keyref="#A1398" />
      <lrml:toTarget keyref="#A1399" />
      <lrml:toTarget keyref="#A1400" />
      <lrml:toTarget keyref="#A1401" />
      <lrml:toTarget keyref="#A1402" />
      <lrml:toTarget keyref="#A1403" />
      <lrml:toTarget keyref="#A1404" />
      <lrml:toTarget keyref="#A1405" />
      <lrml:toTarget keyref="#A1406" />
      <lrml:toTarget keyref="#A1407" />
      <lrml:toTarget keyref="#A1408" />
      <lrml:toTarget keyref="#A1409" />
      <lrml:toTarget keyref="#A1410" />
      <lrml:toTarget keyref="#A1411" />
      <lrml:toTarget keyref="#A1412" />
      <lrml:toTarget keyref="#A1413" />
      <lrml:toTarget keyref="#A1414" />
      <lrml:toTarget keyref="#A1415" />
      <lrml:toTarget keyref="#A1416" />
      <lrml:toTarget keyref="#A1417" />
      <lrml:toTarget keyref="#A1418" />
      <lrml:toTarget keyref="#A1419" />
      <lrml:toTarget keyref="#A1420" />
      <lrml:toTarget keyref="#A1421" />
      <lrml:toTarget keyref="#A1422" />
      <lrml:toTarget keyref="#A1423" />
      <lrml:toTarget keyref="#A1424" />
      <lrml:toTarget keyref="#A1425" />
      <lrml:toTarget keyref="#A1426" />
      <lrml:toTarget keyref="#A1427" />
      <lrml:toTarget keyref="#A1428" />
      <lrml:toTarget keyref="#A1429" />
      <lrml:toTarget keyref="#A1430" />
      <lrml:toTarget keyref="#A1431" />
      <lrml:toTarget keyref="#A1432" />
      <lrml:toTarget keyref="#A1433" />
      <lrml:toTarget keyref="#A1434" />
      <lrml:toTarget keyref="#A1435" />
      <lrml:toTarget keyref="#A1436" />
      <lrml:toTarget keyref="#A1437" />
      <lrml:toTarget keyref="#A1438" />
      <lrml:toTarget keyref="#A1439" />
      <lrml:toTarget keyref="#A1440" />
      <lrml:toTarget keyref="#A1441" />
      <lrml:toTarget keyref="#A1442" />
      <lrml:toTarget keyref="#A1443" />
      <lrml:toTarget keyref="#A1444" />
      <lrml:toTarget keyref="#A1445" />
      <lrml:toTarget keyref="#A1446" />
      <lrml:toTarget keyref="#A1447" />
      <lrml:toTarget keyref="#A1448" />
      <lrml:toTarget keyref="#A1449" />
      <lrml:toTarget keyref="#A1450" />
      <lrml:toTarget keyref="#A1451" />
      <lrml:toTarget keyref="#A1452" />
      <lrml:toTarget keyref="#A1453" />
      <lrml:toTarget keyref="#A1454" />
      <lrml:toTarget keyref="#A1455" />
      <lrml:toTarget keyref="#A1456" />
      <lrml:toTarget keyref="#A1457" />
      <lrml:toTarget keyref="#A1458" />
      <lrml:toTarget keyref="#A1459" />
      <lrml:toTarget keyref="#A1460" />
      <lrml:toTarget keyref="#A1461" />
      <lrml:toTarget keyref="#A1462" />
      <lrml:toTarget keyref="#A1463" />
      <lrml:toTarget keyref="#A1464" />
      <lrml:toTarget keyref="#A1465" />
      <lrml:toTarget keyref="#A1466" />
      <lrml:toTarget keyref="#A1467" />
      <lrml:toTarget keyref="#A1468" />
      <lrml:toTarget keyref="#A1469" />
      <lrml:toTarget keyref="#A1470" />
      <lrml:toTarget keyref="#A1471" />
      <lrml:toTarget keyref="#A1472" />
      <lrml:toTarget keyref="#A1473" />
      <lrml:toTarget keyref="#A1474" />
      <lrml:toTarget keyref="#A1475" />
      <lrml:toTarget keyref="#A1476" />
      <lrml:toTarget keyref="#A1477" />
      <lrml:toTarget keyref="#A1478" />
      <lrml:toTarget keyref="#A1479" />
      <lrml:toTarget keyref="#A1480" />
      <lrml:toTarget keyref="#A1481" />
      <lrml:toTarget keyref="#A1482" />
      <lrml:toTarget keyref="#A1483" />
      <lrml:toTarget keyref="#A1484" />
      <lrml:toTarget keyref="#A1485" />
      <lrml:toTarget keyref="#A1486" />
      <lrml:toTarget keyref="#A1487" />
      <lrml:toTarget keyref="#A1488" />
      <lrml:toTarget keyref="#A1489" />
      <lrml:toTarget keyref="#A1490" />
      <lrml:toTarget keyref="#A1491" />
      <lrml:toTarget keyref="#A1492" />
      <lrml:toTarget keyref="#A1493" />
      <lrml:toTarget keyref="#A1494" />
      <lrml:toTarget keyref="#A1495" />
      <lrml:toTarget keyref="#A1496" />
      <lrml:toTarget keyref="#A1497" />
      <lrml:toTarget keyref="#A1498" />
      <lrml:toTarget keyref="#A1499" />
      <lrml:toTarget keyref="#A1500" />
      <lrml:toTarget keyref="#A1501" />
      <lrml:toTarget keyref="#A1502" />
      <lrml:toTarget keyref="#A1503" />
      <lrml:toTarget keyref="#A1504" />
      <lrml:toTarget keyref="#A1505" />
      <lrml:toTarget keyref="#A1506" />
      <lrml:toTarget keyref="#A1507" />
      <lrml:toTarget keyref="#A1508" />
      <lrml:toTarget keyref="#A1509" />
      <lrml:toTarget keyref="#A1510" />
      <lrml:toTarget keyref="#A1511" />
      <lrml:toTarget keyref="#A1512" />
      <lrml:toTarget keyref="#A1513" />
      <lrml:toTarget keyref="#A1514" />
      <lrml:toTarget keyref="#A1515" />
      <lrml:toTarget keyref="#A1516" />
      <lrml:toTarget keyref="#A1517" />
      <lrml:toTarget keyref="#A1518" />
      <lrml:toTarget keyref="#A1519" />
      <lrml:toTarget keyref="#A1520" />
      <lrml:toTarget keyref="#A1521" />
      <lrml:toTarget keyref="#A1522" />
      <lrml:toTarget keyref="#A1523" />
      <lrml:toTarget keyref="#A1524" />
      <lrml:toTarget keyref="#A1525" />
      <lrml:toTarget keyref="#A1526" />
      <lrml:toTarget keyref="#A1527" />
      <lrml:toTarget keyref="#A1528" />
      <lrml:toTarget keyref="#A1529" />
      <lrml:toTarget keyref="#A1530" />
      <lrml:toTarget keyref="#A1531" />
      <lrml:toTarget keyref="#A1532" />
      <lrml:toTarget keyref="#A1533" />
      <lrml:toTarget keyref="#A1534" />
      <lrml:toTarget keyref="#A1535" />
      <lrml:toTarget keyref="#A1536" />
      <lrml:toTarget keyref="#A1537" />
      <lrml:toTarget keyref="#A1538" />
      <lrml:toTarget keyref="#A1539" />
      <lrml:toTarget keyref="#A1540" />
      <lrml:toTarget keyref="#A1541" />
      <lrml:toTarget keyref="#A1542" />
      <lrml:toTarget keyref="#A1543" />
      <lrml:toTarget keyref="#A1544" />
      <lrml:toTarget keyref="#A1545" />
      <lrml:toTarget keyref="#A1546" />
      <lrml:toTarget keyref="#A1547" />
      <lrml:toTarget keyref="#A1548" />
      <lrml:toTarget keyref="#A1549" />
      <lrml:toTarget keyref="#A1550" />
      <lrml:toTarget keyref="#A1551" />
      <lrml:toTarget keyref="#A1552" />
      <lrml:toTarget keyref="#A1553" />
      <lrml:toTarget keyref="#A1554" />
      <lrml:toTarget keyref="#A1555" />
      <lrml:toTarget keyref="#A1556" />
      <lrml:toTarget keyref="#A1557" />
      <lrml:toTarget keyref="#A1558" />
      <lrml:toTarget keyref="#A1559" />
      <lrml:toTarget keyref="#A1560" />
      <lrml:toTarget keyref="#A1561" />
      <lrml:toTarget keyref="#A1562" />
      <lrml:toTarget keyref="#A1563" />
      <lrml:toTarget keyref="#A1564" />
      <lrml:toTarget keyref="#A1565" />
      <lrml:toTarget keyref="#A1566" />
      <lrml:toTarget keyref="#A1567" />
      <lrml:toTarget keyref="#A1568" />
      <lrml:toTarget keyref="#A1569" />
      <lrml:toTarget keyref="#A1570" />
      <lrml:toTarget keyref="#A1571" />
      <lrml:toTarget keyref="#A1572" />
      <lrml:toTarget keyref="#A1573" />
      <lrml:toTarget keyref="#A1574" />
      <lrml:toTarget keyref="#A1575" />
      <lrml:toTarget keyref="#A1576" />
      <lrml:toTarget keyref="#A1577" />
      <lrml:toTarget keyref="#A1578" />
      <lrml:toTarget keyref="#A1579" />
      <lrml:toTarget keyref="#A1580" />
      <lrml:toTarget keyref="#A1581" />
      <lrml:toTarget keyref="#A1582" />
      <lrml:toTarget keyref="#A1583" />
      <lrml:toTarget keyref="#A1584" />
      <lrml:toTarget keyref="#A1585" />
      <lrml:toTarget keyref="#A1586" />
      <lrml:toTarget keyref="#A1587" />
      <lrml:toTarget keyref="#A1588" />
      <lrml:toTarget keyref="#A1589" />
      <lrml:toTarget keyref="#A1590" />
      <lrml:toTarget keyref="#A1591" />
      <lrml:toTarget keyref="#A1592" />
      <lrml:toTarget keyref="#A1593" />
      <lrml:toTarget keyref="#A1594" />
      <lrml:toTarget keyref="#A1595" />
      <lrml:toTarget keyref="#A1596" />
      <lrml:toTarget keyref="#A1597" />
      <lrml:toTarget keyref="#A1598" />
      <lrml:toTarget keyref="#A1599" />
      <lrml:toTarget keyref="#A1600" />
      <lrml:toTarget keyref="#A1601" />
      <lrml:toTarget keyref="#A1602" />
      <lrml:toTarget keyref="#A1603" />
      <lrml:toTarget keyref="#A1604" />
      <lrml:toTarget keyref="#A1605" />
      <lrml:toTarget keyref="#A1606" />
      <lrml:toTarget keyref="#A1607" />
      <lrml:toTarget keyref="#A1608" />
      <lrml:toTarget keyref="#A1609" />
      <lrml:toTarget keyref="#A1610" />
      <lrml:toTarget keyref="#A1611" />
      <lrml:toTarget keyref="#A1612" />
      <lrml:toTarget keyref="#A1613" />
      <lrml:toTarget keyref="#A1614" />
      <lrml:toTarget keyref="#A1615" />
      <lrml:toTarget keyref="#A1616" />
      <lrml:toTarget keyref="#A1617" />
      <lrml:toTarget keyref="#A1618" />
      <lrml:toTarget keyref="#A1619" />
      <lrml:toTarget keyref="#A1620" />
      <lrml:toTarget keyref="#A1621" />
      <lrml:toTarget keyref="#A1622" />
      <lrml:toTarget keyref="#A1623" />
      <lrml:toTarget keyref="#A1624" />
      <lrml:toTarget keyref="#A1625" />
      <lrml:toTarget keyref="#A1626" />
      <lrml:toTarget keyref="#A1627" />
      <lrml:toTarget keyref="#A1628" />
      <lrml:toTarget keyref="#A1629" />
      <lrml:toTarget keyref="#A1630" />
      <lrml:toTarget keyref="#A1631" />
      <lrml:toTarget keyref="#A1632" />
      <lrml:toTarget keyref="#A1633" />
      <lrml:toTarget keyref="#A1634" />
      <lrml:toTarget keyref="#A1635" />
      <lrml:toTarget keyref="#A1636" />
      <lrml:toTarget keyref="#A1637" />
      <lrml:toTarget keyref="#A1638" />
      <lrml:toTarget keyref="#A1639" />
      <lrml:toTarget keyref="#A1640" />
      <lrml:toTarget keyref="#A1641" />
      <lrml:toTarget keyref="#A1642" />
      <lrml:toTarget keyref="#A1643" />
      <lrml:toTarget keyref="#A1644" />
      <lrml:toTarget keyref="#A1645" />
      <lrml:toTarget keyref="#A1646" />
      <lrml:toTarget keyref="#A1647" />
      <lrml:toTarget keyref="#A1648" />
      <lrml:toTarget keyref="#A1649" />
      <lrml:toTarget keyref="#A1650" />
      <lrml:toTarget keyref="#A1651" />
      <lrml:toTarget keyref="#A1652" />
      <lrml:toTarget keyref="#A1653" />
      <lrml:toTarget keyref="#A1654" />
      <lrml:toTarget keyref="#A1655" />
      <lrml:toTarget keyref="#A1656" />
      <lrml:toTarget keyref="#A1657" />
      <lrml:toTarget keyref="#A1658" />
      <lrml:toTarget keyref="#A1659" />
      <lrml:toTarget keyref="#A1660" />
      <lrml:toTarget keyref="#A1661" />
      <lrml:toTarget keyref="#A1662" />
      <lrml:toTarget keyref="#A1663" />
      <lrml:toTarget keyref="#A1664" />
      <lrml:toTarget keyref="#A1665" />
      <lrml:toTarget keyref="#A1666" />
      <lrml:toTarget keyref="#A1667" />
      <lrml:toTarget keyref="#A1668" />
      <lrml:toTarget keyref="#A1669" />
      <lrml:toTarget keyref="#A1670" />
      <lrml:toTarget keyref="#A1671" />
      <lrml:toTarget keyref="#A1672" />
      <lrml:toTarget keyref="#A1673" />
      <lrml:toTarget keyref="#A1674" />
      <lrml:toTarget keyref="#A1675" />
      <lrml:toTarget keyref="#A1676" />
      <lrml:toTarget keyref="#A1677" />
      <lrml:toTarget keyref="#A1678" />
      <lrml:toTarget keyref="#A1679" />
      <lrml:toTarget keyref="#A1680" />
      <lrml:toTarget keyref="#A1681" />
      <lrml:toTarget keyref="#A1682" />
      <lrml:toTarget keyref="#A1683" />
      <lrml:toTarget keyref="#A1684" />
      <lrml:toTarget keyref="#A1685" />
      <lrml:toTarget keyref="#A1686" />
      <lrml:toTarget keyref="#A1687" />
      <lrml:toTarget keyref="#A1688" />
      <lrml:toTarget keyref="#A1689" />
      <lrml:toTarget keyref="#A1690" />
      <lrml:toTarget keyref="#A1691" />
      <lrml:toTarget keyref="#A1692" />
      <lrml:toTarget keyref="#A1693" />
      <lrml:toTarget keyref="#A1694" />
      <lrml:toTarget keyref="#A1695" />
      <lrml:toTarget keyref="#A1696" />
      <lrml:toTarget keyref="#A1697" />
      <lrml:toTarget keyref="#A1698" />
      <lrml:toTarget keyref="#A1699" />
      <lrml:toTarget keyref="#A1700" />
      <lrml:toTarget keyref="#A1701" />
      <lrml:toTarget keyref="#A1702" />
      <lrml:toTarget keyref="#A1703" />
      <lrml:toTarget keyref="#A1704" />
      <lrml:toTarget keyref="#A1705" />
      <lrml:toTarget keyref="#A1706" />
      <lrml:toTarget keyref="#A1707" />
      <lrml:toTarget keyref="#A1708" />
      <lrml:toTarget keyref="#A1709" />
      <lrml:toTarget keyref="#A1710" />
      <lrml:toTarget keyref="#A1711" />
      <lrml:toTarget keyref="#A1712" />
      <lrml:toTarget keyref="#A1713" />
      <lrml:toTarget keyref="#A1714" />
      <lrml:toTarget keyref="#A1715" />
      <lrml:toTarget keyref="#A1716" />
      <lrml:toTarget keyref="#A1717" />
      <lrml:toTarget keyref="#A1718" />
      <lrml:toTarget keyref="#A1719" />
      <lrml:toTarget keyref="#A1720" />
      <lrml:toTarget keyref="#A1721" />
      <lrml:toTarget keyref="#A1722" />
      <lrml:toTarget keyref="#A1723" />
      <lrml:toTarget keyref="#A1724" />
      <lrml:toTarget keyref="#A1725" />
      <lrml:toTarget keyref="#A1726" />
      <lrml:toTarget keyref="#A1727" />
      <lrml:toTarget keyref="#A1728" />
      <lrml:toTarget keyref="#A1729" />
      <lrml:toTarget keyref="#A1730" />
      <lrml:toTarget keyref="#A1731" />
      <lrml:toTarget keyref="#A1732" />
      <lrml:toTarget keyref="#A1733" />
      <lrml:toTarget keyref="#A1734" />
      <lrml:toTarget keyref="#A1735" />
      <lrml:toTarget keyref="#A1736" />
      <lrml:toTarget keyref="#A1737" />
      <lrml:toTarget keyref="#A1738" />
      <lrml:toTarget keyref="#A1739" />
      <lrml:toTarget keyref="#A1740" />
      <lrml:toTarget keyref="#A1741" />
      <lrml:toTarget keyref="#A1742" />
      <lrml:toTarget keyref="#A1743" />
      <lrml:toTarget keyref="#A1744" />
      <lrml:toTarget keyref="#A1745" />
      <lrml:toTarget keyref="#A1746" />
      <lrml:toTarget keyref="#A1747" />
      <lrml:toTarget keyref="#A1748" />
      <lrml:toTarget keyref="#A1749" />
      <lrml:toTarget keyref="#A1750" />
      <lrml:toTarget keyref="#A1751" />
      <lrml:toTarget keyref="#A1752" />
      <lrml:toTarget keyref="#A1753" />
      <lrml:toTarget keyref="#A1754" />
      <lrml:toTarget keyref="#A1755" />
      <lrml:toTarget keyref="#A1756" />
      <lrml:toTarget keyref="#A1757" />
      <lrml:toTarget keyref="#A1758" />
      <lrml:toTarget keyref="#A1759" />
      <lrml:toTarget keyref="#A1760" />
      <lrml:toTarget keyref="#A1761" />
      <lrml:toTarget keyref="#A1762" />
      <lrml:toTarget keyref="#A1763" />
      <lrml:toTarget keyref="#A1764" />
      <lrml:toTarget keyref="#A1765" />
      <lrml:toTarget keyref="#A1766" />
      <lrml:toTarget keyref="#A1767" />
      <lrml:toTarget keyref="#A1768" />
      <lrml:toTarget keyref="#A1769" />
      <lrml:toTarget keyref="#A1770" />
      <lrml:toTarget keyref="#A1771" />
      <lrml:toTarget keyref="#A1772" />
      <lrml:toTarget keyref="#A1773" />
      <lrml:toTarget keyref="#A1774" />
      <lrml:toTarget keyref="#A1775" />
      <lrml:toTarget keyref="#A1776" />
      <lrml:toTarget keyref="#A1777" />
      <lrml:toTarget keyref="#A1778" />
      <lrml:toTarget keyref="#A1779" />
      <lrml:toTarget keyref="#A1780" />
      <lrml:toTarget keyref="#A1781" />
      <lrml:toTarget keyref="#A1782" />
      <lrml:toTarget keyref="#A1783" />
      <lrml:toTarget keyref="#A1784" />
      <lrml:toTarget keyref="#A1785" />
      <lrml:toTarget keyref="#A1786" />
      <lrml:toTarget keyref="#A1787" />
      <lrml:toTarget keyref="#A1788" />
      <lrml:toTarget keyref="#A1789" />
      <lrml:toTarget keyref="#A1790" />
      <lrml:toTarget keyref="#A1791" />
      <lrml:toTarget keyref="#A1792" />
      <lrml:toTarget keyref="#A1793" />
      <lrml:toTarget keyref="#A1794" />
      <lrml:toTarget keyref="#A1795" />
      <lrml:toTarget keyref="#A1796" />
      <lrml:toTarget keyref="#A1797" />
      <lrml:toTarget keyref="#A1798" />
      <lrml:toTarget keyref="#A1799" />
      <lrml:toTarget keyref="#A1800" />
      <lrml:toTarget keyref="#A1801" />
      <lrml:toTarget keyref="#A1802" />
      <lrml:toTarget keyref="#A1803" />
      <lrml:toTarget keyref="#A1804" />
      <lrml:toTarget keyref="#A1805" />
      <lrml:toTarget keyref="#A1806" />
      <lrml:toTarget keyref="#A1807" />
      <lrml:toTarget keyref="#A1808" />
      <lrml:toTarget keyref="#A1809" />
      <lrml:toTarget keyref="#A1810" />
      <lrml:toTarget keyref="#A1811" />
      <lrml:toTarget keyref="#A1812" />
      <lrml:toTarget keyref="#A1813" />
      <lrml:toTarget keyref="#A1814" />
      <lrml:toTarget keyref="#A1815" />
      <lrml:toTarget keyref="#A1816" />
      <lrml:toTarget keyref="#A1817" />
      <lrml:toTarget keyref="#A1818" />
      <lrml:toTarget keyref="#A1819" />
      <lrml:toTarget keyref="#A1820" />
      <lrml:toTarget keyref="#A1821" />
      <lrml:toTarget keyref="#A1822" />
      <lrml:toTarget keyref="#A1823" />
      <lrml:toTarget keyref="#A1824" />
      <lrml:toTarget keyref="#A1825" />
      <lrml:toTarget keyref="#A1826" />
      <lrml:toTarget keyref="#A1827" />
      <lrml:toTarget keyref="#A1828" />
      <lrml:toTarget keyref="#A1829" />
      <lrml:toTarget keyref="#A1830" />
      <lrml:toTarget keyref="#A1831" />
      <lrml:toTarget keyref="#A1832" />
      <lrml:toTarget keyref="#A1833" />
      <lrml:toTarget keyref="#A1834" />
      <lrml:toTarget keyref="#A1835" />
      <lrml:toTarget keyref="#A1836" />
      <lrml:toTarget keyref="#A1837" />
      <lrml:toTarget keyref="#A1838" />
      <lrml:toTarget keyref="#A1839" />
      <lrml:toTarget keyref="#A1840" />
      <lrml:toTarget keyref="#A1841" />
      <lrml:toTarget keyref="#A1842" />
      <lrml:toTarget keyref="#A1843" />
      <lrml:toTarget keyref="#A1844" />
      <lrml:toTarget keyref="#A1845" />
      <lrml:toTarget keyref="#A1846" />
      <lrml:toTarget keyref="#A1847" />
      <lrml:toTarget keyref="#A1848" />
      <lrml:toTarget keyref="#A1849" />
      <lrml:toTarget keyref="#A1850" />
      <lrml:toTarget keyref="#A1851" />
      <lrml:toTarget keyref="#A1852" />
      <lrml:toTarget keyref="#A1853" />
      <lrml:toTarget keyref="#A1854" />
      <lrml:toTarget keyref="#A1855" />
      <lrml:toTarget keyref="#A1856" />
      <lrml:toTarget keyref="#A1857" />
      <lrml:toTarget keyref="#A1858" />
      <lrml:toTarget keyref="#A1859" />
      <lrml:toTarget keyref="#A1860" />
      <lrml:toTarget keyref="#A1861" />
      <lrml:toTarget keyref="#A1862" />
      <lrml:toTarget keyref="#A1863" />
      <lrml:toTarget keyref="#A1864" />
      <lrml:toTarget keyref="#A1865" />
      <lrml:toTarget keyref="#A1866" />
      <lrml:toTarget keyref="#A1867" />
      <lrml:toTarget keyref="#A1868" />
      <lrml:toTarget keyref="#A1869" />
      <lrml:toTarget keyref="#A1870" />
      <lrml:toTarget keyref="#A1871" />
      <lrml:toTarget keyref="#A1872" />
      <lrml:toTarget keyref="#A1873" />
      <lrml:toTarget keyref="#A1874" />
      <lrml:toTarget keyref="#A1875" />
      <lrml:toTarget keyref="#A1876" />
      <lrml:toTarget keyref="#A1877" />
      <lrml:toTarget keyref="#A1878" />
      <lrml:toTarget keyref="#A1879" />
      <lrml:toTarget keyref="#A1880" />
      <lrml:toTarget keyref="#A1881" />
      <lrml:toTarget keyref="#A1882" />
      <lrml:toTarget keyref="#A1883" />
      <lrml:toTarget keyref="#A1884" />
      <lrml:toTarget keyref="#A1885" />
      <lrml:toTarget keyref="#A1886" />
      <lrml:toTarget keyref="#A1887" />
      <lrml:toTarget keyref="#A1888" />
      <lrml:toTarget keyref="#A1889" />
      <lrml:toTarget keyref="#A1890" />
      <lrml:toTarget keyref="#A1891" />
      <lrml:toTarget keyref="#A1892" />
      <lrml:toTarget keyref="#A1893" />
      <lrml:toTarget keyref="#A1894" />
      <lrml:toTarget keyref="#A1895" />
      <lrml:toTarget keyref="#A1896" />
      <lrml:toTarget keyref="#A1897" />
      <lrml:toTarget keyref="#A1898" />
      <lrml:toTarget keyref="#A1899" />
      <lrml:toTarget keyref="#A1900" />
      <lrml:toTarget keyref="#A1901" />
      <lrml:toTarget keyref="#A1902" />
      <lrml:toTarget keyref="#A1903" />
      <lrml:toTarget keyref="#A1904" />
      <lrml:toTarget keyref="#A1905" />
      <lrml:toTarget keyref="#A1906" />
      <lrml:toTarget keyref="#A1907" />
      <lrml:toTarget keyref="#A1908" />
      <lrml:toTarget keyref="#A1909" />
      <lrml:toTarget keyref="#A1910" />
      <lrml:toTarget keyref="#A1911" />
      <lrml:toTarget keyref="#A1912" />
      <lrml:toTarget keyref="#A1913" />
      <lrml:toTarget keyref="#A1914" />
      <lrml:toTarget keyref="#A1915" />
      <lrml:toTarget keyref="#A1916" />
      <lrml:toTarget keyref="#A1917" />
      <lrml:toTarget keyref="#A1918" />
      <lrml:toTarget keyref="#A1919" />
      <lrml:toTarget keyref="#A1920" />
      <lrml:toTarget keyref="#A1921" />
      <lrml:toTarget keyref="#A1922" />
      <lrml:toTarget keyref="#A1923" />
      <lrml:toTarget keyref="#A1924" />
      <lrml:toTarget keyref="#A1925" />
      <lrml:toTarget keyref="#A1926" />
      <lrml:toTarget keyref="#A1927" />
      <lrml:toTarget keyref="#A1928" />
      <lrml:toTarget keyref="#A1929" />
      <lrml:toTarget keyref="#A1930" />
      <lrml:toTarget keyref="#A1931" />
      <lrml:toTarget keyref="#A1932" />
      <lrml:toTarget keyref="#A1933" />
      <lrml:toTarget keyref="#A1934" />
      <lrml:toTarget keyref="#A1935" />
      <lrml:toTarget keyref="#A1936" />
      <lrml:toTarget keyref="#A1937" />
      <lrml:toTarget keyref="#A1938" />
      <lrml:toTarget keyref="#A1939" />
      <lrml:toTarget keyref="#A1940" />
      <lrml:toTarget keyref="#A1941" />
      <lrml:toTarget keyref="#A1942" />
      <lrml:toTarget keyref="#A1943" />
      <lrml:toTarget keyref="#A1944" />
      <lrml:toTarget keyref="#A1945" />
      <lrml:toTarget keyref="#A1946" />
      <lrml:toTarget keyref="#A1947" />
      <lrml:toTarget keyref="#A1948" />
      <lrml:toTarget keyref="#A1949" />
      <lrml:toTarget keyref="#A1950" />
      <lrml:toTarget keyref="#A1951" />
      <lrml:toTarget keyref="#A1952" />
      <lrml:toTarget keyref="#A1953" />
      <lrml:toTarget keyref="#A1954" />
      <lrml:toTarget keyref="#A1955" />
      <lrml:toTarget keyref="#A1956" />
      <lrml:toTarget keyref="#A1957" />
      <lrml:toTarget keyref="#A1958" />
      <lrml:toTarget keyref="#A1959" />
      <lrml:toTarget keyref="#A1960" />
      <lrml:toTarget keyref="#A1961" />
      <lrml:toTarget keyref="#A1962" />
      <lrml:toTarget keyref="#A1963" />
      <lrml:toTarget keyref="#A1964" />
      <lrml:toTarget keyref="#A1965" />
      <lrml:toTarget keyref="#A1966" />
      <lrml:toTarget keyref="#A1967" />
      <lrml:toTarget keyref="#A1968" />
      <lrml:toTarget keyref="#A1969" />
      <lrml:toTarget keyref="#A1970" />
      <lrml:toTarget keyref="#A1971" />
      <lrml:toTarget keyref="#A1972" />
      <lrml:toTarget keyref="#A1973" />
      <lrml:toTarget keyref="#A1974" />
      <lrml:toTarget keyref="#A1975" />
      <lrml:toTarget keyref="#A1976" />
      <lrml:toTarget keyref="#A1977" />
      <lrml:toTarget keyref="#A1978" />
      <lrml:toTarget keyref="#A1979" />
      <lrml:toTarget keyref="#A1980" />
      <lrml:toTarget keyref="#A1981" />
      <lrml:toTarget keyref="#A1982" />
      <lrml:toTarget keyref="#A1983" />
      <lrml:toTarget keyref="#A1984" />
      <lrml:toTarget keyref="#A1985" />
      <lrml:toTarget keyref="#A1986" />
      <lrml:toTarget keyref="#A1987" />
      <lrml:toTarget keyref="#A1988" />
      <lrml:toTarget keyref="#A1989" />
      <lrml:toTarget keyref="#A1990" />
      <lrml:toTarget keyref="#A1991" />
      <lrml:toTarget keyref="#A1992" />
      <lrml:toTarget keyref="#A1993" />
      <lrml:toTarget keyref="#A1994" />
      <lrml:toTarget keyref="#A1995" />
      <lrml:toTarget keyref="#A1996" />
      <lrml:toTarget keyref="#A1997" />
      <lrml:toTarget keyref="#A1998" />
      <lrml:toTarget keyref="#A1999" />
      <lrml:toTarget keyref="#A2000" />
      <lrml:toTarget keyref="#A2001" />
      <lrml:toTarget keyref="#A2002" />
      <lrml:toTarget keyref="#A2003" />
      <lrml:toTarget keyref="#A2004" />
      <lrml:toTarget keyref="#A2005" />
      <lrml:toTarget keyref="#A2006" />
      <lrml:toTarget keyref="#A2007" />
      <lrml:toTarget keyref="#A2008" />
      <lrml:toTarget keyref="#A2009" />
      <lrml:toTarget keyref="#A2010" />
      <lrml:toTarget keyref="#A2011" />
      <lrml:toTarget keyref="#A2012" />
      <lrml:toTarget keyref="#A2013" />
      <lrml:toTarget keyref="#A2014" />
      <lrml:toTarget keyref="#A2015" />
      <lrml:toTarget keyref="#A2016" />
      <lrml:toTarget keyref="#A2017" />
      <lrml:toTarget keyref="#A2018" />
      <lrml:toTarget keyref="#A2019" />
      <lrml:toTarget keyref="#A2020" />
      <lrml:toTarget keyref="#A2021" />
      <lrml:toTarget keyref="#A2022" />
      <lrml:toTarget keyref="#A2023" />
      <lrml:toTarget keyref="#A2024" />
      <lrml:toTarget keyref="#A2025" />
      <lrml:toTarget keyref="#A2026" />
      <lrml:toTarget keyref="#A2027" />
      <lrml:toTarget keyref="#A2028" />
      <lrml:toTarget keyref="#A2029" />
      <lrml:toTarget keyref="#A2030" />
      <lrml:toTarget keyref="#A2031" />
      <lrml:toTarget keyref="#A2032" />
      <lrml:toTarget keyref="#A2033" />
      <lrml:toTarget keyref="#A2034" />
      <lrml:toTarget keyref="#A2035" />
      <lrml:toTarget keyref="#A2036" />
      <lrml:toTarget keyref="#A2037" />
      <lrml:toTarget keyref="#A2038" />
      <lrml:toTarget keyref="#A2039" />
      <lrml:toTarget keyref="#A2040" />
      <lrml:toTarget keyref="#A2041" />
      <lrml:toTarget keyref="#A2042" />
      <lrml:toTarget keyref="#A2043" />
      <lrml:toTarget keyref="#A2044" />
      <lrml:toTarget keyref="#A2045" />
      <lrml:toTarget keyref="#A2046" />
      <lrml:toTarget keyref="#A2047" />
      <lrml:toTarget keyref="#A2048" />
      <lrml:toTarget keyref="#A2049" />
      <lrml:toTarget keyref="#A2050" />
      <lrml:toTarget keyref="#A2051" />
      <lrml:toTarget keyref="#A2052" />
      <lrml:toTarget keyref="#A2053" />
      <lrml:toTarget keyref="#A2054" />
      <lrml:toTarget keyref="#A2055" />
      <lrml:toTarget keyref="#A2056" />
      <lrml:toTarget keyref="#A2057" />
      <lrml:toTarget keyref="#A2058" />
      <lrml:toTarget keyref="#A2059" />
      <lrml:toTarget keyref="#A2060" />
      <lrml:toTarget keyref="#A2061" />
      <lrml:toTarget keyref="#A2062" />
      <lrml:toTarget keyref="#A2063" />
      <lrml:toTarget keyref="#A2064" />
      <lrml:toTarget keyref="#A2065" />
      <lrml:toTarget keyref="#A2066" />
      <lrml:toTarget keyref="#A2067" />
      <lrml:toTarget keyref="#A2068" />
      <lrml:toTarget keyref="#A2069" />
      <lrml:toTarget keyref="#A2070" />
      <lrml:toTarget keyref="#A2071" />
      <lrml:toTarget keyref="#A2072" />
      <lrml:toTarget keyref="#A2073" />
      <lrml:toTarget keyref="#A2074" />
      <lrml:toTarget keyref="#A2075" />
      <lrml:toTarget keyref="#A2076" />
      <lrml:toTarget keyref="#A2077" />
      <lrml:toTarget keyref="#A2078" />
      <lrml:toTarget keyref="#A2079" />
      <lrml:toTarget keyref="#A2080" />
      <lrml:toTarget keyref="#A2081" />
      <lrml:toTarget keyref="#A2082" />
      <lrml:toTarget keyref="#A2083" />
      <lrml:toTarget keyref="#A2084" />
      <lrml:toTarget keyref="#A2085" />
      <lrml:toTarget keyref="#A2086" />
      <lrml:toTarget keyref="#A2087" />
      <lrml:toTarget keyref="#A2088" />
      <lrml:toTarget keyref="#A2089" />
      <lrml:toTarget keyref="#A2090" />
      <lrml:toTarget keyref="#A2091" />
      <lrml:toTarget keyref="#A2092" />
      <lrml:toTarget keyref="#A2093" />
      <lrml:toTarget keyref="#A2094" />
      <lrml:toTarget keyref="#A2095" />
      <lrml:toTarget keyref="#A2096" />
      <lrml:toTarget keyref="#A2097" />
      <lrml:toTarget keyref="#A2098" />
      <lrml:toTarget keyref="#A2099" />
      <lrml:toTarget keyref="#A2100" />
      <lrml:toTarget keyref="#A2101" />
      <lrml:toTarget keyref="#A2102" />
      <lrml:toTarget keyref="#A2103" />
      <lrml:toTarget keyref="#A2104" />
      <lrml:toTarget keyref="#A2105" />
      <lrml:toTarget keyref="#A2106" />
      <lrml:toTarget keyref="#A2107" />
      <lrml:toTarget keyref="#A2108" />
      <lrml:toTarget keyref="#A2109" />
      <lrml:toTarget keyref="#A2110" />
      <lrml:toTarget keyref="#A2111" />
      <lrml:toTarget keyref="#A2112" />
      <lrml:toTarget keyref="#A2113" />
      <lrml:toTarget keyref="#A2114" />
      <lrml:toTarget keyref="#A2115" />
      <lrml:toTarget keyref="#A2116" />
      <lrml:toTarget keyref="#A2117" />
      <lrml:toTarget keyref="#A2118" />
      <lrml:toTarget keyref="#A2119" />
      <lrml:toTarget keyref="#A2120" />
      <lrml:toTarget keyref="#A2121" />
      <lrml:toTarget keyref="#A2122" />
      <lrml:toTarget keyref="#A2123" />
      <lrml:toTarget keyref="#A2124" />
      <lrml:toTarget keyref="#A2125" />
      <lrml:toTarget keyref="#A2126" />
      <lrml:toTarget keyref="#A2127" />
      <lrml:toTarget keyref="#A2128" />
      <lrml:toTarget keyref="#A2129" />
      <lrml:toTarget keyref="#A2130" />
      <lrml:toTarget keyref="#A2131" />
      <lrml:toTarget keyref="#A2132" />
      <lrml:toTarget keyref="#A2133" />
      <lrml:toTarget keyref="#A2134" />
      <lrml:toTarget keyref="#A2135" />
      <lrml:toTarget keyref="#A2136" />
      <lrml:toTarget keyref="#A2137" />
      <lrml:toTarget keyref="#A2138" />
      <lrml:toTarget keyref="#A2139" />
      <lrml:toTarget keyref="#A2140" />
      <lrml:toTarget keyref="#A2141" />
      <lrml:toTarget keyref="#A2142" />
      <lrml:toTarget keyref="#A2143" />
      <lrml:toTarget keyref="#A2144" />
      <lrml:toTarget keyref="#A2145" />
      <lrml:toTarget keyref="#A2146" />
      <lrml:toTarget keyref="#A2147" />
      <lrml:toTarget keyref="#A2148" />
      <lrml:toTarget keyref="#A2149" />
      <lrml:toTarget keyref="#A2150" />
      <lrml:toTarget keyref="#A2151" />
      <lrml:toTarget keyref="#A2152" />
      <lrml:toTarget keyref="#A2153" />
      <lrml:toTarget keyref="#A2154" />
      <lrml:toTarget keyref="#A2155" />
      <lrml:toTarget keyref="#A2156" />
      <lrml:toTarget keyref="#A2157" />
      <lrml:toTarget keyref="#A2158" />
      <lrml:toTarget keyref="#A2159" />
      <lrml:toTarget keyref="#A2160" />
      <lrml:toTarget keyref="#A2161" />
      <lrml:toTarget keyref="#A2162" />
      <lrml:toTarget keyref="#A2163" />
      <lrml:toTarget keyref="#A2164" />
      <lrml:toTarget keyref="#A2165" />
      <lrml:toTarget keyref="#A2166" />
      <lrml:toTarget keyref="#A2167" />
      <lrml:toTarget keyref="#A2168" />
      <lrml:toTarget keyref="#A2169" />
      <lrml:toTarget keyref="#A2170" />
      <lrml:toTarget keyref="#A2171" />
      <lrml:toTarget keyref="#A2172" />
      <lrml:toTarget keyref="#A2173" />
      <lrml:toTarget keyref="#A2174" />
      <lrml:toTarget keyref="#A2175" />
      <lrml:toTarget keyref="#A2176" />
      <lrml:toTarget keyref="#A2177" />
      <lrml:toTarget keyref="#A2178" />
      <lrml:toTarget keyref="#A2179" />
      <lrml:toTarget keyref="#A2180" />
      <lrml:toTarget keyref="#A2181" />
      <lrml:toTarget keyref="#A2182" />
      <lrml:toTarget keyref="#A2183" />
      <lrml:toTarget keyref="#A2184" />
      <lrml:toTarget keyref="#A2185" />
      <lrml:toTarget keyref="#A2186" />
      <lrml:toTarget keyref="#A2187" />
      <lrml:toTarget keyref="#A2188" />
      <lrml:toTarget keyref="#A2189" />
      <lrml:toTarget keyref="#A2190" />
      <lrml:toTarget keyref="#A2191" />
      <lrml:toTarget keyref="#A2192" />
      <lrml:toTarget keyref="#A2193" />
      <lrml:toTarget keyref="#A2194" />
      <lrml:toTarget keyref="#A2195" />
      <lrml:toTarget keyref="#A2196" />
      <lrml:toTarget keyref="#A2197" />
      <lrml:toTarget keyref="#A2198" />
      <lrml:toTarget keyref="#A2199" />
      <lrml:toTarget keyref="#A2200" />
      <lrml:toTarget keyref="#A2201" />
      <lrml:toTarget keyref="#A2202" />
      <lrml:toTarget keyref="#A2203" />
      <lrml:toTarget keyref="#A2204" />
      <lrml:toTarget keyref="#A2205" />
      <lrml:toTarget keyref="#A2206" />
      <lrml:toTarget keyref="#A2207" />
      <lrml:toTarget keyref="#A2208" />
      <lrml:toTarget keyref="#A2209" />
      <lrml:toTarget keyref="#A2210" />
      <lrml:toTarget keyref="#A2211" />
      <lrml:toTarget keyref="#A2212" />
      <lrml:toTarget keyref="#A2213" />
      <lrml:toTarget keyref="#A2214" />
      <lrml:toTarget keyref="#A2215" />
      <lrml:toTarget keyref="#A2216" />
      <lrml:toTarget keyref="#A2217" />
      <lrml:toTarget keyref="#A2218" />
      <lrml:toTarget keyref="#A2219" />
      <lrml:toTarget keyref="#A2220" />
      <lrml:toTarget keyref="#A2221" />
      <lrml:toTarget keyref="#A2222" />
      <lrml:toTarget keyref="#A2223" />
      <lrml:toTarget keyref="#A2224" />
      <lrml:toTarget keyref="#A2225" />
      <lrml:toTarget keyref="#A2226" />
      <lrml:toTarget keyref="#A2227" />
      <lrml:toTarget keyref="#A2228" />
      <lrml:toTarget keyref="#A2229" />
      <lrml:toTarget keyref="#A2230" />
      <lrml:toTarget keyref="#A2231" />
      <lrml:toTarget keyref="#A2232" />
      <lrml:toTarget keyref="#A2233" />
      <lrml:toTarget keyref="#A2234" />
      <lrml:toTarget keyref="#A2235" />
      <lrml:toTarget keyref="#A2236" />
      <lrml:toTarget keyref="#A2237" />
      <lrml:toTarget keyref="#A2238" />
      <lrml:toTarget keyref="#A2239" />
      <lrml:toTarget keyref="#A2240" />
      <lrml:toTarget keyref="#A2241" />
      <lrml:toTarget keyref="#A2242" />
      <lrml:toTarget keyref="#A2243" />
      <lrml:toTarget keyref="#A2244" />
      <lrml:toTarget keyref="#A2245" />
      <lrml:toTarget keyref="#A2246" />
      <lrml:toTarget keyref="#A2247" />
      <lrml:toTarget keyref="#A2248" />
      <lrml:toTarget keyref="#A2249" />
      <lrml:toTarget keyref="#A2250" />
      <lrml:toTarget keyref="#A2251" />
      <lrml:toTarget keyref="#A2252" />
      <lrml:toTarget keyref="#A2253" />
      <lrml:toTarget keyref="#A2254" />
      <lrml:toTarget keyref="#A2255" />
      <lrml:toTarget keyref="#A2256" />
      <lrml:toTarget keyref="#A2257" />
      <lrml:toTarget keyref="#A2258" />
      <lrml:toTarget keyref="#A2259" />
      <lrml:toTarget keyref="#A2260" />
      <lrml:toTarget keyref="#A2261" />
      <lrml:toTarget keyref="#A2262" />
      <lrml:toTarget keyref="#A2263" />
      <lrml:toTarget keyref="#A2264" />
      <lrml:toTarget keyref="#A2265" />
      <lrml:toTarget keyref="#A2266" />
      <lrml:toTarget keyref="#A2267" />
      <lrml:toTarget keyref="#A2268" />
      <lrml:toTarget keyref="#A2269" />
      <lrml:toTarget keyref="#A2270" />
      <lrml:toTarget keyref="#A2271" />
      <lrml:toTarget keyref="#A2272" />
      <lrml:toTarget keyref="#A2273" />
      <lrml:toTarget keyref="#A2274" />
      <lrml:toTarget keyref="#A2275" />
      <lrml:toTarget keyref="#A2276" />
      <lrml:toTarget keyref="#A2277" />
      <lrml:toTarget keyref="#A2278" />
      <lrml:toTarget keyref="#A2279" />
      <lrml:toTarget keyref="#A2280" />
      <lrml:toTarget keyref="#A2281" />
      <lrml:toTarget keyref="#A2282" />
      <lrml:toTarget keyref="#A2283" />
      <lrml:toTarget keyref="#A2284" />
      <lrml:toTarget keyref="#A2285" />
      <lrml:toTarget keyref="#A2286" />
      <lrml:toTarget keyref="#A2287" />
      <lrml:toTarget keyref="#A2288" />
      <lrml:toTarget keyref="#A2289" />
      <lrml:toTarget keyref="#A2290" />
      <lrml:toTarget keyref="#A2291" />
      <lrml:toTarget keyref="#A2292" />
      <lrml:toTarget keyref="#A2293" />
      <lrml:toTarget keyref="#A2294" />
      <lrml:toTarget keyref="#A2295" />
      <lrml:toTarget keyref="#A2296" />
      <lrml:toTarget keyref="#A2297" />
      <lrml:toTarget keyref="#A2298" />
      <lrml:toTarget keyref="#A2299" />
      <lrml:toTarget keyref="#A2300" />
      <lrml:toTarget keyref="#A2301" />
      <lrml:toTarget keyref="#A2302" />
      <lrml:toTarget keyref="#A2303" />
      <lrml:toTarget keyref="#A2304" />
      <lrml:toTarget keyref="#A2305" />
      <lrml:toTarget keyref="#A2306" />
      <lrml:toTarget keyref="#A2307" />
      <lrml:toTarget keyref="#A2308" />
      <lrml:toTarget keyref="#A2309" />
      <lrml:toTarget keyref="#A2310" />
      <lrml:toTarget keyref="#A2311" />
      <lrml:toTarget keyref="#A2312" />
      <lrml:toTarget keyref="#A2313" />
      <lrml:toTarget keyref="#A2314" />
      <lrml:toTarget keyref="#A2315" />
      <lrml:toTarget keyref="#A2316" />
      <lrml:toTarget keyref="#A2317" />
      <lrml:toTarget keyref="#A2318" />
      <lrml:toTarget keyref="#A2319" />
      <lrml:toTarget keyref="#A2320" />
      <lrml:toTarget keyref="#A2321" />
      <lrml:toTarget keyref="#A2322" />
      <lrml:toTarget keyref="#A2323" />
      <lrml:toTarget keyref="#A2324" />
      <lrml:toTarget keyref="#A2325" />
      <lrml:toTarget keyref="#A2326" />
      <lrml:toTarget keyref="#A2327" />
      <lrml:toTarget keyref="#A2328" />
      <lrml:toTarget keyref="#A2329" />
      <lrml:toTarget keyref="#A2330" />
      <lrml:toTarget keyref="#A2331" />
      <lrml:toTarget keyref="#A2332" />
      <lrml:toTarget keyref="#A2333" />
      <lrml:toTarget keyref="#A2334" />
      <lrml:toTarget keyref="#A2335" />
      <lrml:toTarget keyref="#A2336" />
      <lrml:toTarget keyref="#A2337" />
      <lrml:toTarget keyref="#A2338" />
      <lrml:toTarget keyref="#A2339" />
      <lrml:toTarget keyref="#A2340" />
      <lrml:toTarget keyref="#A2341" />
      <lrml:toTarget keyref="#A2342" />
      <lrml:toTarget keyref="#A2343" />
      <lrml:toTarget keyref="#A2344" />
      <lrml:toTarget keyref="#A2345" />
      <lrml:toTarget keyref="#A2346" />
      <lrml:toTarget keyref="#A2347" />
      <lrml:toTarget keyref="#A2348" />
      <lrml:toTarget keyref="#A2349" />
      <lrml:toTarget keyref="#A2350" />
      <lrml:toTarget keyref="#A2351" />
      <lrml:toTarget keyref="#A2352" />
      <lrml:toTarget keyref="#A2353" />
      <lrml:toTarget keyref="#A2354" />
      <lrml:toTarget keyref="#A2355" />
      <lrml:toTarget keyref="#A2356" />
      <lrml:toTarget keyref="#A2357" />
      <lrml:toTarget keyref="#A2358" />
      <lrml:toTarget keyref="#A2359" />
      <lrml:toTarget keyref="#A2360" />
      <lrml:toTarget keyref="#A2361" />
      <lrml:toTarget keyref="#A2362" />
      <lrml:toTarget keyref="#A2363" />
      <lrml:toTarget keyref="#A2364" />
      <lrml:toTarget keyref="#A2365" />
      <lrml:toTarget keyref="#A2366" />
      <lrml:toTarget keyref="#A2367" />
      <lrml:toTarget keyref="#A2368" />
      <lrml:toTarget keyref="#A2369" />
      <lrml:toTarget keyref="#A2370" />
      <lrml:toTarget keyref="#A2371" />
      <lrml:toTarget keyref="#A2372" />
      <lrml:toTarget keyref="#A2373" />
      <lrml:toTarget keyref="#A2374" />
      <lrml:toTarget keyref="#A2375" />
      <lrml:toTarget keyref="#A2376" />
      <lrml:toTarget keyref="#A2377" />
      <lrml:toTarget keyref="#A2378" />
      <lrml:toTarget keyref="#A2379" />
      <lrml:toTarget keyref="#A2380" />
      <lrml:toTarget keyref="#A2381" />
      <lrml:toTarget keyref="#A2382" />
      <lrml:toTarget keyref="#A2383" />
      <lrml:toTarget keyref="#A2384" />
      <lrml:toTarget keyref="#A2385" />
      <lrml:toTarget keyref="#A2386" />
      <lrml:toTarget keyref="#A2387" />
      <lrml:toTarget keyref="#A2388" />
      <lrml:toTarget keyref="#A2389" />
      <lrml:toTarget keyref="#A2390" />
      <lrml:toTarget keyref="#A2391" />
      <lrml:toTarget keyref="#A2392" />
      <lrml:toTarget keyref="#A2393" />
      <lrml:toTarget keyref="#A2394" />
      <lrml:toTarget keyref="#A2395" />
      <lrml:toTarget keyref="#A2396" />
      <lrml:toTarget keyref="#A2397" />
      <lrml:toTarget keyref="#A2398" />
      <lrml:toTarget keyref="#A2399" />
      <lrml:toTarget keyref="#A2400" />
      <lrml:toTarget keyref="#A2401" />
      <lrml:toTarget keyref="#A2402" />
      <lrml:toTarget keyref="#A2403" />
      <lrml:toTarget keyref="#A2404" />
      <lrml:toTarget keyref="#A2405" />
      <lrml:toTarget keyref="#A2406" />
      <lrml:toTarget keyref="#A2407" />
      <lrml:toTarget keyref="#A2408" />
      <lrml:toTarget keyref="#A2409" />
      <lrml:toTarget keyref="#A2410" />
      <lrml:toTarget keyref="#A2411" />
      <lrml:toTarget keyref="#A2412" />
      <lrml:toTarget keyref="#A2413" />
      <lrml:toTarget keyref="#A2414" />
      <lrml:toTarget keyref="#A2415" />
      <lrml:toTarget keyref="#A2416" />
      <lrml:toTarget keyref="#A2417" />
      <lrml:toTarget keyref="#A2418" />
      <lrml:toTarget keyref="#A2419" />
      <lrml:toTarget keyref="#A2420" />
      <lrml:toTarget keyref="#A2421" />
      <lrml:toTarget keyref="#A2422" />
      <lrml:toTarget keyref="#A2423" />
      <lrml:toTarget keyref="#A2424" />
      <lrml:toTarget keyref="#A2425" />
      <lrml:toTarget keyref="#A2426" />
      <lrml:toTarget keyref="#A2427" />
      <lrml:toTarget keyref="#A2428" />
      <lrml:toTarget keyref="#A2429" />
      <lrml:toTarget keyref="#A2430" />
      <lrml:toTarget keyref="#A2431" />
      <lrml:toTarget keyref="#A2432" />
      <lrml:toTarget keyref="#A2433" />
      <lrml:toTarget keyref="#A2434" />
      <lrml:toTarget keyref="#A2435" />
      <lrml:toTarget keyref="#A2436" />
      <lrml:toTarget keyref="#A2437" />
      <lrml:toTarget keyref="#A2438" />
      <lrml:toTarget keyref="#A2439" />
      <lrml:toTarget keyref="#A2440" />
      <lrml:toTarget keyref="#A2441" />
      <lrml:toTarget keyref="#A2442" />
      <lrml:toTarget keyref="#A2443" />
      <lrml:toTarget keyref="#A2444" />
      <lrml:toTarget keyref="#A2445" />
      <lrml:toTarget keyref="#A2446" />
      <lrml:toTarget keyref="#A2447" />
      <lrml:toTarget keyref="#A2448" />
      <lrml:toTarget keyref="#A2449" />
      <lrml:toTarget keyref="#A2450" />
      <lrml:toTarget keyref="#A2451" />
      <lrml:toTarget keyref="#A2452" />
      <lrml:toTarget keyref="#A2453" />
      <lrml:toTarget keyref="#A2454" />
      <lrml:toTarget keyref="#A2455" />
      <lrml:toTarget keyref="#A2456" />
      <lrml:toTarget keyref="#A2457" />
      <lrml:toTarget keyref="#A2458" />
      <lrml:toTarget keyref="#A2459" />
      <lrml:toTarget keyref="#A2460" />
      <lrml:toTarget keyref="#A2461" />
      <lrml:toTarget keyref="#A2462" />
      <lrml:toTarget keyref="#A2463" />
      <lrml:toTarget keyref="#A2464" />
      <lrml:toTarget keyref="#A2465" />
      <lrml:toTarget keyref="#A2466" />
      <lrml:toTarget keyref="#A2467" />
      <lrml:toTarget keyref="#A2468" />
      <lrml:toTarget keyref="#A2469" />
      <lrml:toTarget keyref="#A2470" />
      <lrml:toTarget keyref="#A2471" />
      <lrml:toTarget keyref="#A2472" />
      <lrml:toTarget keyref="#A2473" />
      <lrml:toTarget keyref="#A2474" />
      <lrml:toTarget keyref="#A2475" />
      <lrml:toTarget keyref="#A2476" />
      <lrml:toTarget keyref="#A2477" />
      <lrml:toTarget keyref="#A2478" />
      <lrml:toTarget keyref="#A2479" />
      <lrml:toTarget keyref="#A2480" />
      <lrml:toTarget keyref="#A2481" />
      <lrml:toTarget keyref="#A2482" />
      <lrml:toTarget keyref="#A2483" />
      <lrml:toTarget keyref="#A2484" />
      <lrml:toTarget keyref="#A2485" />
      <lrml:toTarget keyref="#A2486" />
      <lrml:toTarget keyref="#A2487" />
      <lrml:toTarget keyref="#A2488" />
      <lrml:toTarget keyref="#A2489" />
      <lrml:toTarget keyref="#A2490" />
      <lrml:toTarget keyref="#A2491" />
      <lrml:toTarget keyref="#A2492" />
      <lrml:toTarget keyref="#A2493" />
      <lrml:toTarget keyref="#A2494" />
      <lrml:toTarget keyref="#A2495" />
      <lrml:toTarget keyref="#A2496" />
      <lrml:toTarget keyref="#A2497" />
      <lrml:toTarget keyref="#A2498" />
      <lrml:toTarget keyref="#A2499" />
      <lrml:toTarget keyref="#A2500" />
      <lrml:toTarget keyref="#A2501" />
      <lrml:toTarget keyref="#A2502" />
      <lrml:toTarget keyref="#A2503" />
      <lrml:toTarget keyref="#A2504" />
      <lrml:toTarget keyref="#A2505" />
      <lrml:toTarget keyref="#A2506" />
      <lrml:toTarget keyref="#A2507" />
      <lrml:toTarget keyref="#A2508" />
      <lrml:toTarget keyref="#A2509" />
      <lrml:toTarget keyref="#A2510" />
      <lrml:toTarget keyref="#A2511" />
      <lrml:toTarget keyref="#A2512" />
      <lrml:toTarget keyref="#A2513" />
      <lrml:toTarget keyref="#A2514" />
      <lrml:toTarget keyref="#A2515" />
      <lrml:toTarget keyref="#A2516" />
      <lrml:toTarget keyref="#A2517" />
      <lrml:toTarget keyref="#A2518" />
      <lrml:toTarget keyref="#A2519" />
      <lrml:toTarget keyref="#A2520" />
      <lrml:toTarget keyref="#A2521" />
      <lrml:toTarget keyref="#A2522" />
      <lrml:toTarget keyref="#A2523" />
      <lrml:toTarget keyref="#A2524" />
      <lrml:toTarget keyref="#A2525" />
      <lrml:toTarget keyref="#A2526" />
      <lrml:toTarget keyref="#A2527" />
      <lrml:toTarget keyref="#A2528" />
      <lrml:toTarget keyref="#A2529" />
      <lrml:toTarget keyref="#A2530" />
      <lrml:toTarget keyref="#A2531" />
      <lrml:toTarget keyref="#A2532" />
      <lrml:toTarget keyref="#A2533" />
      <lrml:toTarget keyref="#A2534" />
      <lrml:toTarget keyref="#A2535" />
      <lrml:toTarget keyref="#A2536" />
      <lrml:toTarget keyref="#A2537" />
      <lrml:toTarget keyref="#A2538" />
      <lrml:toTarget keyref="#A2539" />
      <lrml:toTarget keyref="#A2540" />
      <lrml:toTarget keyref="#A2541" />
      <lrml:toTarget keyref="#A2542" />
      <lrml:toTarget keyref="#A2543" />
      <lrml:toTarget keyref="#A2544" />
      <lrml:toTarget keyref="#A2545" />
      <lrml:toTarget keyref="#A2546" />
      <lrml:toTarget keyref="#A2547" />
      <lrml:toTarget keyref="#A2548" />
      <lrml:toTarget keyref="#A2549" />
      <lrml:toTarget keyref="#A2550" />
      <lrml:toTarget keyref="#A2551" />
      <lrml:toTarget keyref="#A2552" />
      <lrml:toTarget keyref="#A2553" />
      <lrml:toTarget keyref="#A2554" />
      <lrml:toTarget keyref="#A2555" />
      <lrml:toTarget keyref="#A2556" />
      <lrml:toTarget keyref="#A2557" />
      <lrml:toTarget keyref="#A2558" />
      <lrml:toTarget keyref="#A2559" />
      <lrml:toTarget keyref="#A2560" />
      <lrml:toTarget keyref="#A2561" />
      <lrml:toTarget keyref="#A2562" />
      <lrml:toTarget keyref="#A2563" />
      <lrml:toTarget keyref="#A2564" />
      <lrml:toTarget keyref="#A2565" />
      <lrml:toTarget keyref="#A2566" />
      <lrml:toTarget keyref="#A2567" />
      <lrml:toTarget keyref="#A2568" />
      <lrml:toTarget keyref="#A2569" />
      <lrml:toTarget keyref="#A2570" />
      <lrml:toTarget keyref="#A2571" />
      <lrml:toTarget keyref="#A2572" />
      <lrml:toTarget keyref="#A2573" />
      <lrml:toTarget keyref="#A2574" />
      <lrml:toTarget keyref="#A2575" />
      <lrml:toTarget keyref="#A2576" />
      <lrml:toTarget keyref="#A2577" />
      <lrml:toTarget keyref="#A2578" />
      <lrml:toTarget keyref="#A2579" />
      <lrml:toTarget keyref="#A2580" />
      <lrml:toTarget keyref="#A2581" />
      <lrml:toTarget keyref="#A2582" />
      <lrml:toTarget keyref="#A2583" />
      <lrml:toTarget keyref="#A2584" />
      <lrml:toTarget keyref="#A2585" />
      <lrml:toTarget keyref="#A2586" />
      <lrml:toTarget keyref="#A2587" />
      <lrml:toTarget keyref="#A2588" />
      <lrml:toTarget keyref="#A2589" />
      <lrml:toTarget keyref="#A2590" />
      <lrml:toTarget keyref="#A2591" />
      <lrml:toTarget keyref="#A2592" />
      <lrml:toTarget keyref="#A2593" />
      <lrml:toTarget keyref="#A2594" />
      <lrml:toTarget keyref="#A2595" />
      <lrml:toTarget keyref="#A2596" />
      <lrml:toTarget keyref="#A2597" />
      <lrml:toTarget keyref="#A2598" />
      <lrml:toTarget keyref="#A2599" />
      <lrml:toTarget keyref="#A2600" />
      <lrml:toTarget keyref="#A2601" />
      <lrml:toTarget keyref="#A2602" />
      <lrml:toTarget keyref="#A2603" />
      <lrml:toTarget keyref="#A2604" />
      <lrml:toTarget keyref="#A2605" />
      <lrml:toTarget keyref="#A2606" />
      <lrml:toTarget keyref="#A2607" />
      <lrml:toTarget keyref="#A2608" />
      <lrml:toTarget keyref="#A2609" />
      <lrml:toTarget keyref="#A2610" />
      <lrml:toTarget keyref="#A2611" />
      <lrml:toTarget keyref="#A2612" />
      <lrml:toTarget keyref="#A2613" />
      <lrml:toTarget keyref="#A2614" />
      <lrml:toTarget keyref="#A2615" />
      <lrml:toTarget keyref="#A2616" />
      <lrml:toTarget keyref="#A2617" />
      <lrml:toTarget keyref="#A2618" />
      <lrml:toTarget keyref="#A2619" />
      <lrml:toTarget keyref="#A2620" />
      <lrml:toTarget keyref="#A2621" />
      <lrml:toTarget keyref="#A2622" />
      <lrml:toTarget keyref="#A2623" />
      <lrml:toTarget keyref="#A2624" />
      <lrml:toTarget keyref="#A2625" />
      <lrml:toTarget keyref="#A2626" />
      <lrml:toTarget keyref="#A2627" />
      <lrml:toTarget keyref="#A2628" />
      <lrml:toTarget keyref="#A2629" />
      <lrml:toTarget keyref="#A2630" />
      <lrml:toTarget keyref="#A2631" />
      <lrml:toTarget keyref="#A2632" />
      <lrml:toTarget keyref="#A2633" />
      <lrml:toTarget keyref="#A2634" />
      <lrml:toTarget keyref="#A2635" />
      <lrml:toTarget keyref="#A2636" />
      <lrml:toTarget keyref="#A2637" />
      <lrml:toTarget keyref="#A2638" />
      <lrml:toTarget keyref="#A2639" />
      <lrml:toTarget keyref="#A2640" />
      <lrml:toTarget keyref="#A2641" />
      <lrml:toTarget keyref="#A2642" />
      <lrml:toTarget keyref="#A2643" />
      <lrml:toTarget keyref="#A2644" />
      <lrml:toTarget keyref="#A2645" />
      <lrml:toTarget keyref="#A2646" />
      <lrml:toTarget keyref="#A2647" />
      <lrml:toTarget keyref="#A2648" />
      <lrml:toTarget keyref="#A2649" />
      <lrml:toTarget keyref="#A2650" />
      <lrml:toTarget keyref="#A2651" />
      <lrml:toTarget keyref="#A2652" />
      <lrml:toTarget keyref="#A2653" />
      <lrml:toTarget keyref="#A2654" />
      <lrml:toTarget keyref="#A2655" />
      <lrml:toTarget keyref="#A2656" />
      <lrml:toTarget keyref="#A2657" />
      <lrml:toTarget keyref="#A2658" />
      <lrml:toTarget keyref="#A2659" />
      <lrml:toTarget keyref="#A2660" />
      <lrml:toTarget keyref="#A2661" />
      <lrml:toTarget keyref="#A2662" />
      <lrml:toTarget keyref="#A2663" />
      <lrml:toTarget keyref="#A2664" />
      <lrml:toTarget keyref="#A2665" />
      <lrml:toTarget keyref="#A2666" />
      <lrml:toTarget keyref="#A2667" />
      <lrml:toTarget keyref="#A2668" />
      <lrml:toTarget keyref="#A2669" />
      <lrml:toTarget keyref="#A2670" />
      <lrml:toTarget keyref="#A2671" />
      <lrml:toTarget keyref="#A2672" />
      <lrml:toTarget keyref="#A2673" />
      <lrml:toTarget keyref="#A2674" />
      <lrml:toTarget keyref="#A2675" />
      <lrml:toTarget keyref="#A2676" />
      <lrml:toTarget keyref="#A2677" />
      <lrml:toTarget keyref="#A2678" />
      <lrml:toTarget keyref="#A2679" />
      <lrml:toTarget keyref="#A2680" />
      <lrml:toTarget keyref="#A2681" />
      <lrml:toTarget keyref="#A2682" />
      <lrml:toTarget keyref="#A2683" />
      <lrml:toTarget keyref="#A2684" />
      <lrml:toTarget keyref="#A2685" />
      <lrml:toTarget keyref="#A2686" />
      <lrml:toTarget keyref="#A2687" />
      <lrml:toTarget keyref="#A2688" />
      <lrml:toTarget keyref="#A2689" />
      <lrml:toTarget keyref="#A2690" />
      <lrml:toTarget keyref="#A2691" />
      <lrml:toTarget keyref="#A2692" />
      <lrml:toTarget keyref="#A2693" />
      <lrml:toTarget keyref="#A2694" />
      <lrml:toTarget keyref="#A2695" />
      <lrml:toTarget keyref="#A2696" />
      <lrml:toTarget keyref="#A2697" />
      <lrml:toTarget keyref="#A2698" />
      <lrml:toTarget keyref="#A2699" />
      <lrml:toTarget keyref="#A2700" />
      <lrml:toTarget keyref="#A2701" />
      <lrml:toTarget keyref="#A2702" />
      <lrml:toTarget keyref="#A2703" />
      <lrml:toTarget keyref="#A2704" />
      <lrml:toTarget keyref="#A2705" />
      <lrml:toTarget keyref="#A2706" />
      <lrml:toTarget keyref="#A2707" />
      <lrml:toTarget keyref="#A2708" />
      <lrml:toTarget keyref="#A2709" />
      <lrml:toTarget keyref="#A2710" />
      <lrml:toTarget keyref="#A2711" />
      <lrml:toTarget keyref="#A2712" />
      <lrml:toTarget keyref="#A2713" />
      <lrml:toTarget keyref="#A2714" />
      <lrml:toTarget keyref="#A2715" />
      <lrml:toTarget keyref="#A2716" />
      <lrml:toTarget keyref="#A2717" />
      <lrml:toTarget keyref="#A2718" />
      <lrml:toTarget keyref="#A2719" />
      <lrml:toTarget keyref="#A2720" />
      <lrml:toTarget keyref="#A2721" />
      <lrml:toTarget keyref="#A2722" />
      <lrml:toTarget keyref="#A2723" />
      <lrml:toTarget keyref="#A2724" />
      <lrml:toTarget keyref="#A2725" />
      <lrml:toTarget keyref="#A2726" />
      <lrml:toTarget keyref="#A2727" />
      <lrml:toTarget keyref="#A2728" />
      <lrml:toTarget keyref="#A2729" />
      <lrml:toTarget keyref="#A2730" />
      <lrml:toTarget keyref="#A2731" />
      <lrml:toTarget keyref="#A2732" />
      <lrml:toTarget keyref="#A2733" />
      <lrml:toTarget keyref="#A2734" />
      <lrml:toTarget keyref="#A2735" />
      <lrml:toTarget keyref="#A2736" />
      <lrml:toTarget keyref="#A2737" />
      <lrml:toTarget keyref="#A2738" />
      <lrml:toTarget keyref="#A2739" />
      <lrml:toTarget keyref="#A2740" />
      <lrml:toTarget keyref="#A2741" />
      <lrml:toTarget keyref="#A2742" />
      <lrml:toTarget keyref="#A2743" />
      <lrml:toTarget keyref="#A2744" />
      <lrml:toTarget keyref="#A2745" />
      <lrml:toTarget keyref="#A2746" />
      <lrml:toTarget keyref="#A2747" />
      <lrml:toTarget keyref="#A2748" />
      <lrml:toTarget keyref="#A2749" />
      <lrml:toTarget keyref="#A2750" />
      <lrml:toTarget keyref="#A2751" />
      <lrml:toTarget keyref="#A2752" />
      <lrml:toTarget keyref="#A2753" />
      <lrml:toTarget keyref="#A2754" />
      <lrml:toTarget keyref="#A2755" />
      <lrml:toTarget keyref="#A2756" />
      <lrml:toTarget keyref="#A2757" />
      <lrml:toTarget keyref="#A2758" />
      <lrml:toTarget keyref="#A2759" />
      <lrml:toTarget keyref="#A2760" />
      <lrml:toTarget keyref="#A2761" />
      <lrml:toTarget keyref="#A2762" />
      <lrml:toTarget keyref="#A2763" />
      <lrml:toTarget keyref="#A2764" />
      <lrml:toTarget keyref="#A2765" />
      <lrml:toTarget keyref="#A2766" />
      <lrml:toTarget keyref="#A2767" />
      <lrml:toTarget keyref="#A2768" />
      <lrml:toTarget keyref="#A2769" />
      <lrml:toTarget keyref="#A2770" />
      <lrml:toTarget keyref="#A2771" />
      <lrml:toTarget keyref="#A2772" />
      <lrml:toTarget keyref="#A2773" />
      <lrml:toTarget keyref="#A2774" />
      <lrml:toTarget keyref="#A2775" />
      <lrml:toTarget keyref="#A2776" />
      <lrml:toTarget keyref="#A2777" />
      <lrml:toTarget keyref="#A2778" />
      <lrml:toTarget keyref="#A2779" />
      <lrml:toTarget keyref="#A2780" />
      <lrml:toTarget keyref="#A2781" />
      <lrml:toTarget keyref="#A2782" />
      <lrml:toTarget keyref="#A2783" />
      <lrml:toTarget keyref="#A2784" />
      <lrml:toTarget keyref="#A2785" />
      <lrml:toTarget keyref="#A2786" />
      <lrml:toTarget keyref="#A2787" />
      <lrml:toTarget keyref="#A2788" />
      <lrml:toTarget keyref="#A2789" />
      <lrml:toTarget keyref="#A2790" />
      <lrml:toTarget keyref="#A2791" />
      <lrml:toTarget keyref="#A2792" />
      <lrml:toTarget keyref="#A2793" />
      <lrml:toTarget keyref="#A2794" />
      <lrml:toTarget keyref="#A2795" />
      <lrml:toTarget keyref="#A2796" />
      <lrml:toTarget keyref="#A2797" />
      <lrml:toTarget keyref="#A2798" />
      <lrml:toTarget keyref="#A2799" />
      <lrml:toTarget keyref="#A2800" />
      <lrml:toTarget keyref="#A2801" />
      <lrml:toTarget keyref="#A2802" />
      <lrml:toTarget keyref="#A2803" />
      <lrml:toTarget keyref="#A2804" />
      <lrml:toTarget keyref="#A2805" />
      <lrml:toTarget keyref="#A2806" />
      <lrml:toTarget keyref="#A2807" />
      <lrml:toTarget keyref="#A2808" />
      <lrml:toTarget keyref="#A2809" />
      <lrml:toTarget keyref="#A2810" />
      <lrml:toTarget keyref="#A2811" />
      <lrml:toTarget keyref="#A2812" />
      <lrml:toTarget keyref="#A2813" />
      <lrml:toTarget keyref="#A2814" />
      <lrml:toTarget keyref="#A2815" />
      <lrml:toTarget keyref="#A2816" />
      <lrml:toTarget keyref="#A2817" />
      <lrml:toTarget keyref="#A2818" />
      <lrml:toTarget keyref="#A2819" />
      <lrml:toTarget keyref="#A2820" />
      <lrml:toTarget keyref="#A2821" />
      <lrml:toTarget keyref="#A2822" />
      <lrml:toTarget keyref="#A2823" />
      <lrml:toTarget keyref="#A2824" />
      <lrml:toTarget keyref="#A2825" />
      <lrml:toTarget keyref="#A2826" />
      <lrml:toTarget keyref="#A2827" />
      <lrml:toTarget keyref="#A2828" />
      <lrml:toTarget keyref="#A2829" />
      <lrml:toTarget keyref="#A2830" />
      <lrml:toTarget keyref="#A2831" />
      <lrml:toTarget keyref="#A2832" />
      <lrml:toTarget keyref="#A2833" />
      <lrml:toTarget keyref="#A2834" />
      <lrml:toTarget keyref="#A2835" />
      <lrml:toTarget keyref="#A2836" />
      <lrml:toTarget keyref="#A2837" />
      <lrml:toTarget keyref="#A2838" />
      <lrml:toTarget keyref="#A2839" />
      <lrml:toTarget keyref="#A2840" />
      <lrml:toTarget keyref="#A2841" />
      <lrml:toTarget keyref="#A2842" />
      <lrml:toTarget keyref="#A2843" />
      <lrml:toTarget keyref="#A2844" />
      <lrml:toTarget keyref="#A2845" />
      <lrml:toTarget keyref="#A2846" />
      <lrml:toTarget keyref="#A2847" />
      <lrml:toTarget keyref="#A2848" />
      <lrml:toTarget keyref="#A2849" />
      <lrml:toTarget keyref="#A2850" />
      <lrml:toTarget keyref="#A2851" />
      <lrml:toTarget keyref="#A2852" />
      <lrml:toTarget keyref="#A2853" />
      <lrml:toTarget keyref="#A2854" />
      <lrml:toTarget keyref="#A2855" />
      <lrml:toTarget keyref="#A2856" />
      <lrml:toTarget keyref="#A2857" />
      <lrml:toTarget keyref="#A2858" />
      <lrml:toTarget keyref="#A2859" />
      <lrml:toTarget keyref="#A2860" />
      <lrml:toTarget keyref="#A2861" />
      <lrml:toTarget keyref="#A2862" />
      <lrml:toTarget keyref="#A2863" />
      <lrml:toTarget keyref="#A2864" />
      <lrml:toTarget keyref="#A2865" />
      <lrml:toTarget keyref="#A2866" />
      <lrml:toTarget keyref="#A2867" />
      <lrml:toTarget keyref="#A2868" />
      <lrml:toTarget keyref="#A2869" />
      <lrml:toTarget keyref="#A2870" />
      <lrml:toTarget keyref="#A2871" />
      <lrml:toTarget keyref="#A2872" />
      <lrml:toTarget keyref="#A2873" />
      <lrml:toTarget keyref="#A2874" />
      <lrml:toTarget keyref="#A2875" />
      <lrml:toTarget keyref="#A2876" />
      <lrml:toTarget keyref="#A2877" />
      <lrml:toTarget keyref="#A2878" />
      <lrml:toTarget keyref="#A2879" />
      <lrml:toTarget keyref="#A2880" />
      <lrml:toTarget keyref="#A2881" />
      <lrml:toTarget keyref="#A2882" />
      <lrml:toTarget keyref="#A2883" />
      <lrml:toTarget keyref="#A2884" />
      <lrml:toTarget keyref="#A2885" />
      <lrml:toTarget keyref="#A2886" />
      <lrml:toTarget keyref="#A2887" />
      <lrml:toTarget keyref="#A2888" />
      <lrml:toTarget keyref="#A2889" />
      <lrml:toTarget keyref="#A2890" />
      <lrml:toTarget keyref="#A2891" />
      <lrml:toTarget keyref="#A2892" />
      <lrml:toTarget keyref="#A2893" />
      <lrml:toTarget keyref="#A2894" />
      <lrml:toTarget keyref="#A2895" />
      <lrml:toTarget keyref="#A2896" />
      <lrml:toTarget keyref="#A2897" />
      <lrml:toTarget keyref="#A2898" />
      <lrml:toTarget keyref="#A2899" />
      <lrml:toTarget keyref="#A2900" />
      <lrml:toTarget keyref="#A2901" />
      <lrml:toTarget keyref="#A2902" />
      <lrml:toTarget keyref="#A2903" />
      <lrml:toTarget keyref="#A2904" />
      <lrml:toTarget keyref="#A2905" />
      <lrml:toTarget keyref="#A2906" />
      <lrml:toTarget keyref="#A2907" />
      <lrml:toTarget keyref="#A2908" />
      <lrml:toTarget keyref="#A2909" />
      <lrml:toTarget keyref="#A2910" />
      <lrml:toTarget keyref="#A2911" />
      <lrml:toTarget keyref="#A2912" />
      <lrml:toTarget keyref="#A2913" />
      <lrml:toTarget keyref="#A2914" />
      <lrml:toTarget keyref="#A2915" />
      <lrml:toTarget keyref="#A2916" />
      <lrml:toTarget keyref="#A2917" />
      <lrml:toTarget keyref="#A2918" />
      <lrml:toTarget keyref="#A2919" />
      <lrml:toTarget keyref="#A2920" />
      <lrml:toTarget keyref="#A2921" />
      <lrml:toTarget keyref="#A2922" />
      <lrml:toTarget keyref="#A2923" />
      <lrml:toTarget keyref="#A2924" />
      <lrml:toTarget keyref="#A2925" />
      <lrml:toTarget keyref="#A2926" />
      <lrml:toTarget keyref="#A2927" />
      <lrml:toTarget keyref="#A2928" />
      <lrml:toTarget keyref="#A2929" />
      <lrml:toTarget keyref="#A2930" />
      <lrml:toTarget keyref="#A2931" />
      <lrml:toTarget keyref="#A2932" />
      <lrml:toTarget keyref="#A2933" />
      <lrml:toTarget keyref="#A2934" />
      <lrml:toTarget keyref="#A2935" />
      <lrml:toTarget keyref="#A2936" />
      <lrml:toTarget keyref="#A2937" />
      <lrml:toTarget keyref="#A2938" />
      <lrml:toTarget keyref="#A2939" />
      <lrml:toTarget keyref="#A2940" />
      <lrml:toTarget keyref="#A2941" />
      <lrml:toTarget keyref="#A2942" />
      <lrml:toTarget keyref="#A2943" />
      <lrml:toTarget keyref="#A2944" />
      <lrml:toTarget keyref="#A2945" />
      <lrml:toTarget keyref="#A2946" />
      <lrml:toTarget keyref="#A2947" />
      <lrml:toTarget keyref="#A2948" />
      <lrml:toTarget keyref="#A2949" />
      <lrml:toTarget keyref="#A2950" />
      <lrml:toTarget keyref="#A2951" />
      <lrml:toTarget keyref="#A2952" />
      <lrml:toTarget keyref="#A2953" />
      <lrml:toTarget keyref="#A2954" />
      <lrml:toTarget keyref="#A2955" />
      <lrml:toTarget keyref="#A2956" />
      <lrml:toTarget keyref="#A2957" />
      <lrml:toTarget keyref="#A2958" />
      <lrml:toTarget keyref="#A2959" />
      <lrml:toTarget keyref="#A2960" />
      <lrml:toTarget keyref="#A2961" />
      <lrml:toTarget keyref="#A2962" />
      <lrml:toTarget keyref="#A2963" />
      <lrml:toTarget keyref="#A2964" />
      <lrml:toTarget keyref="#A2965" />
      <lrml:toTarget keyref="#A2966" />
      <lrml:toTarget keyref="#A2967" />
      <lrml:toTarget keyref="#A2968" />
      <lrml:toTarget keyref="#A2969" />
      <lrml:toTarget keyref="#A2970" />
      <lrml:toTarget keyref="#A2971" />
      <lrml:toTarget keyref="#A2972" />
      <lrml:toTarget keyref="#A2973" />
      <lrml:toTarget keyref="#A2974" />
      <lrml:toTarget keyref="#A2975" />
      <lrml:toTarget keyref="#A2976" />
      <lrml:toTarget keyref="#A2977" />
      <lrml:toTarget keyref="#A2978" />
      <lrml:toTarget keyref="#A2979" />
      <lrml:toTarget keyref="#A2980" />
      <lrml:toTarget keyref="#A2981" />
      <lrml:toTarget keyref="#A2982" />
      <lrml:toTarget keyref="#A2983" />
      <lrml:toTarget keyref="#A2984" />
      <lrml:toTarget keyref="#A2985" />
      <lrml:toTarget keyref="#A2986" />
      <lrml:toTarget keyref="#A2987" />
      <lrml:toTarget keyref="#A2988" />
      <lrml:toTarget keyref="#A2989" />
      <lrml:toTarget keyref="#A2990" />
      <lrml:toTarget keyref="#A2991" />
      <lrml:toTarget keyref="#A2992" />
      <lrml:toTarget keyref="#A2993" />
      <lrml:toTarget keyref="#A2994" />
      <lrml:toTarget keyref="#A2995" />
      <lrml:toTarget keyref="#A2996" />
      <lrml:toTarget keyref="#A2997" />
      <lrml:toTarget keyref="#A2998" />
      <lrml:toTarget keyref="#A2999" />
      <lrml:toTarget keyref="#A3000" />
      <lrml:toTarget keyref="#A3001" />
      <lrml:toTarget keyref="#A3002" />
      <lrml:toTarget keyref="#A3003" />
      <lrml:toTarget keyref="#A3004" />
      <lrml:toTarget keyref="#A3005" />
      <lrml:toTarget keyref="#A3006" />
      <lrml:toTarget keyref="#A3007" />
      <lrml:toTarget keyref="#A3008" />
      <lrml:toTarget keyref="#A3009" />
      <lrml:toTarget keyref="#A3010" />
      <lrml:toTarget keyref="#A3011" />
      <lrml:toTarget keyref="#A3012" />
      <lrml:toTarget keyref="#A3013" />
      <lrml:toTarget keyref="#A3014" />
      <lrml:toTarget keyref="#A3015" />
      <lrml:toTarget keyref="#A3016" />
      <lrml:toTarget keyref="#A3017" />
      <lrml:toTarget keyref="#A3018" />
      <lrml:toTarget keyref="#A3019" />
      <lrml:toTarget keyref="#A3020" />
      <lrml:toTarget keyref="#A3021" />
      <lrml:toTarget keyref="#A3022" />
      <lrml:toTarget keyref="#A3023" />
      <lrml:toTarget keyref="#A3024" />
      <lrml:toTarget keyref="#A3025" />
      <lrml:toTarget keyref="#A3026" />
      <lrml:toTarget keyref="#A3027" />
      <lrml:toTarget keyref="#A3028" />
      <lrml:toTarget keyref="#A3029" />
      <lrml:toTarget keyref="#A3030" />
      <lrml:toTarget keyref="#A3031" />
      <lrml:toTarget keyref="#A3032" />
      <lrml:toTarget keyref="#A3033" />
      <lrml:toTarget keyref="#A3034" />
      <lrml:toTarget keyref="#A3035" />
      <lrml:toTarget keyref="#A3036" />
      <lrml:toTarget keyref="#A3037" />
      <lrml:toTarget keyref="#A3038" />
      <lrml:toTarget keyref="#A3039" />
      <lrml:toTarget keyref="#A3040" />
      <lrml:toTarget keyref="#A3041" />
      <lrml:toTarget keyref="#A3042" />
      <lrml:toTarget keyref="#A3043" />
      <lrml:toTarget keyref="#A3044" />
      <lrml:toTarget keyref="#A3045" />
      <lrml:toTarget keyref="#A3046" />
      <lrml:toTarget keyref="#A3047" />
      <lrml:toTarget keyref="#A3048" />
      <lrml:toTarget keyref="#A3049" />
      <lrml:toTarget keyref="#A3050" />
      <lrml:toTarget keyref="#A3051" />
      <lrml:toTarget keyref="#A3052" />
      <lrml:toTarget keyref="#A3053" />
      <lrml:toTarget keyref="#A3054" />
      <lrml:toTarget keyref="#A3055" />
      <lrml:toTarget keyref="#A3056" />
      <lrml:toTarget keyref="#A3057" />
      <lrml:toTarget keyref="#A3058" />
      <lrml:toTarget keyref="#A3059" />
      <lrml:toTarget keyref="#A3060" />
      <lrml:toTarget keyref="#A3061" />
      <lrml:toTarget keyref="#A3062" />
      <lrml:toTarget keyref="#A3063" />
      <lrml:toTarget keyref="#A3064" />
      <lrml:toTarget keyref="#A3065" />
      <lrml:toTarget keyref="#A3066" />
      <lrml:toTarget keyref="#A3067" />
      <lrml:toTarget keyref="#A3068" />
      <lrml:toTarget keyref="#A3069" />
      <lrml:toTarget keyref="#A3070" />
      <lrml:toTarget keyref="#A3071" />
      <lrml:toTarget keyref="#A3072" />
      <lrml:toTarget keyref="#A3073" />
      <lrml:toTarget keyref="#A3074" />
      <lrml:toTarget keyref="#A3075" />
      <lrml:toTarget keyref="#A3076" />
      <lrml:toTarget keyref="#A3077" />
      <lrml:toTarget keyref="#A3078" />
      <lrml:toTarget keyref="#A3079" />
      <lrml:toTarget keyref="#A3080" />
      <lrml:toTarget keyref="#A3081" />
      <lrml:toTarget keyref="#A3082" />
      <lrml:toTarget keyref="#A3083" />
      <lrml:toTarget keyref="#A3084" />
      <lrml:toTarget keyref="#A3085" />
    </lrml:Association>
  </lrml:Associations>
  <lrml:Statements key="statements1">
    <lrml:PrescriptiveStatement key="statements1Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z),

	(rioOnto:RexistAtTime :a2 :t2) & (rioOnto:>= :t1 :t2) & (rioOnto:and :a2 :ei :ec1 :ec2 :ec3 :er :ed) & (prOnto:measure :em)
	 & (prOnto:implement' :ei :y :em) & (rioOnto:cause' :ec1 :em :el) & (prOnto:lawful' :el :ep)
	 & (rioOnto:cause' :ec2 :em :ef) & (prOnto:fair' :ef :ep) & (rioOnto:cause' :ec3 :em :et)
	 & (prOnto:transparent' :et :ep) & (prOnto:relatedTo :ep :w) & (prOnto:describe' :ed :y :ei)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":a2">a2</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t1" />
                <ruleml:Var keyref=":t2" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:and" />
                <ruleml:Var keyref=":a2" />
                <ruleml:Var key=":ei">ei</ruleml:Var>
                <ruleml:Var key=":ec1">ec1</ruleml:Var>
                <ruleml:Var key=":ec2">ec2</ruleml:Var>
                <ruleml:Var key=":ec3">ec3</ruleml:Var>
                <ruleml:Var key=":er">er</ruleml:Var>
                <ruleml:Var key=":ed">ed</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:measure" />
                <ruleml:Var key=":em">em</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A3">
                <ruleml:Rel iri="prOnto:implement" />
                <ruleml:Var keyref=":ei" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":em" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A4">
                <ruleml:Rel iri="rioOnto:cause" />
                <ruleml:Var keyref=":ec1" />
                <ruleml:Var keyref=":em" />
                <ruleml:Var key=":el">el</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A5">
                <ruleml:Rel iri="prOnto:lawful" />
                <ruleml:Var keyref=":el" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A6">
                <ruleml:Rel iri="rioOnto:cause" />
                <ruleml:Var keyref=":ec2" />
                <ruleml:Var keyref=":em" />
                <ruleml:Var key=":ef">ef</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A7">
                <ruleml:Rel iri="prOnto:fair" />
                <ruleml:Var keyref=":ef" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A8">
                <ruleml:Rel iri="rioOnto:cause" />
                <ruleml:Var keyref=":ec3" />
                <ruleml:Var keyref=":em" />
                <ruleml:Var key=":et">et</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A9">
                <ruleml:Rel iri="prOnto:transparent" />
                <ruleml:Var keyref=":et" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:relatedTo" />
                <ruleml:Var keyref=":ep" />
                <ruleml:Var keyref=":w" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A10">
                <ruleml:Rel iri="prOnto:describe" />
                <ruleml:Var keyref=":ed" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":ei" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements2">
    <lrml:PrescriptiveStatement key="statements2Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:Purpose :epu) & (prOnto:isBasedOn :ep :epu),

	(rioOnto:RexistAtTime :a2 :t2) & (rioOnto:>= :t1 :t2) & (rioOnto:and :a2 :ei :ec1 :ec2 :ec3 :ed) & (prOnto:measure :em)
	 & (prOnto:implement' :ei :y :em) & (rioOnto:cause' :ec1 :em :es) & (prOnto:specified' :es :epu)
	 & (rioOnto:cause' :ec2 :em :el) & (prOnto:lawful' :el :epu) & (rioOnto:cause' :ec3 :em :ecw)
	 & (prOnto:compatibileWith' :ecw :ep :epu) & (prOnto:describe' :ed :y :ei)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A11">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A12">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Purpose" />
              <ruleml:Var key=":epu">epu</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isBasedOn" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":epu" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":a2">a2</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t1" />
                <ruleml:Var keyref=":t2" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:and" />
                <ruleml:Var keyref=":a2" />
                <ruleml:Var key=":ei">ei</ruleml:Var>
                <ruleml:Var key=":ec1">ec1</ruleml:Var>
                <ruleml:Var key=":ec2">ec2</ruleml:Var>
                <ruleml:Var key=":ec3">ec3</ruleml:Var>
                <ruleml:Var key=":ed">ed</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:measure" />
                <ruleml:Var key=":em">em</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A13">
                <ruleml:Rel iri="prOnto:implement" />
                <ruleml:Var keyref=":ei" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":em" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A14">
                <ruleml:Rel iri="rioOnto:cause" />
                <ruleml:Var keyref=":ec1" />
                <ruleml:Var keyref=":em" />
                <ruleml:Var key=":es">es</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A15">
                <ruleml:Rel iri="prOnto:specified" />
                <ruleml:Var keyref=":es" />
                <ruleml:Var keyref=":epu" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A16">
                <ruleml:Rel iri="rioOnto:cause" />
                <ruleml:Var keyref=":ec2" />
                <ruleml:Var keyref=":em" />
                <ruleml:Var key=":el">el</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A17">
                <ruleml:Rel iri="prOnto:lawful" />
                <ruleml:Var keyref=":el" />
                <ruleml:Var keyref=":epu" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A18">
                <ruleml:Rel iri="rioOnto:cause" />
                <ruleml:Var keyref=":ec3" />
                <ruleml:Var keyref=":em" />
                <ruleml:Var key=":ecw">ecw</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A19">
                <ruleml:Rel iri="prOnto:compatibileWith" />
                <ruleml:Var keyref=":ecw" />
                <ruleml:Var keyref=":ep" />
                <ruleml:Var keyref=":epu" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A20">
                <ruleml:Rel iri="prOnto:describe" />
                <ruleml:Var keyref=":ed" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":ei" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:ConstitutiveStatement key="statements2Formula2">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :eor :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (rioOnto:or :eor :ebo1 :ebo2 :ebo3) & (prOnto:isBasedOn' :ebo1 :ep :epi)
	 & (prOnto:PublicInterest :epi) & (prOnto:isBasedOn' :ebo2 :ep :ers) & (prOnto:Research :ers)
	 & (prOnto:isBasedOn' :ebo3 :ep :est) & (prOnto:Statistic :est),

	(prOnto:compatibileWith :ep :epu)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":eor">eor</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A21">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A22">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eor" />
              <ruleml:Var key=":ebo1">ebo1</ruleml:Var>
              <ruleml:Var key=":ebo2">ebo2</ruleml:Var>
              <ruleml:Var key=":ebo3">ebo3</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A23">
              <ruleml:Rel iri="prOnto:isBasedOn" />
              <ruleml:Var keyref=":ebo1" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var key=":epi">epi</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PublicInterest" />
              <ruleml:Var keyref=":epi" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A24">
              <ruleml:Rel iri="prOnto:isBasedOn" />
              <ruleml:Var keyref=":ebo2" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var key=":ers">ers</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Research" />
              <ruleml:Var keyref=":ers" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A25">
              <ruleml:Rel iri="prOnto:isBasedOn" />
              <ruleml:Var keyref=":ebo3" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var key=":est">est</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Statistic" />
              <ruleml:Var keyref=":est" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:compatibileWith" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":epu" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements3">
    <lrml:PrescriptiveStatement key="statements3Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:Purpose :epu) & (prOnto:isBasedOn :ep :epu),

	(rioOnto:RexistAtTime :a2 :t2) & (rioOnto:>= :t1 :t2) & (rioOnto:and :a2 :ei :ec1 :ec2 :ec3 :ed1 :ed2 :ed3) & (prOnto:measure :em)
	 & (prOnto:implement' :ei :y :em) & (rioOnto:cause' :ec1 :em :eaw) & (prOnto:adequateWith' :eaw :z :epu)
	 & (rioOnto:cause' :ec2 :em :ert) & (prOnto:relevantTo' :ert :z :epu) & (rioOnto:cause' :ec3 :em :elt)
	 & (prOnto:limitedTo' :elt :z :epu) & (prOnto:describe' :ed1 :y :ec1) & (prOnto:describe' :ed2 :y :ec2)
	 & (prOnto:describe' :ed3 :y :ec3)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A26">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A27">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Purpose" />
              <ruleml:Var key=":epu">epu</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isBasedOn" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":epu" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":a2">a2</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t1" />
                <ruleml:Var keyref=":t2" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:and" />
                <ruleml:Var keyref=":a2" />
                <ruleml:Var key=":ei">ei</ruleml:Var>
                <ruleml:Var key=":ec1">ec1</ruleml:Var>
                <ruleml:Var key=":ec2">ec2</ruleml:Var>
                <ruleml:Var key=":ec3">ec3</ruleml:Var>
                <ruleml:Var key=":ed1">ed1</ruleml:Var>
                <ruleml:Var key=":ed2">ed2</ruleml:Var>
                <ruleml:Var key=":ed3">ed3</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:measure" />
                <ruleml:Var key=":em">em</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A28">
                <ruleml:Rel iri="prOnto:implement" />
                <ruleml:Var keyref=":ei" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":em" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A29">
                <ruleml:Rel iri="rioOnto:cause" />
                <ruleml:Var keyref=":ec1" />
                <ruleml:Var keyref=":em" />
                <ruleml:Var key=":eaw">eaw</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A30">
                <ruleml:Rel iri="prOnto:adequateWith" />
                <ruleml:Var keyref=":eaw" />
                <ruleml:Var keyref=":z" />
                <ruleml:Var keyref=":epu" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A31">
                <ruleml:Rel iri="rioOnto:cause" />
                <ruleml:Var keyref=":ec2" />
                <ruleml:Var keyref=":em" />
                <ruleml:Var key=":ert">ert</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A32">
                <ruleml:Rel iri="prOnto:relevantTo" />
                <ruleml:Var keyref=":ert" />
                <ruleml:Var keyref=":z" />
                <ruleml:Var keyref=":epu" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A33">
                <ruleml:Rel iri="rioOnto:cause" />
                <ruleml:Var keyref=":ec3" />
                <ruleml:Var keyref=":em" />
                <ruleml:Var key=":elt">elt</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A34">
                <ruleml:Rel iri="prOnto:limitedTo" />
                <ruleml:Var keyref=":elt" />
                <ruleml:Var keyref=":z" />
                <ruleml:Var keyref=":epu" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A35">
                <ruleml:Rel iri="prOnto:describe" />
                <ruleml:Var keyref=":ed1" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":ec1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A36">
                <ruleml:Rel iri="prOnto:describe" />
                <ruleml:Var keyref=":ed2" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":ec2" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A37">
                <ruleml:Rel iri="prOnto:describe" />
                <ruleml:Var keyref=":ed3" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":ec3" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements4">
    <lrml:PrescriptiveStatement key="statements4Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z),

	(rioOnto:RexistAtTime :a2 :t2) & (rioOnto:>= :t1 :t2) & (rioOnto:and :a2 :ei :ec1 :ec2 :ed1 :ed2) & (prOnto:measure :em)
	 & (prOnto:implement' :ei :y :em) & (rioOnto:cause' :ec1 :em :eca) & (prOnto:accurate' :eca :z)
	 & (rioOnto:cause' :ec2 :em :eud) & (prOnto:upToDate' :eud :z) & (prOnto:describe' :ed1 :y :ec1)
	 & (prOnto:describe' :ed2 :y :ec2)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A38">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A39">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":a2">a2</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t1" />
                <ruleml:Var keyref=":t2" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:and" />
                <ruleml:Var keyref=":a2" />
                <ruleml:Var key=":ei">ei</ruleml:Var>
                <ruleml:Var key=":ec1">ec1</ruleml:Var>
                <ruleml:Var key=":ec2">ec2</ruleml:Var>
                <ruleml:Var key=":ed1">ed1</ruleml:Var>
                <ruleml:Var key=":ed2">ed2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:measure" />
                <ruleml:Var key=":em">em</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A40">
                <ruleml:Rel iri="prOnto:implement" />
                <ruleml:Var keyref=":ei" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":em" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A41">
                <ruleml:Rel iri="rioOnto:cause" />
                <ruleml:Var keyref=":ec1" />
                <ruleml:Var keyref=":em" />
                <ruleml:Var key=":eca">eca</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A42">
                <ruleml:Rel iri="prOnto:accurate" />
                <ruleml:Var keyref=":eca" />
                <ruleml:Var keyref=":z" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A43">
                <ruleml:Rel iri="rioOnto:cause" />
                <ruleml:Var keyref=":ec2" />
                <ruleml:Var keyref=":em" />
                <ruleml:Var key=":eud">eud</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A44">
                <ruleml:Rel iri="prOnto:upToDate" />
                <ruleml:Var keyref=":eud" />
                <ruleml:Var keyref=":z" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A45">
                <ruleml:Rel iri="prOnto:describe" />
                <ruleml:Var keyref=":ed1" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":ec1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A46">
                <ruleml:Rel iri="prOnto:describe" />
                <ruleml:Var keyref=":ed2" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":ec2" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements4Formula2">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :enr :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (rioOnto:not :enr :eaw) & (prOnto:accurate' :eaw :z),

	(rioOnto:RexistAtTime :o1 :t1) & (rioOnto:or :o1 :eca :eco) & (prOnto:erase' :eca :y :z) & (prOnto:correct' :eco :y :z)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":enr">enr</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A47">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A48">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":enr" />
              <ruleml:Var key=":eaw">eaw</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A49">
              <ruleml:Rel iri="prOnto:accurate" />
              <ruleml:Var keyref=":eaw" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":o1">o1</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:or" />
                <ruleml:Var keyref=":o1" />
                <ruleml:Var key=":eca">eca</ruleml:Var>
                <ruleml:Var key=":eco">eco</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A50">
                <ruleml:Rel iri="prOnto:erase" />
                <ruleml:Var keyref=":eca" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":z" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A51">
                <ruleml:Rel iri="prOnto:correct" />
                <ruleml:Var keyref=":eco" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":z" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements5">
    <lrml:PrescriptiveStatement key="statements5Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :en :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:Purpose :epu) & (prOnto:isBasedOn :ep :epu)
	 & (prOnto:PersonalDataRecord :p) & (prOnto:storedIn :z :p) & (rioOnto:not :en :ei)
	 & (rioOnto:imply :ei :z :epu),

	(rioOnto:RexistAtTime :a2 :t2) & (rioOnto:>= :t1 :t2) & (rioOnto:and :a2 :ei :ec2 :ed2) & (prOnto:measure :em)
	 & (prOnto:implement' :ei :y :em) & (rioOnto:cause' :ec2 :em :eni) & (rioOnto:not :eni :eif)
	 & (prOnto:identifiableFrom' :eif :w :z) & (prOnto:describe' :ed2 :y :ec2)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":en">en</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A52">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A53">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Purpose" />
              <ruleml:Var key=":epu">epu</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isBasedOn" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":epu" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalDataRecord" />
              <ruleml:Var key=":p">p</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:storedIn" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":p" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en" />
              <ruleml:Var key=":ei">ei</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:imply" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":epu" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":a2">a2</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t1" />
                <ruleml:Var keyref=":t2" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:and" />
                <ruleml:Var keyref=":a2" />
                <ruleml:Var key=":ei">ei</ruleml:Var>
                <ruleml:Var key=":ec2">ec2</ruleml:Var>
                <ruleml:Var key=":ed2">ed2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:measure" />
                <ruleml:Var key=":em">em</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A54">
                <ruleml:Rel iri="prOnto:implement" />
                <ruleml:Var keyref=":ei" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":em" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A55">
                <ruleml:Rel iri="rioOnto:cause" />
                <ruleml:Var keyref=":ec2" />
                <ruleml:Var keyref=":em" />
                <ruleml:Var key=":eni">eni</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:not" />
                <ruleml:Var keyref=":eni" />
                <ruleml:Var key=":eif">eif</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A56">
                <ruleml:Rel iri="prOnto:identifiableFrom" />
                <ruleml:Var keyref=":eif" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":z" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A57">
                <ruleml:Rel iri="prOnto:describe" />
                <ruleml:Var keyref=":ed2" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":ec2" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements6">
    <lrml:PrescriptiveStatement key="statements6Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z),

	(rioOnto:RexistAtTime :a2 :t2) & (rioOnto:>= :t1 :t2) & (rioOnto:and :a2 :ei :ec :ed) & (prOnto:measure :em)
	 & (prOnto:implement' :ei :y :em) & (rioOnto:cause' :ec :em :ese) & (prOnto:secure' :ese :ep)
	 & (prOnto:describe' :ed :y :ec)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A58">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A59">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":a2">a2</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t1" />
                <ruleml:Var keyref=":t2" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:and" />
                <ruleml:Var keyref=":a2" />
                <ruleml:Var key=":ei">ei</ruleml:Var>
                <ruleml:Var key=":ec">ec</ruleml:Var>
                <ruleml:Var key=":ed">ed</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:measure" />
                <ruleml:Var key=":em">em</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A60">
                <ruleml:Rel iri="prOnto:implement" />
                <ruleml:Var keyref=":ei" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":em" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A61">
                <ruleml:Rel iri="rioOnto:cause" />
                <ruleml:Var keyref=":ec" />
                <ruleml:Var keyref=":em" />
                <ruleml:Var key=":ese">ese</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A62">
                <ruleml:Rel iri="prOnto:secure" />
                <ruleml:Var keyref=":ese" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A63">
                <ruleml:Rel iri="prOnto:describe" />
                <ruleml:Var keyref=":ed" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":ec" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements7">
    <lrml:ConstitutiveStatement key="statements7Formula1">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :ehc :eau :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:Purpose :epu) & (prOnto:isBasedOn :ep :epu)
	 & (prOnto:consent :c) & (prOnto:hasConsented' :ehc :w :c) & (prOnto:authorizedBy' :eau :epu :c)
	 & (rioOnto:exceptionCha2Art8Par1 :ep),

	(prOnto:lawful :ep)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":ehc">ehc</ruleml:Var>
              <ruleml:Var key=":eau">eau</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A64">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A65">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Purpose" />
              <ruleml:Var key=":epu">epu</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isBasedOn" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":epu" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:consent" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A66">
              <ruleml:Rel iri="prOnto:hasConsented" />
              <ruleml:Var keyref=":ehc" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A67">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":eau" />
              <ruleml:Var keyref=":epu" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha2Art8Par1" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:lawful" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements8">
    <lrml:ConstitutiveStatement key="statements8Formula1">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ei :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (rioOnto:imply :ei :eor :ep) & (rioOnto:or :eor :ea :er)
	 & (rioOnto:and :ea :ee :epa) & (prOnto:execute' :ee :c :c) & (prOnto:contract :c)
	 & (prOnto:partyOf' :epa :w :c) & (prOnto:requestToEnter' :er :w :c),

	(prOnto:lawful :ep)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ei">ei</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A68">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A69">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:imply" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var key=":eor">eor</ruleml:Var>
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eor" />
              <ruleml:Var key=":ea">ea</ruleml:Var>
              <ruleml:Var key=":er">er</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":ea" />
              <ruleml:Var key=":ee">ee</ruleml:Var>
              <ruleml:Var key=":epa">epa</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A70">
              <ruleml:Rel iri="prOnto:execute" />
              <ruleml:Var keyref=":ee" />
              <ruleml:Var key=":c">k</ruleml:Var>
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:contract" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A71">
              <ruleml:Rel iri="prOnto:partyOf" />
              <ruleml:Var keyref=":epa" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A72">
              <ruleml:Rel iri="prOnto:requestToEnter" />
              <ruleml:Var keyref=":er" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:lawful" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements9">
    <lrml:ConstitutiveStatement key="statements9Formula1">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :eo :ei :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (rioOnto:Obliged' :eo :y :e :t1) & (rioOnto:imply :ei :e :ep),

	(prOnto:lawful :ep)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":eo">eo</ruleml:Var>
              <ruleml:Var key=":ei">ei</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A73">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A74">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A75">
              <ruleml:Rel iri="rioOnto:Obliged" />
              <ruleml:Var keyref=":eo" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":e">e</ruleml:Var>
              <ruleml:Var keyref=":t1" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:imply" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var keyref=":e" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:lawful" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements10">
    <lrml:ConstitutiveStatement key="statements10Formula1">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :ei :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (rioOnto:or :eor :epr1 :epr2) & (prOnto:protect' :epr1 :k1 prOnto:vitalInterest(:w))
	 & (prOnto:protect' :epr2 :k2 prOnto:vitalInterest(:p)) & (prOnto:naturalPerson :p) & (rioOnto:imply :ei :eor :ep),

	(prOnto:lawful :ep)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":ei">ei</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A76">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A77">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var key=":eor">eor</ruleml:Var>
              <ruleml:Var key=":epr1">epr1</ruleml:Var>
              <ruleml:Var key=":epr2">epr2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A78">
              <ruleml:Rel iri="prOnto:protect" />
              <ruleml:Var keyref=":epr1" />
              <ruleml:Var key=":k1">k1</ruleml:Var>
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:vitalInterest" />
                <ruleml:Var keyref=":w" />
              </ruleml:Expr>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A79">
              <ruleml:Rel iri="prOnto:protect" />
              <ruleml:Var keyref=":epr2" />
              <ruleml:Var key=":k2">k2</ruleml:Var>
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:vitalInterest" />
                <ruleml:Var key=":p">p</ruleml:Var>
              </ruleml:Expr>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:naturalPerson" />
              <ruleml:Var keyref=":p" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:imply" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var keyref=":eor" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:lawful" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements11">
    <lrml:ConstitutiveStatement key="statements11Formula1">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :epe :eor :eh :ei :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (rioOnto:Permitted' :epe :y :ee :t1) & (prOnto:execute' :ee :y :et)
	 & (rioOnto:or :eor :er1 :er2) & (prOnto:relatedTo' :er1 :et :pi) & (prOnto:relatedTo' :er2 :et :pp)
	 & (prOnto:PublicInterest :pi) & (prOnto:publicPowers :pp) & (prOnto:hold' :eh :y :pp)
	 & (rioOnto:imply :ei :y :pp) & (rioOnto:exceptionCha3Sec4Art21Par1 :ep),

	(prOnto:lawful :ep)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":epe">epe</ruleml:Var>
              <ruleml:Var key=":eor">eor</ruleml:Var>
              <ruleml:Var key=":eh">eh</ruleml:Var>
              <ruleml:Var key=":ei">ei</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A80">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A81">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A82">
              <ruleml:Rel iri="rioOnto:Permitted" />
              <ruleml:Var keyref=":epe" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":ee">ee</ruleml:Var>
              <ruleml:Var keyref=":t1" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A83">
              <ruleml:Rel iri="prOnto:execute" />
              <ruleml:Var keyref=":ee" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":et">et</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eor" />
              <ruleml:Var keyref=":er1" />
              <ruleml:Var keyref=":er2" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A84">
              <ruleml:Rel iri="prOnto:relatedTo" />
              <ruleml:Var keyref=":er1" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var key=":pi">pi</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A85">
              <ruleml:Rel iri="prOnto:relatedTo" />
              <ruleml:Var keyref=":er2" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var key=":pp">pp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PublicInterest" />
              <ruleml:Var keyref=":pi" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:publicPowers" />
              <ruleml:Var keyref=":pp" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A86">
              <ruleml:Rel iri="prOnto:hold" />
              <ruleml:Var keyref=":eh" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":pp" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:imply" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":pp" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec4Art21Par1" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:lawful" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements12">
    <lrml:ConstitutiveStatement key="statements12Formula1">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :eor :en :ei :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:thirdParty :k) & (prOnto:PersonalDataProcessing' :ep :x :z) & (rioOnto:or :eor :ei1 :ei2)
	 & (rioOnto:imply :ei1 :eli1 :ep) & (prOnto:legitimateInterestOf' :eli1 :y) & (rioOnto:imply :ei2 :eli2 :ep)
	 & (prOnto:legitimateInterestOf' :eli2 :k) & (rioOnto:not :en :ea) & (rioOnto:and :ea :er1 :er2)
	 & (prOnto:riskFor' :er1 :eli3) & (prOnto:legitimateInterestOf' :eli3 :w) & (prOnto:riskFor' :er2 :erf)
	 & (prOnto:rightsAndFreedomsOf' :erf :w) & (rioOnto:imply :ei :eor :ep) & (rioOnto:exceptionCha3Sec4Art21Par1 :ep),

	(prOnto:lawful :ep)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":eor">eor</ruleml:Var>
              <ruleml:Var key=":en">en</ruleml:Var>
              <ruleml:Var key=":ei">ei</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A87">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:thirdParty" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A88">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eor" />
              <ruleml:Var key=":ei1">ei1</ruleml:Var>
              <ruleml:Var key=":ei2">ei2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:imply" />
              <ruleml:Var keyref=":ei1" />
              <ruleml:Var key=":eli1">eli1</ruleml:Var>
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A89">
              <ruleml:Rel iri="prOnto:legitimateInterestOf" />
              <ruleml:Var keyref=":eli1" />
              <ruleml:Var keyref=":y" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:imply" />
              <ruleml:Var keyref=":ei2" />
              <ruleml:Var key=":eli2">eli2</ruleml:Var>
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A90">
              <ruleml:Rel iri="prOnto:legitimateInterestOf" />
              <ruleml:Var keyref=":eli2" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en" />
              <ruleml:Var key=":ea">ea</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":ea" />
              <ruleml:Var key=":er1">er1</ruleml:Var>
              <ruleml:Var key=":er2">er2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A91">
              <ruleml:Rel iri="prOnto:riskFor" />
              <ruleml:Var keyref=":er1" />
              <ruleml:Var key=":eli3">eli3</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A92">
              <ruleml:Rel iri="prOnto:legitimateInterestOf" />
              <ruleml:Var keyref=":eli3" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A93">
              <ruleml:Rel iri="prOnto:riskFor" />
              <ruleml:Var keyref=":er2" />
              <ruleml:Var key=":erf">erf</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A94">
              <ruleml:Rel iri="prOnto:rightsAndFreedomsOf" />
              <ruleml:Var keyref=":erf" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:imply" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var keyref=":eor" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec4Art21Par1" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:lawful" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
    <lrml:ConstitutiveStatement key="statements12Formula2">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :ei :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:publicAuthority :k) & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:execute' :ee :k :et)
	 & (rioOnto:imply :ei :et :ep) & (rioOnto:exceptionCha3Sec4Art21Par1 :ep),

	(prOnto:lawful :ep)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":ei">ei</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A95">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:publicAuthority" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A96">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A97">
              <ruleml:Rel iri="prOnto:execute" />
              <ruleml:Var key=":ee">ee</ruleml:Var>
              <ruleml:Var keyref=":k" />
              <ruleml:Var key=":et">et</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:imply" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec4Art21Par1" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:lawful" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements13">
    <lrml:PrescriptiveStatement key="statements13Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :epo1 :epo2 :ehc1 :eau1 :ehc2 :eau2 :enr :eli :eco :ena :eca :eta :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:Purpose :epu) & (prOnto:isBasedOn :ep :epu)
	 & (prOnto:consent :c1) & (prOnto:hasConsented' :ehc1 :w :c1) & (prOnto:authorizedBy' :eau1 :epu1 :c1)
	 & (rioOnto:not :enr :ehc2) & (prOnto:consent :c2) & (prOnto:hasConsented' :ehc2 :w :c2)
	 & (prOnto:authorizedBy' :eau2 :epu2 :c2) & (prOnto:linkBetween' :eli :epu1 :epu2) & (prOnto:contextOf :eco :ep)
	 & (prOnto:natureOf :ena :z) & (rioOnto:cause' :eca :epu2 :ecs) & (prOnto:relatedTo :ecs :w)
	 & (prOnto:takenToAddress' :eta :em :ecs) & (prOnto:measure :em),

	(rioOnto:RexistAtTime :a2 :t1) & (rioOnto:and :a2 :et1 :et2 :et3 :et4 :et5) & (prOnto:takeIntoAccount' :et1 :y :eli) & (prOnto:takeIntoAccount' :et2 :y :eco)
	 & (prOnto:takeIntoAccount' :et3 :y :ena) & (prOnto:takeIntoAccount' :et4 :y :ecs) & (prOnto:takeIntoAccount' :et5 :y :eta)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":epo1">epo1</ruleml:Var>
              <ruleml:Var key=":epo2">epo2</ruleml:Var>
              <ruleml:Var key=":ehc1">ehc1</ruleml:Var>
              <ruleml:Var key=":eau1">eau1</ruleml:Var>
              <ruleml:Var key=":ehc2">ehc2</ruleml:Var>
              <ruleml:Var key=":eau2">eau2</ruleml:Var>
              <ruleml:Var key=":enr">enr</ruleml:Var>
              <ruleml:Var key=":eli">eli</ruleml:Var>
              <ruleml:Var key=":eco">eco</ruleml:Var>
              <ruleml:Var key=":ena">ena</ruleml:Var>
              <ruleml:Var key=":eca">eca</ruleml:Var>
              <ruleml:Var key=":eta">eta</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A98">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A99">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Purpose" />
              <ruleml:Var key=":epu">epu</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isBasedOn" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":epu" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:consent" />
              <ruleml:Var key=":c1">c1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A100">
              <ruleml:Rel iri="prOnto:hasConsented" />
              <ruleml:Var keyref=":ehc1" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":c1" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A101">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":eau1" />
              <ruleml:Var keyref=":epu1" />
              <ruleml:Var keyref=":c1" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":enr" />
              <ruleml:Var key=":ehc2">ehc2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:consent" />
              <ruleml:Var key=":c2">c2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A102">
              <ruleml:Rel iri="prOnto:hasConsented" />
              <ruleml:Var keyref=":ehc2" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":c2" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A103">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":eau2" />
              <ruleml:Var keyref=":epu2" />
              <ruleml:Var keyref=":c2" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A104">
              <ruleml:Rel iri="prOnto:linkBetween" />
              <ruleml:Var keyref=":eli" />
              <ruleml:Var keyref=":epu1" />
              <ruleml:Var keyref=":epu2" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:contextOf" />
              <ruleml:Var keyref=":eco" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:natureOf" />
              <ruleml:Var keyref=":ena" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A105">
              <ruleml:Rel iri="rioOnto:cause" />
              <ruleml:Var keyref=":eca" />
              <ruleml:Var keyref=":epu2" />
              <ruleml:Var key=":ecs">ecs</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:relatedTo" />
              <ruleml:Var keyref=":ecs" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A106">
              <ruleml:Rel iri="prOnto:takenToAddress" />
              <ruleml:Var keyref=":eta" />
              <ruleml:Var key=":em">em</ruleml:Var>
              <ruleml:Var keyref=":ecs" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:measure" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":a2">a2</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:and" />
                <ruleml:Var keyref=":a2" />
                <ruleml:Var key=":et1">et1</ruleml:Var>
                <ruleml:Var key=":et2">et2</ruleml:Var>
                <ruleml:Var key=":et3">et3</ruleml:Var>
                <ruleml:Var key=":et4">et4</ruleml:Var>
                <ruleml:Var key=":et5">et5</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A107">
                <ruleml:Rel iri="prOnto:takeIntoAccount" />
                <ruleml:Var keyref=":et1" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":eli" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A108">
                <ruleml:Rel iri="prOnto:takeIntoAccount" />
                <ruleml:Var keyref=":et2" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":eco" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A109">
                <ruleml:Rel iri="prOnto:takeIntoAccount" />
                <ruleml:Var keyref=":et3" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":ena" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A110">
                <ruleml:Rel iri="prOnto:takeIntoAccount" />
                <ruleml:Var keyref=":et4" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":ecs" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A111">
                <ruleml:Rel iri="prOnto:takeIntoAccount" />
                <ruleml:Var keyref=":et5" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":eta" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements14">
    <lrml:PrescriptiveStatement key="statements14Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :ehc :eau :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:Purpose :epu) & (prOnto:isBasedOn :ep :epu)
	 & (prOnto:consent :c) & (prOnto:hasConsented' :ehc :w :c) & (prOnto:authorizedBy' :eau :epu :c),

	(rioOnto:RexistAtTime :ea :t1) & (prOnto:ableTo' :ea :y :ed) & (prOnto:demonstrate' :ed :y :ehc)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":ehc">ehc</ruleml:Var>
              <ruleml:Var key=":eau">eau</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A112">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A113">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Purpose" />
              <ruleml:Var key=":epu">epu</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isBasedOn" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":epu" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:consent" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A114">
              <ruleml:Rel iri="prOnto:hasConsented" />
              <ruleml:Var keyref=":ehc" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A115">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":eau" />
              <ruleml:Var keyref=":epu" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":ea">ea</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A116">
                <ruleml:Rel iri="prOnto:ableTo" />
                <ruleml:Var keyref=":ea" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var key=":ed">ed</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A117">
                <ruleml:Rel iri="prOnto:demonstrate" />
                <ruleml:Var keyref=":ed" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":ehc" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements15">
    <lrml:PrescriptiveStatement key="statements15Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :ehc :eau :eco) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Purpose :epu) & (prOnto:isBasedOn :ep :epu)
	 & (prOnto:consent :c) & (prOnto:hasConsented' :ehc :w :c) & (prOnto:authorizedBy' :eau :epu :c)
	 & (prOnto:complyWith' :eco :epu GDPR) & (rioOnto:partOf :epu :co) & (prOnto:contract :co),

	(rioOnto:RexistAtTime :er :t2) & (rioOnto:>= :t1 :t2) & (prOnto:requestOfConsent' :er :y :w) & (prOnto:clearForm :er)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":ehc">ehc</ruleml:Var>
              <ruleml:Var key=":eau">eau</ruleml:Var>
              <ruleml:Var key=":eco">eco</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Purpose" />
              <ruleml:Var key=":epu">epu</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isBasedOn" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":epu" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:consent" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A118">
              <ruleml:Rel iri="prOnto:hasConsented" />
              <ruleml:Var keyref=":ehc" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A119">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":eau" />
              <ruleml:Var keyref=":epu" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A120">
              <ruleml:Rel iri="prOnto:complyWith" />
              <ruleml:Var keyref=":eco" />
              <ruleml:Var keyref=":epu" />
              <ruleml:Ind>GDPR</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:partOf" />
              <ruleml:Var keyref=":epu" />
              <ruleml:Var key=":co">co</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:contract" />
              <ruleml:Var keyref=":co" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":er">er</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t1" />
                <ruleml:Var keyref=":t2" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A121">
                <ruleml:Rel iri="prOnto:requestOfConsent" />
                <ruleml:Var keyref=":er" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:clearForm" />
                <ruleml:Var keyref=":er" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements16">
    <lrml:PrescriptiveStatement key="statements16Formula1">
      <!--
Permission:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :ehc :eau :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:Purpose :epu) & (prOnto:isBasedOn :ep :epu)
	 & (prOnto:consent :c) & (prOnto:hasConsented' :ehc :w :c) & (prOnto:authorizedBy' :eau :epu :c),

	(rioOnto:RexistAtTime :ew :t1) & (prOnto:withdrawConsentFrom' :ew :w :epu)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":ehc">ehc</ruleml:Var>
              <ruleml:Var key=":eau">eau</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A122">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A123">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Purpose" />
              <ruleml:Var key=":epu">epu</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isBasedOn" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":epu" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:consent" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A124">
              <ruleml:Rel iri="prOnto:hasConsented" />
              <ruleml:Var keyref=":ehc" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A125">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":eau" />
              <ruleml:Var keyref=":epu" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Permission iri="rioOnto:Permission">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":ew">ew</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A126">
                <ruleml:Rel iri="prOnto:withdrawConsentFrom" />
                <ruleml:Var keyref=":ew" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":epu" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Permission>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements16Formula2">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :ehc :eau :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:Purpose :epu) & (prOnto:isBasedOn :ep :epu)
	 & (prOnto:consent :c) & (prOnto:hasConsented' :ehc :w :c) & (prOnto:authorizedBy' :eau :epu :c),

	(rioOnto:RexistAtTime :en :t2) & (rioOnto:>= :t1 :t2) & (prOnto:Communicate' :en :y :w :ea) & (prOnto:ableTo' :ea :w :ew)
	 & (prOnto:withdrawConsentFrom' :ew :w :epu)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":ehc">ehc</ruleml:Var>
              <ruleml:Var key=":eau">eau</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A127">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A128">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Purpose" />
              <ruleml:Var key=":epu">epu</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isBasedOn" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":epu" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:consent" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A129">
              <ruleml:Rel iri="prOnto:hasConsented" />
              <ruleml:Var keyref=":ehc" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A130">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":eau" />
              <ruleml:Var keyref=":epu" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":en">en</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t1" />
                <ruleml:Var keyref=":t2" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A131">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var key=":ea">ea</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A132">
                <ruleml:Rel iri="prOnto:ableTo" />
                <ruleml:Var keyref=":ea" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var key=":ew">ew</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A133">
                <ruleml:Rel iri="prOnto:withdrawConsentFrom" />
                <ruleml:Var keyref=":ew" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":epu" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements16Formula3">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :ehc :eau :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:Purpose :epu) & (prOnto:isBasedOn :ep :epu),

	(rioOnto:RexistAtTime :a2 :t1) & (rioOnto:and :a2 :ei :eca) & (prOnto:measure :em) & (prOnto:implement' :ei :y :em)
	 & (rioOnto:cause' :eca :em :ee) & (prOnto:easyAs' :ee :ew :ehc) & (prOnto:consent :c)
	 & (prOnto:hasConsented' :ehc :w :c) & (prOnto:authorizedBy' :eau :epu :c) & (prOnto:withdrawConsentFrom' :ew :w :epu)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":ehc">ehc</ruleml:Var>
              <ruleml:Var key=":eau">eau</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A134">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A135">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Purpose" />
              <ruleml:Var key=":epu">epu</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isBasedOn" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":epu" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":a2">a2</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:and" />
                <ruleml:Var keyref=":a2" />
                <ruleml:Var key=":ei">ei</ruleml:Var>
                <ruleml:Var key=":eca">eca</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:measure" />
                <ruleml:Var key=":em">em</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A136">
                <ruleml:Rel iri="prOnto:implement" />
                <ruleml:Var keyref=":ei" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":em" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A137">
                <ruleml:Rel iri="rioOnto:cause" />
                <ruleml:Var keyref=":eca" />
                <ruleml:Var keyref=":em" />
                <ruleml:Var key=":ee">ee</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A138">
                <ruleml:Rel iri="prOnto:easyAs" />
                <ruleml:Var keyref=":ee" />
                <ruleml:Var key=":ew">ew</ruleml:Var>
                <ruleml:Var key=":ehc">ehc</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:consent" />
                <ruleml:Var key=":c">c</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A139">
                <ruleml:Rel iri="prOnto:hasConsented" />
                <ruleml:Var keyref=":ehc" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":c" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A140">
                <ruleml:Rel iri="prOnto:authorizedBy" />
                <ruleml:Var keyref=":eau" />
                <ruleml:Var keyref=":epu" />
                <ruleml:Var keyref=":c" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A141">
                <ruleml:Rel iri="prOnto:withdrawConsentFrom" />
                <ruleml:Var keyref=":ew" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":epu" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements17">
    <lrml:ConstitutiveStatement key="statements17Formula1">
      <!--
Entailment:
(
	(rioOnto:exceptionMinAgeForConsent :ep),

	(rioOnto:= prOnto:minAgeForConsent(:ep) 16)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:Naf>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:exceptionMinAgeForConsent" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
            </ruleml:Atom>
          </ruleml:Naf>
        </ruleml:if>
        <ruleml:then>
          <ruleml:Atom>
            <ruleml:Rel iri="rioOnto:=" />
            <ruleml:Expr>
              <ruleml:Fun iri="prOnto:minAgeForConsent" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Expr>
            <ruleml:Ind>16</ruleml:Ind>
          </ruleml:Atom>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
    <lrml:ConstitutiveStatement key="statements17Formula2">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (rioOnto:< prOnto:ageOf(:w) prOnto:minAgeForConsent(:ep)),

	(rioOnto:exceptionCha2Art8Par1 :ep)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A142">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A143">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:&lt;" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:ageOf" />
                <ruleml:Var keyref=":w" />
              </ruleml:Expr>
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:minAgeForConsent" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Expr>
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:Atom>
            <ruleml:Rel iri="rioOnto:exceptionCha2Art8Par1" />
            <ruleml:Var keyref=":ep" />
          </ruleml:Atom>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
    <lrml:ConstitutiveStatement key="statements17Formula3">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :ehc :eau :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:Purpose :epu) & (prOnto:isBasedOn :ep :epu)
	 & (prOnto:consent :c) & (rioOnto:< prOnto:ageOf(:w) prOnto:minAgeForConsent(:c)) & (prOnto:hasConsented' :ehc prOnto:holderOfPR(:w) :c)
	 & (prOnto:authorizedBy' :eau :epu :c),

	(prOnto:lawful :ep)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":ehc">ehc</ruleml:Var>
              <ruleml:Var key=":eau">eau</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A144">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A145">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Purpose" />
              <ruleml:Var key=":epu">epu</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isBasedOn" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":epu" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:consent" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:&lt;" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:ageOf" />
                <ruleml:Var keyref=":w" />
              </ruleml:Expr>
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:minAgeForConsent" />
                <ruleml:Var keyref=":c" />
              </ruleml:Expr>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A146">
              <ruleml:Rel iri="prOnto:hasConsented" />
              <ruleml:Var keyref=":ehc" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:holderOfPR" />
                <ruleml:Var keyref=":w" />
              </ruleml:Expr>
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A147">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":eau" />
              <ruleml:Var keyref=":epu" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:Atom>
            <ruleml:Rel iri="prOnto:lawful" />
            <ruleml:Var keyref=":ep" />
          </ruleml:Atom>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements18">
    <lrml:PrescriptiveStatement key="statements18Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :ehc :eau :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:Purpose :epu) & (prOnto:isBasedOn :ep :epu)
	 & (prOnto:consent :c) & (rioOnto:< prOnto:ageOf(:w) prOnto:minAgeForConsent(:c)) & (prOnto:hasConsented' :ehc prOnto:holderOfPR(:w) :c)
	 & (prOnto:authorizedBy' :eau :epu :c),

	(rioOnto:RexistAtTime :ev :t1) & (prOnto:verify' :ev :y :ehc) & (prOnto:reasonable :ev)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":ehc">ehc</ruleml:Var>
              <ruleml:Var key=":eau">eau</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A148">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A149">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Purpose" />
              <ruleml:Var key=":epu">epu</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isBasedOn" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":epu" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:consent" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:&lt;" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:ageOf" />
                <ruleml:Var keyref=":w" />
              </ruleml:Expr>
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:minAgeForConsent" />
                <ruleml:Var keyref=":c" />
              </ruleml:Expr>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A150">
              <ruleml:Rel iri="prOnto:hasConsented" />
              <ruleml:Var keyref=":ehc" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:holderOfPR" />
                <ruleml:Var keyref=":w" />
              </ruleml:Expr>
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A151">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":eau" />
              <ruleml:Var keyref=":epu" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":ev">ev</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A152">
                <ruleml:Rel iri="prOnto:verify" />
                <ruleml:Var keyref=":ev" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":ehc" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:reasonable" />
                <ruleml:Var keyref=":ev" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements19">
    <lrml:PrescriptiveStatement key="statements19Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:racialOrEthic :z) & (rioOnto:exceptionCha2Art9Par2 :ep)
	 & (rioOnto:exceptionCha2Art9Par4 :ep),

	(rioOnto:RexistAtTime :en :t1) & (rioOnto:not :en :ep)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A153">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A154">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:racialOrEthic" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha2Art9Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha2Art9Par4" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":en">en</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:not" />
                <ruleml:Var keyref=":en" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements19Formula2">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:politicalOpinion :z) & (rioOnto:exceptionCha2Art9Par2 :ep),

	(rioOnto:RexistAtTime :en :t1) & (rioOnto:not :en :ep)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A155">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A156">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:politicalOpinion" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha2Art9Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":en">en</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:not" />
                <ruleml:Var keyref=":en" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements19Formula3">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:relOrPhilBelief :z) & (rioOnto:exceptionCha2Art9Par2 :ep),

	(rioOnto:RexistAtTime :en :t1) & (rioOnto:not :en :ep)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A157">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A158">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:relOrPhilBelief" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha2Art9Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":en">en</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:not" />
                <ruleml:Var keyref=":en" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements19Formula4">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:tradeUnionMembership :z) & (rioOnto:exceptionCha2Art9Par2 :ep),

	(rioOnto:RexistAtTime :en :t1) & (rioOnto:not :en :ep)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A159">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A160">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:tradeUnionMembership" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha2Art9Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":en">en</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:not" />
                <ruleml:Var keyref=":en" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements19Formula5">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:geneticData :z) & (rioOnto:exceptionCha2Art9Par2 :ep),

	(rioOnto:RexistAtTime :en :t1) & (rioOnto:not :en :ep)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A161">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A162">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:geneticData" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha2Art9Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":en">en</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:not" />
                <ruleml:Var keyref=":en" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements19Formula6">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:biometricData :z) & (rioOnto:exceptionCha2Art9Par2 :ep),

	(rioOnto:RexistAtTime :en :t1) & (rioOnto:not :en :ep)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A163">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A164">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:biometricData" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha2Art9Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":en">en</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:not" />
                <ruleml:Var keyref=":en" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements19Formula7">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:Health :epu) & (prOnto:isBasedOn :ep :epu)
	 & (rioOnto:exceptionCha2Art9Par2 :ep),

	(rioOnto:RexistAtTime :en :t1) & (rioOnto:not :en :ep)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A165">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A166">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Health" />
              <ruleml:Var key=":epu">epu</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isBasedOn" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":epu" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha2Art9Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":en">en</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:not" />
                <ruleml:Var keyref=":en" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements19Formula8">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:sexLifeData :z) & (rioOnto:exceptionCha2Art9Par2 :ep),

	(rioOnto:RexistAtTime :en :t1) & (rioOnto:not :en :ep)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A167">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A168">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:sexLifeData" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha2Art9Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":en">en</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:not" />
                <ruleml:Var keyref=":en" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements19Formula9">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:sexualOrientation :z) & (rioOnto:exceptionCha2Art9Par2 :ep),

	(rioOnto:RexistAtTime :en :t1) & (rioOnto:not :en :ep)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A169">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A170">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:sexualOrientation" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha2Art9Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":en">en</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:not" />
                <ruleml:Var keyref=":en" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements20">
    <lrml:ConstitutiveStatement key="statements20Formula1">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :ehc :eau :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:Purpose :epu) & (prOnto:isBasedOn :ep :epu)
	 & (prOnto:racialOrEthic :z) & (prOnto:consent :c) & (prOnto:hasConsented' :ehc :w :c)
	 & (prOnto:authorizedBy' :eau :epu :c) & (rioOnto:exceptionCha2Art9Par2Pnt1 :ep),

	(rioOnto:exceptionCha2Art9Par2 :ep)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":ehc">ehc</ruleml:Var>
              <ruleml:Var key=":eau">eau</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A171">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A172">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Purpose" />
              <ruleml:Var key=":epu">epu</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isBasedOn" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":epu" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:racialOrEthic" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:consent" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A173">
              <ruleml:Rel iri="prOnto:hasConsented" />
              <ruleml:Var keyref=":ehc" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A174">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":eau" />
              <ruleml:Var keyref=":epu" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha2Art9Par2Pnt1" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:exceptionCha2Art9Par2" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
    <lrml:ConstitutiveStatement key="statements20Formula2">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :ehc :eau :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:Purpose :epu) & (prOnto:isBasedOn :ep :epu)
	 & (prOnto:politicalOpinion :z) & (prOnto:consent :c) & (prOnto:hasConsented' :ehc :w :c)
	 & (prOnto:authorizedBy' :eau :epu :c) & (rioOnto:exceptionCha2Art9Par2Pnt1 :ep),

	(rioOnto:exceptionCha2Art9Par2 :ep)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":ehc">ehc</ruleml:Var>
              <ruleml:Var key=":eau">eau</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A175">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A176">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Purpose" />
              <ruleml:Var key=":epu">epu</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isBasedOn" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":epu" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:politicalOpinion" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:consent" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A177">
              <ruleml:Rel iri="prOnto:hasConsented" />
              <ruleml:Var keyref=":ehc" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A178">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":eau" />
              <ruleml:Var keyref=":epu" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha2Art9Par2Pnt1" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:exceptionCha2Art9Par2" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
    <lrml:ConstitutiveStatement key="statements20Formula3">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :ehc :eau :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:Purpose :epu) & (prOnto:isBasedOn :ep :epu)
	 & (prOnto:relOrPhilBelief :z) & (prOnto:consent :c) & (prOnto:hasConsented' :ehc :w :c)
	 & (prOnto:authorizedBy' :eau :epu :c) & (rioOnto:exceptionCha2Art9Par2Pnt1 :ep),

	(rioOnto:exceptionCha2Art9Par2 :ep)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":ehc">ehc</ruleml:Var>
              <ruleml:Var key=":eau">eau</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A179">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A180">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Purpose" />
              <ruleml:Var key=":epu">epu</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isBasedOn" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":epu" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:relOrPhilBelief" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:consent" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A181">
              <ruleml:Rel iri="prOnto:hasConsented" />
              <ruleml:Var keyref=":ehc" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A182">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":eau" />
              <ruleml:Var keyref=":epu" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha2Art9Par2Pnt1" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:exceptionCha2Art9Par2" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
    <lrml:ConstitutiveStatement key="statements20Formula4">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :ehc :eau :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:Purpose :epu) & (prOnto:isBasedOn :ep :epu)
	 & (prOnto:tradeUnionMembership :z) & (prOnto:consent :c) & (prOnto:hasConsented' :ehc :w :c)
	 & (prOnto:authorizedBy' :eau :epu :c) & (rioOnto:exceptionCha2Art9Par2Pnt1 :ep),

	(rioOnto:exceptionCha2Art9Par2 :ep)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":ehc">ehc</ruleml:Var>
              <ruleml:Var key=":eau">eau</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A183">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A184">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Purpose" />
              <ruleml:Var key=":epu">epu</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isBasedOn" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":epu" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:tradeUnionMembership" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:consent" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A185">
              <ruleml:Rel iri="prOnto:hasConsented" />
              <ruleml:Var keyref=":ehc" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A186">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":eau" />
              <ruleml:Var keyref=":epu" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha2Art9Par2Pnt1" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:exceptionCha2Art9Par2" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
    <lrml:ConstitutiveStatement key="statements20Formula5">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :ehc :eau :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:Purpose :epu) & (prOnto:isBasedOn :ep :epu)
	 & (prOnto:geneticData :z) & (prOnto:consent :c) & (prOnto:hasConsented' :ehc :w :c)
	 & (prOnto:authorizedBy' :eau :epu :c) & (rioOnto:exceptionCha2Art9Par2Pnt1 :ep),

	(rioOnto:exceptionCha2Art9Par2 :ep)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":ehc">ehc</ruleml:Var>
              <ruleml:Var key=":eau">eau</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A187">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A188">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Purpose" />
              <ruleml:Var key=":epu">epu</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isBasedOn" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":epu" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:geneticData" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:consent" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A189">
              <ruleml:Rel iri="prOnto:hasConsented" />
              <ruleml:Var keyref=":ehc" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A190">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":eau" />
              <ruleml:Var keyref=":epu" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha2Art9Par2Pnt1" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:exceptionCha2Art9Par2" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
    <lrml:ConstitutiveStatement key="statements20Formula6">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :ehc :eau :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:Purpose :epu) & (prOnto:isBasedOn :ep :epu)
	 & (prOnto:biometricData :z) & (prOnto:consent :c) & (prOnto:hasConsented' :ehc :w :c)
	 & (prOnto:authorizedBy' :eau :epu :c) & (rioOnto:exceptionCha2Art9Par2Pnt1 :ep),

	(rioOnto:exceptionCha2Art9Par2 :ep)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":ehc">ehc</ruleml:Var>
              <ruleml:Var key=":eau">eau</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A191">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A192">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Purpose" />
              <ruleml:Var key=":epu">epu</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isBasedOn" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":epu" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:biometricData" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:consent" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A193">
              <ruleml:Rel iri="prOnto:hasConsented" />
              <ruleml:Var keyref=":ehc" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A194">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":eau" />
              <ruleml:Var keyref=":epu" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha2Art9Par2Pnt1" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:exceptionCha2Art9Par2" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
    <lrml:ConstitutiveStatement key="statements20Formula7">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :ehc :eau :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:Health :epu) & (prOnto:isBasedOn :ep :epu)
	 & (prOnto:consent :c) & (prOnto:hasConsented' :ehc :w :c) & (prOnto:authorizedBy' :eau :epu :c)
	 & (rioOnto:exceptionCha2Art9Par2Pnt1 :ep),

	(rioOnto:exceptionCha2Art9Par2 :ep)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":ehc">ehc</ruleml:Var>
              <ruleml:Var key=":eau">eau</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A195">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A196">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Health" />
              <ruleml:Var key=":epu">epu</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isBasedOn" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":epu" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:consent" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A197">
              <ruleml:Rel iri="prOnto:hasConsented" />
              <ruleml:Var keyref=":ehc" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A198">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":eau" />
              <ruleml:Var keyref=":epu" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha2Art9Par2Pnt1" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:exceptionCha2Art9Par2" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
    <lrml:ConstitutiveStatement key="statements20Formula8">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :ehc :eau :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:Purpose :epu) & (prOnto:isBasedOn :ep :epu)
	 & (prOnto:sexLifeData :z) & (prOnto:consent :c) & (prOnto:hasConsented' :ehc :w :c)
	 & (prOnto:authorizedBy' :eau :epu :c) & (rioOnto:exceptionCha2Art9Par2Pnt1 :ep),

	(rioOnto:exceptionCha2Art9Par2 :ep)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":ehc">ehc</ruleml:Var>
              <ruleml:Var key=":eau">eau</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A199">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A200">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Purpose" />
              <ruleml:Var key=":epu">epu</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isBasedOn" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":epu" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:sexLifeData" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:consent" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A201">
              <ruleml:Rel iri="prOnto:hasConsented" />
              <ruleml:Var keyref=":ehc" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A202">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":eau" />
              <ruleml:Var keyref=":epu" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha2Art9Par2Pnt1" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:exceptionCha2Art9Par2" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
    <lrml:ConstitutiveStatement key="statements20Formula9">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :ehc :eau :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:Purpose :epu) & (prOnto:isBasedOn :ep :epu)
	 & (prOnto:sexualOrientation :z) & (prOnto:consent :c) & (prOnto:hasConsented' :ehc :w :c)
	 & (prOnto:authorizedBy' :eau :epu :c) & (rioOnto:exceptionCha2Art9Par2Pnt1 :ep),

	(rioOnto:exceptionCha2Art9Par2 :ep)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":ehc">ehc</ruleml:Var>
              <ruleml:Var key=":eau">eau</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A203">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A204">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Purpose" />
              <ruleml:Var key=":epu">epu</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isBasedOn" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":epu" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:sexualOrientation" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:consent" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A205">
              <ruleml:Rel iri="prOnto:hasConsented" />
              <ruleml:Var keyref=":ehc" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A206">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":eau" />
              <ruleml:Var keyref=":epu" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha2Art9Par2Pnt1" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:exceptionCha2Art9Par2" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements21">
    <lrml:ConstitutiveStatement key="statements21Formula1">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :ei :ert :eor :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (rioOnto:imply :ei :t :ep) & (prOnto:relatedTo' :ert :t :ss)
	 & (prOnto:EmploymentSocialSecuritySocialProtectionLaw :ss) & (rioOnto:or :eor :ea1 :ea2 :ea) & (prOnto:authorizedBy' :ea1 :t EuropeanUnion)
	 & (prOnto:authorizedBy' :ea2 :t prOnto:MSof(:y)) & (rioOnto:and :ea :ea3 :epr) & (prOnto:authorizedBy' :ea3 :t :c)
	 & (prOnto:protect' :epr :c :erf) & (prOnto:rightsAndFreedomsOf' :erf :w),

	(rioOnto:exceptionCha2Art9Par2 :ep)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":ei">ei</ruleml:Var>
              <ruleml:Var key=":ert">ert</ruleml:Var>
              <ruleml:Var key=":eor">eor</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A207">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A208">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:imply" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var key=":t">t</ruleml:Var>
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A209">
              <ruleml:Rel iri="prOnto:relatedTo" />
              <ruleml:Var keyref=":ert" />
              <ruleml:Var keyref=":t" />
              <ruleml:Var key=":ss">ss</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:EmploymentSocialSecuritySocialProtectionLaw" />
              <ruleml:Var keyref=":ss" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eor" />
              <ruleml:Var key=":ea1">ea1</ruleml:Var>
              <ruleml:Var key=":ea2">ea2</ruleml:Var>
              <ruleml:Var key=":ea">ea</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A210">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":ea1" />
              <ruleml:Var keyref=":t" />
              <ruleml:Ind>EuropeanUnion</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A211">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":ea2" />
              <ruleml:Var keyref=":t" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:MSof" />
                <ruleml:Var keyref=":y" />
              </ruleml:Expr>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":ea" />
              <ruleml:Var key=":ea3">ea3</ruleml:Var>
              <ruleml:Var key=":epr">epr</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A212">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":ea3" />
              <ruleml:Var keyref=":t" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A213">
              <ruleml:Rel iri="prOnto:protect" />
              <ruleml:Var keyref=":epr" />
              <ruleml:Var keyref=":c" />
              <ruleml:Var key=":erf">erf</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A214">
              <ruleml:Rel iri="prOnto:rightsAndFreedomsOf" />
              <ruleml:Var keyref=":erf" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:exceptionCha2Art9Par2" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements22">
    <lrml:ConstitutiveStatement key="statements22Formula1">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :ei :eor1 :eor2 :ehc :eau :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (rioOnto:imply :ei :eor1 :ep) & (rioOnto:or :eor1 :epr1 :epr2)
	 & (prOnto:protect' :epr1 :k1 prOnto:vitalInterest(:w)) & (prOnto:protect' :epr2 :k2 prOnto:vitalInterest(:p)) & (prOnto:naturalPerson :p)
	 & (rioOnto:imply :ei :eor :ep) & (rioOnto:or :eor2 :eu1 :eu2) & (prOnto:physicallyUnableTo' :eu1 :w :ehc)
	 & (prOnto:legallyUnableTo' :eu2 :w :ehc) & (prOnto:Purpose :epu) & (prOnto:isBasedOn :ep :epu)
	 & (prOnto:consent :c) & (prOnto:hasConsented' :ehc :w :c) & (prOnto:authorizedBy' :eau :epu :c),

	(rioOnto:exceptionCha2Art9Par2 :ep)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":ei">ei</ruleml:Var>
              <ruleml:Var key=":eor1">eor1</ruleml:Var>
              <ruleml:Var key=":eor2">eor2</ruleml:Var>
              <ruleml:Var key=":ehc">ehc</ruleml:Var>
              <ruleml:Var key=":eau">eau</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A215">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A216">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:imply" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var keyref=":eor1" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eor1" />
              <ruleml:Var key=":epr1">epr1</ruleml:Var>
              <ruleml:Var key=":epr2">epr2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A217">
              <ruleml:Rel iri="prOnto:protect" />
              <ruleml:Var keyref=":epr1" />
              <ruleml:Var key=":k1">k1</ruleml:Var>
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:vitalInterest" />
                <ruleml:Var keyref=":w" />
              </ruleml:Expr>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A218">
              <ruleml:Rel iri="prOnto:protect" />
              <ruleml:Var keyref=":epr2" />
              <ruleml:Var key=":k2">k2</ruleml:Var>
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:vitalInterest" />
                <ruleml:Var key=":p">p</ruleml:Var>
              </ruleml:Expr>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:naturalPerson" />
              <ruleml:Var keyref=":p" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:imply" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var keyref=":eor" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eor2" />
              <ruleml:Var key=":eu1">eu1</ruleml:Var>
              <ruleml:Var key=":eu2">eu2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A219">
              <ruleml:Rel iri="prOnto:physicallyUnableTo" />
              <ruleml:Var keyref=":eu1" />
              <ruleml:Var key=":w">w</ruleml:Var>
              <ruleml:Var key=":ehc">ehc</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A220">
              <ruleml:Rel iri="prOnto:legallyUnableTo" />
              <ruleml:Var keyref=":eu2" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":ehc" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Purpose" />
              <ruleml:Var key=":epu">epu</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isBasedOn" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":epu" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:consent" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A221">
              <ruleml:Rel iri="prOnto:hasConsented" />
              <ruleml:Var keyref=":ehc" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A222">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":eau" />
              <ruleml:Var keyref=":epu" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:exceptionCha2Art9Par2" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements23">
    <lrml:ConstitutiveStatement key="statements23Formula1">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :ei :ert :epr :eor :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:notForProfitBody :k) & (rioOnto:partOf :w :k)
	 & (rioOnto:imply :ei :eac :ep) & (prOnto:relatedTo' :ert :eac :k) & (prOnto:protect' :epr :k :erf)
	 & (prOnto:rightsAndFreedomsOf' :erf :w) & (rioOnto:or :eor :en :a2) & (rioOnto:not :en :ed)
	 & (prOnto:disclosure' :ed :k :z) & (rioOnto:and :a2 :ehc :eau) & (prOnto:consent :c)
	 & (prOnto:hasConsented' :ehc :w :c) & (prOnto:authorizedBy' :eau :ed :c),

	(rioOnto:exceptionCha2Art9Par2 :ep)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":ei">ei</ruleml:Var>
              <ruleml:Var key=":ert">ert</ruleml:Var>
              <ruleml:Var key=":epr">epr</ruleml:Var>
              <ruleml:Var key=":eor">eor</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A223">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A224">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:notForProfitBody" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:partOf" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:imply" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var key=":eac">eac</ruleml:Var>
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A225">
              <ruleml:Rel iri="prOnto:relatedTo" />
              <ruleml:Var keyref=":ert" />
              <ruleml:Var keyref=":eac" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A226">
              <ruleml:Rel iri="prOnto:protect" />
              <ruleml:Var keyref=":epr" />
              <ruleml:Var keyref=":k" />
              <ruleml:Var key=":erf">erf</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A227">
              <ruleml:Rel iri="prOnto:rightsAndFreedomsOf" />
              <ruleml:Var keyref=":erf" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eor" />
              <ruleml:Var key=":en">en</ruleml:Var>
              <ruleml:Var key=":a2">a2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en" />
              <ruleml:Var key=":ed">ed</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A228">
              <ruleml:Rel iri="prOnto:disclosure" />
              <ruleml:Var keyref=":ed" />
              <ruleml:Var keyref=":k" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a2" />
              <ruleml:Var key=":ehc">ehc</ruleml:Var>
              <ruleml:Var key=":eau">eau</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:consent" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A229">
              <ruleml:Rel iri="prOnto:hasConsented" />
              <ruleml:Var keyref=":ehc" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A230">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":eau" />
              <ruleml:Var keyref=":ed" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:exceptionCha2Art9Par2" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements24">
    <lrml:ConstitutiveStatement key="statements24Formula1">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:public :z),

	(rioOnto:exceptionCha2Art9Par2 :ep)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A231">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A232">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:public" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:exceptionCha2Art9Par2" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements25">
    <lrml:ConstitutiveStatement key="statements25Formula1">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :ei :ert :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:notForProfitBody :k) & (rioOnto:partOf :w :k)
	 & (rioOnto:imply :ei :eac :ep) & (prOnto:relatedTo' :ert :eac :k) & (prOnto:legalClaim :k),

	(rioOnto:exceptionCha2Art9Par2 :ep)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":ei">ei</ruleml:Var>
              <ruleml:Var key=":ert">ert</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A233">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A234">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:notForProfitBody" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:partOf" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:imply" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var key=":eac">eac</ruleml:Var>
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A235">
              <ruleml:Rel iri="prOnto:relatedTo" />
              <ruleml:Var keyref=":ert" />
              <ruleml:Var keyref=":eac" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:legalClaim" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:exceptionCha2Art9Par2" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements26">
    <lrml:ConstitutiveStatement key="statements26Formula1">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :ei :ert :epr :eor :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (rioOnto:imply :ei :pi :ep) & (prOnto:PublicInterest :pi)
	 & (prOnto:measure :em) & (prOnto:implement' :eim :y :em) & (prOnto:protect' :epr :em :erf)
	 & (prOnto:rightsAndFreedomsOf' :erf :w),

	(rioOnto:exceptionCha2Art9Par2 :ep)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":ei">ei</ruleml:Var>
              <ruleml:Var key=":ert">ert</ruleml:Var>
              <ruleml:Var key=":epr">epr</ruleml:Var>
              <ruleml:Var key=":eor">eor</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A236">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A237">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:imply" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var key=":pi">pi</ruleml:Var>
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PublicInterest" />
              <ruleml:Var keyref=":pi" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:measure" />
              <ruleml:Var key=":em">em</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A238">
              <ruleml:Rel iri="prOnto:implement" />
              <ruleml:Var keyref=":eim" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A239">
              <ruleml:Rel iri="prOnto:protect" />
              <ruleml:Var keyref=":epr" />
              <ruleml:Var keyref=":em" />
              <ruleml:Var key=":erf">erf</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A240">
              <ruleml:Rel iri="prOnto:rightsAndFreedomsOf" />
              <ruleml:Var keyref=":erf" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:exceptionCha2Art9Par2" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements27">
    <lrml:ConstitutiveStatement key="statements27Formula1">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :ei :eor :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (rioOnto:imply :ei :ee :ep) & (prOnto:execute' :ee :k :et)
	 & (prOnto:Health :epu) & (prOnto:isBasedOn :ep :epu) & (rioOnto:or :eor :ea1 :ea2)
	 & (prOnto:authorizedBy' :ea1 :emp EuropeanUnion) & (prOnto:authorizedBy' :ea2 :emp prOnto:MSof(:y)) & (prOnto:healthProfessional :k),

	(rioOnto:exceptionCha2Art9Par2 :ep)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":ei">ei</ruleml:Var>
              <ruleml:Var key=":eor">eor</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A241">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A242">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:imply" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var key=":ee">ee</ruleml:Var>
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A243">
              <ruleml:Rel iri="prOnto:execute" />
              <ruleml:Var keyref=":ee" />
              <ruleml:Var key=":k">k</ruleml:Var>
              <ruleml:Var key=":et">et</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Health" />
              <ruleml:Var key=":epu">epu</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isBasedOn" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":epu" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eor" />
              <ruleml:Var key=":ea1">ea1</ruleml:Var>
              <ruleml:Var key=":ea2">ea2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A244">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":ea1" />
              <ruleml:Var keyref=":emp" />
              <ruleml:Ind>EuropeanUnion</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A245">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":ea2" />
              <ruleml:Var keyref=":emp" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:MSof" />
                <ruleml:Var keyref=":y" />
              </ruleml:Expr>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:healthProfessional" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:exceptionCha2Art9Par2" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements28">
    <lrml:ConstitutiveStatement key="statements28Formula1">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :ei :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (rioOnto:imply :ei :ee :ep) & (prOnto:execute' :ee :k :et)
	 & (prOnto:relatedTo :et :pi) & (prOnto:PublicInterest :pi) & (prOnto:relatedTo :et :ph)
	 & (prOnto:publicHealth :ph),

	(rioOnto:exceptionCha2Art9Par2 :ep)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":ei">ei</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A246">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A247">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:imply" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var key=":ee">ee</ruleml:Var>
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A248">
              <ruleml:Rel iri="prOnto:execute" />
              <ruleml:Var keyref=":ee" />
              <ruleml:Var key=":k">k</ruleml:Var>
              <ruleml:Var key=":et">et</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:relatedTo" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var key=":pi">pi</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PublicInterest" />
              <ruleml:Var keyref=":pi" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:relatedTo" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var key=":ph">ph</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:publicHealth" />
              <ruleml:Var keyref=":ph" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:exceptionCha2Art9Par2" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements29">
    <lrml:PrescriptiveStatement key="statements29Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:Judicial :epu) & (prOnto:isBasedOn :ep :epu),

	(rioOnto:RexistAtTime :o1 :t1) & (rioOnto:or :o1 :ea1 :ea2 :ea3) & (prOnto:authorizedBy' :ea1 :ep :k) & (prOnto:publicAuthority :k)
	 & (prOnto:authorizedBy' :ea2 :ep EuropeanUnion) & (prOnto:authorizedBy' :ea3 :ep prOnto:MSof(:y))
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A249">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A250">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Judicial" />
              <ruleml:Var key=":epu">epu</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isBasedOn" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":epu" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":o1">o1</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:or" />
                <ruleml:Var keyref=":o1" />
                <ruleml:Var key=":ea1">ea1</ruleml:Var>
                <ruleml:Var key=":ea2">ea2</ruleml:Var>
                <ruleml:Var key=":ea3">ea3</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A251">
                <ruleml:Rel iri="prOnto:authorizedBy" />
                <ruleml:Var keyref=":ea1" />
                <ruleml:Var keyref=":ep" />
                <ruleml:Var key=":k">k</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:publicAuthority" />
                <ruleml:Var keyref=":k" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A252">
                <ruleml:Rel iri="prOnto:authorizedBy" />
                <ruleml:Var keyref=":ea2" />
                <ruleml:Var keyref=":ep" />
                <ruleml:Ind>EuropeanUnion</ruleml:Ind>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A253">
                <ruleml:Rel iri="prOnto:authorizedBy" />
                <ruleml:Var keyref=":ea3" />
                <ruleml:Var keyref=":ep" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:MSof" />
                  <ruleml:Var keyref=":y" />
                </ruleml:Expr>
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements29Formula2">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:Judicial :epu) & (prOnto:isBasedOn :ep :epu)
	 & (rioOnto:partOf :epu :r) & (prOnto:register :r),

	(rioOnto:RexistAtTime :ea :t1) & (prOnto:authorizedBy' :ea :ep :k) & (prOnto:publicAuthority :k)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A254">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A255">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Judicial" />
              <ruleml:Var key=":epu">epu</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isBasedOn" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":epu" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:partOf" />
              <ruleml:Var keyref=":epu" />
              <ruleml:Var key=":r">r</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:register" />
              <ruleml:Var keyref=":r" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":ea">ea</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A256">
                <ruleml:Rel iri="prOnto:authorizedBy" />
                <ruleml:Var keyref=":ea" />
                <ruleml:Var keyref=":ep" />
                <ruleml:Var key=":k">k</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:publicAuthority" />
                <ruleml:Var keyref=":k" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements30">
    <lrml:PrescriptiveStatement key="statements30Formula1">
      <!--
Permission:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :en1 :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:Purpose :epu) & (prOnto:isBasedOn :ep :epu)
	 & (rioOnto:not :en1 :ei) & (rioOnto:imply :ei :epu :eid) & (prOnto:identify' :eid1 :y :w),

	(rioOnto:RexistAtTime :en2 :t1) & (rioOnto:not :en2 :ed2) & (prOnto:identify' :eid2 :y :w)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":en1">en1</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A257">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A258">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Purpose" />
              <ruleml:Var key=":epu">epu</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isBasedOn" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":epu" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en1" />
              <ruleml:Var key=":ei">ei</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:imply" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var keyref=":epu" />
              <ruleml:Var key=":eid">eid</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A259">
              <ruleml:Rel iri="prOnto:identify" />
              <ruleml:Var key=":eid1">eid1</ruleml:Var>
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Permission iri="rioOnto:Permission">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":en2">en2</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:not" />
                <ruleml:Var keyref=":en2" />
                <ruleml:Var key=":ed2">ed2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A260">
                <ruleml:Rel iri="prOnto:identify" />
                <ruleml:Var key=":eid2">eid2</ruleml:Var>
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Permission>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements31">
    <lrml:PrescriptiveStatement key="statements31Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :eno :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (rioOnto:not :eno :ea) & (prOnto:ableTo' :ea :y :eid)
	 & (prOnto:identify' :eid :y :w),

	(rioOnto:RexistAtTime :en :t1) & (prOnto:Communicate' :en :y :w :eno)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":eno">eno</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A261">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A262">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":eno" />
              <ruleml:Var key=":ea">ea</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A263">
              <ruleml:Rel iri="prOnto:ableTo" />
              <ruleml:Var keyref=":ea" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":eid">eid</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A264">
              <ruleml:Rel iri="prOnto:identify" />
              <ruleml:Var keyref=":eid" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":en">en</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A265">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":eno" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:ConstitutiveStatement key="statements31Formula2">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :eno :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (rioOnto:not :eno :ea) & (prOnto:ableTo' :ea :y :eid)
	 & (prOnto:identify' :eid :y :w) & (rioOnto:exceptionCha2Art11Par2identifyW :ep),

	(rioOnto:exceptionCha2Art11Par2 :ep)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":eno">eno</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A266">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A267">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":eno" />
              <ruleml:Var key=":ea">ea</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A268">
              <ruleml:Rel iri="prOnto:ableTo" />
              <ruleml:Var keyref=":ea" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":eid">eid</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A269">
              <ruleml:Rel iri="prOnto:identify" />
              <ruleml:Var keyref=":eid" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha2Art11Par2identifyW" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:Atom>
            <ruleml:Rel iri="rioOnto:exceptionCha2Art11Par2" />
            <ruleml:Var keyref=":ep" />
          </ruleml:Atom>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
    <lrml:ConstitutiveStatement key="statements31Formula3">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :en :eca :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:Communicate' :en :w :y :ed) & (prOnto:describe' :ed :w :w)
	 & (rioOnto:cause' :eca :en :ei) & (prOnto:identify' :ei :y :w),

	(rioOnto:exceptionCha2Art11Par2identifyW :ep)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":en">en</ruleml:Var>
              <ruleml:Var key=":eca">eca</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A270">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A271">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A272">
              <ruleml:Rel iri="prOnto:Communicate" />
              <ruleml:Var keyref=":en" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":ed">ed</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A273">
              <ruleml:Rel iri="prOnto:describe" />
              <ruleml:Var keyref=":ed" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A274">
              <ruleml:Rel iri="rioOnto:cause" />
              <ruleml:Var keyref=":eca" />
              <ruleml:Var keyref=":en" />
              <ruleml:Var key=":ei">ei</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A275">
              <ruleml:Rel iri="prOnto:identify" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:Atom>
            <ruleml:Rel iri="rioOnto:exceptionCha2Art11Par2identifyW" />
            <ruleml:Var keyref=":ep" />
          </ruleml:Atom>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements32">
    <lrml:PrescriptiveStatement key="statements32Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :en :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:Communicate' :en :y :w :e),

	(rioOnto:RexistAtTime :ecf :t1) & (prOnto:clearForm' :ecf :en)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":en">en</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A276">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A277">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A278">
              <ruleml:Rel iri="prOnto:Communicate" />
              <ruleml:Var keyref=":en" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var key=":e">e</ruleml:Var>
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":ecf">ecf</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A279">
                <ruleml:Rel iri="prOnto:clearForm" />
                <ruleml:Var keyref=":ecf" />
                <ruleml:Var keyref=":en" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements32Formula2">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :en :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:Communicate' :en :y :w :e) & (rioOnto:exceptionCha3Sec1Art12Par1 :en),

	(rioOnto:RexistAtTime :eor :t1) & (rioOnto:or :eor :ewf :eef) & (prOnto:writtenForm' :ewf :en) & (prOnto:electronicForm' :eef :en)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":en">en</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A280">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A281">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A282">
              <ruleml:Rel iri="prOnto:Communicate" />
              <ruleml:Var keyref=":en" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var key=":e">e</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec1Art12Par1" />
                <ruleml:Var keyref=":en" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":eor">eor</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:or" />
                <ruleml:Var keyref=":eor" />
                <ruleml:Var key=":ewf">ewf</ruleml:Var>
                <ruleml:Var key=":eef">eef</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A283">
                <ruleml:Rel iri="prOnto:writtenForm" />
                <ruleml:Var keyref=":ewf" />
                <ruleml:Var keyref=":en" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A284">
                <ruleml:Rel iri="prOnto:electronicForm" />
                <ruleml:Var keyref=":eef" />
                <ruleml:Var keyref=":en" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements32Formula3">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :en :er :eid :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:Communicate' :en :y :w :e) & (prOnto:request' :er :w :eof)
	 & (prOnto:oralForm' :eof :en) & (prOnto:identify' :eid :y :w),

	(rioOnto:RexistAtTime :eof :t1)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":en">en</ruleml:Var>
              <ruleml:Var key=":er">er</ruleml:Var>
              <ruleml:Var key=":eid">eid</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A285">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A286">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A287">
              <ruleml:Rel iri="prOnto:Communicate" />
              <ruleml:Var keyref=":en" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var key=":e">e</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A288">
              <ruleml:Rel iri="prOnto:request" />
              <ruleml:Var keyref=":er" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var key=":eof">eof</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A289">
              <ruleml:Rel iri="prOnto:oralForm" />
              <ruleml:Var keyref=":eof" />
              <ruleml:Var keyref=":en" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A290">
              <ruleml:Rel iri="prOnto:identify" />
              <ruleml:Var keyref=":eid" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var keyref=":eof" />
              <ruleml:Var keyref=":t1" />
            </ruleml:Atom>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:ConstitutiveStatement key="statements32Formula4">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :en :er :eid :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:Communicate' :en :y :w :e) & (prOnto:request' :er :w :eof)
	 & (prOnto:oralForm' :eof :en) & (prOnto:identify' :eid :y :w),

	(rioOnto:exceptionCha3Sec1Art12Par1 :es)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":en">en</ruleml:Var>
              <ruleml:Var key=":er">er</ruleml:Var>
              <ruleml:Var key=":eid">eid</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A291">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A292">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A293">
              <ruleml:Rel iri="prOnto:Communicate" />
              <ruleml:Var keyref=":en" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var key=":e">e</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A294">
              <ruleml:Rel iri="prOnto:request" />
              <ruleml:Var keyref=":er" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var key=":eof">eof</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A295">
              <ruleml:Rel iri="prOnto:oralForm" />
              <ruleml:Var keyref=":eof" />
              <ruleml:Var keyref=":en" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A296">
              <ruleml:Rel iri="prOnto:identify" />
              <ruleml:Var keyref=":eid" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:Atom>
            <ruleml:Rel iri="rioOnto:exceptionCha3Sec1Art12Par1" />
            <ruleml:Var keyref=":es" />
          </ruleml:Atom>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements33">
    <lrml:ConstitutiveStatement key="statements33Formula1">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :eno :z :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (rioOnto:not :eno :ea) & (prOnto:ableTo' :ea :y :eid)
	 & (prOnto:identify' :eid :y :w),

	(rioOnto:exceptionCha3Sec1Art12Par2 :ep)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":eno">eno</ruleml:Var>
              <ruleml:Var keyref=":z" />
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A297">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A298">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":eno" />
              <ruleml:Var key=":ea">ea</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A299">
              <ruleml:Rel iri="prOnto:ableTo" />
              <ruleml:Var keyref=":ea" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":eid">eid</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A300">
              <ruleml:Rel iri="prOnto:identify" />
              <ruleml:Var keyref=":eid" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:Atom>
            <ruleml:Rel iri="rioOnto:exceptionCha3Sec1Art12Par2" />
            <ruleml:Var keyref=":ep" />
          </ruleml:Atom>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements34">
    <lrml:PrescriptiveStatement key="statements34Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :er :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:request' :er :w :r) & (rioOnto:exceptionCha3Sec1Art12Par3threeMonths :er),

	(rioOnto:RexistAtTime :a2 :t2) & (rioOnto:and :a2 :en :ee :ert) & (rioOnto:<= :t2 rioOnto:+(:t1, 1M)) & (prOnto:Communicate' :en :y :w :ee)
	 & (prOnto:nonDelayed :en) & (prOnto:execute' :ee :y :a) & (prOnto:relatedTo' :ert :ee :er)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":er">er</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A301">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A302">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A303">
              <ruleml:Rel iri="prOnto:request" />
              <ruleml:Var keyref=":er" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var key=":r">r</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec1Art12Par3threeMonths" />
                <ruleml:Var keyref=":er" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":a2">a2</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:and" />
                <ruleml:Var keyref=":a2" />
                <ruleml:Var key=":en">en</ruleml:Var>
                <ruleml:Var key=":ee">ee</ruleml:Var>
                <ruleml:Var key=":ert">ert</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&lt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Expr>
                  <ruleml:Fun iri="rioOnto:+" />
                  <ruleml:Var keyref=":t1" />
                  <ruleml:Ind>1M</ruleml:Ind>
                </ruleml:Expr>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A304">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":ee" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:nonDelayed" />
                <ruleml:Var keyref=":en" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A305">
                <ruleml:Rel iri="prOnto:execute" />
                <ruleml:Var keyref=":ee" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var key=":a">a</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A306">
                <ruleml:Rel iri="prOnto:relatedTo" />
                <ruleml:Var keyref=":ert" />
                <ruleml:Var keyref=":ee" />
                <ruleml:Var keyref=":er" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements34Formula2">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :er :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:request' :er :w :r) & (rioOnto:RexistAtTime :a2 :t2)
	 & (rioOnto:and :a2 :en1 :ee :ert) & (prOnto:Communicate' :en1 :y :w :ee) & (prOnto:execute' :ee :y :a)
	 & (prOnto:relatedTo' :ert :ee :er) & (rioOnto:< :t2 rioOnto:+(:t1, 1M)),

	(rioOnto:<= :t2 rioOnto:+(:t1, 3M)) & (rioOnto:RexistAtTime :a3 :t3) & (rioOnto:and :a3 :en2 :en3) & (rioOnto:<= :t3 rioOnto:+(:t1, 1M))
	 & (prOnto:Communicate' :en2 :y :w :en1) & (prOnto:Communicate' :en3 :y :w :l) & (prOnto:letterReasonFor :l :ee)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":er">er</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A307">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A308">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A309">
              <ruleml:Rel iri="prOnto:request" />
              <ruleml:Var keyref=":er" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var key=":r">r</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a2">a2</ruleml:Var>
              <ruleml:Var key=":t2">t2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a2" />
              <ruleml:Var key=":en1">en1</ruleml:Var>
              <ruleml:Var key=":ee">ee</ruleml:Var>
              <ruleml:Var key=":ert">ert</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A310">
              <ruleml:Rel iri="prOnto:Communicate" />
              <ruleml:Var keyref=":en1" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":ee" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A311">
              <ruleml:Rel iri="prOnto:execute" />
              <ruleml:Var keyref=":ee" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":a">a</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A312">
              <ruleml:Rel iri="prOnto:relatedTo" />
              <ruleml:Var keyref=":ert" />
              <ruleml:Var keyref=":ee" />
              <ruleml:Var keyref=":er" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:&lt;" />
              <ruleml:Var keyref=":t2" />
              <ruleml:Expr>
                <ruleml:Fun iri="rioOnto:+" />
                <ruleml:Var keyref=":t1" />
                <ruleml:Ind>1M</ruleml:Ind>
              </ruleml:Expr>
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&lt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Expr>
                  <ruleml:Fun iri="rioOnto:+" />
                  <ruleml:Var keyref=":t1" />
                  <ruleml:Ind>3M</ruleml:Ind>
                </ruleml:Expr>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":a3">a3</ruleml:Var>
                <ruleml:Var key=":t3">t3</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:and" />
                <ruleml:Var keyref=":a3" />
                <ruleml:Var key=":en2">en2</ruleml:Var>
                <ruleml:Var key=":en3">en3</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&lt;=" />
                <ruleml:Var keyref=":t3" />
                <ruleml:Expr>
                  <ruleml:Fun iri="rioOnto:+" />
                  <ruleml:Var keyref=":t1" />
                  <ruleml:Ind>1M</ruleml:Ind>
                </ruleml:Expr>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A313">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en2" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":en1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A314">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en3" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var key=":l">l</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:letterReasonFor" />
                <ruleml:Var keyref=":l" />
                <ruleml:Var keyref=":ee" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:ConstitutiveStatement key="statements34Formula3">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :er :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:request' :er :w :r) & (rioOnto:RexistAtTime :a2 :t2)
	 & (rioOnto:and :a2 :en1 :ee :ert) & (prOnto:Communicate' :en1 :y :w :ee) & (prOnto:execute' :ee :y :a)
	 & (prOnto:relatedTo' :ert :ee :er) & (rioOnto:<= :t2 rioOnto:+(:t1, 1M)),

	(rioOnto:exceptionCha3Sec1Art12Par3threeMonths :er)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":er">er</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A315">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A316">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A317">
              <ruleml:Rel iri="prOnto:request" />
              <ruleml:Var keyref=":er" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var key=":r">r</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a2">a2</ruleml:Var>
              <ruleml:Var key=":t2">t2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a2" />
              <ruleml:Var key=":en1">en1</ruleml:Var>
              <ruleml:Var key=":ee">ee</ruleml:Var>
              <ruleml:Var key=":ert">ert</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A318">
              <ruleml:Rel iri="prOnto:Communicate" />
              <ruleml:Var keyref=":en1" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":ee" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A319">
              <ruleml:Rel iri="prOnto:execute" />
              <ruleml:Var keyref=":ee" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":a">a</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A320">
              <ruleml:Rel iri="prOnto:relatedTo" />
              <ruleml:Var keyref=":ert" />
              <ruleml:Var keyref=":ee" />
              <ruleml:Var keyref=":er" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:&lt;=" />
              <ruleml:Var keyref=":t2" />
              <ruleml:Expr>
                <ruleml:Fun iri="rioOnto:+" />
                <ruleml:Var keyref=":t1" />
                <ruleml:Ind>1M</ruleml:Ind>
              </ruleml:Expr>
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:Atom>
            <ruleml:Rel iri="rioOnto:exceptionCha3Sec1Art12Par3threeMonths" />
            <ruleml:Var keyref=":er" />
          </ruleml:Atom>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
    <lrml:PrescriptiveStatement key="statements34Formula4">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :er :elf1 :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:request' :er :w :r) & (prOnto:electronicForm' :elf1 :er)
	 & (rioOnto:RexistAtTime :a2 :t2) & (rioOnto:and :a2 :en :ee :ert) & (prOnto:Communicate' :en :y :w :ee)
	 & (prOnto:execute' :ee :y :a) & (prOnto:relatedTo' :ert :ee :er) & (rioOnto:exceptionCha3Sec1Art12Par3NonElectMeans :er),

	(rioOnto:RexistAtTime :elf2 :t2) & (prOnto:electronicForm' :elf2 :en)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":er">er</ruleml:Var>
              <ruleml:Var key=":elf1">elf1</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A321">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A322">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A323">
              <ruleml:Rel iri="prOnto:request" />
              <ruleml:Var keyref=":er" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var key=":r">r</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A324">
              <ruleml:Rel iri="prOnto:electronicForm" />
              <ruleml:Var keyref=":elf1" />
              <ruleml:Var keyref=":er" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a2">a2</ruleml:Var>
              <ruleml:Var key=":t2">t2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a2" />
              <ruleml:Var key=":en">en</ruleml:Var>
              <ruleml:Var key=":ee">ee</ruleml:Var>
              <ruleml:Var key=":ert">ert</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A325">
              <ruleml:Rel iri="prOnto:Communicate" />
              <ruleml:Var keyref=":en" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":ee" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A326">
              <ruleml:Rel iri="prOnto:execute" />
              <ruleml:Var keyref=":ee" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":a">a</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A327">
              <ruleml:Rel iri="prOnto:relatedTo" />
              <ruleml:Var keyref=":ert" />
              <ruleml:Var keyref=":ee" />
              <ruleml:Var keyref=":er" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec1Art12Par3NonElectMeans" />
                <ruleml:Var keyref=":er" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":elf2">elf2</ruleml:Var>
                <ruleml:Var keyref=":t2" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A328">
                <ruleml:Rel iri="prOnto:electronicForm" />
                <ruleml:Var keyref=":elf2" />
                <ruleml:Var keyref=":en" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements34Formula5">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :er1 :elf1 :er2 :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:request' :er1 :w :r) & (prOnto:electronicForm' :elf1 :er)
	 & (rioOnto:RexistAtTime :a2 :t2) & (rioOnto:and :a2 :en :ee :ert) & (prOnto:Communicate' :en :y :w :ee)
	 & (prOnto:execute' :ee :y :a) & (prOnto:relatedTo' :ert :ee :er) & (prOnto:request' :er2 :w :ene)
	 & (rioOnto:not :ene :elf2) & (prOnto:electronicForm' :elf2 :en),

	(rioOnto:RexistAtTime :ene :t2)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":er1">er1</ruleml:Var>
              <ruleml:Var key=":elf1">elf1</ruleml:Var>
              <ruleml:Var key=":er2">er2</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A329">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A330">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A331">
              <ruleml:Rel iri="prOnto:request" />
              <ruleml:Var keyref=":er1" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var key=":r">r</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A332">
              <ruleml:Rel iri="prOnto:electronicForm" />
              <ruleml:Var keyref=":elf1" />
              <ruleml:Var key=":er">er</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a2">a2</ruleml:Var>
              <ruleml:Var key=":t2">t2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a2" />
              <ruleml:Var key=":en">en</ruleml:Var>
              <ruleml:Var key=":ee">ee</ruleml:Var>
              <ruleml:Var key=":ert">ert</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A333">
              <ruleml:Rel iri="prOnto:Communicate" />
              <ruleml:Var keyref=":en" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":ee" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A334">
              <ruleml:Rel iri="prOnto:execute" />
              <ruleml:Var keyref=":ee" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":a">a</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A335">
              <ruleml:Rel iri="prOnto:relatedTo" />
              <ruleml:Var keyref=":ert" />
              <ruleml:Var keyref=":ee" />
              <ruleml:Var keyref=":er" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A336">
              <ruleml:Rel iri="prOnto:request" />
              <ruleml:Var keyref=":er2" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var key=":ene">ene</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":ene" />
              <ruleml:Var key=":elf2">elf2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A337">
              <ruleml:Rel iri="prOnto:electronicForm" />
              <ruleml:Var keyref=":elf2" />
              <ruleml:Var keyref=":en" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var keyref=":ene" />
              <ruleml:Var keyref=":t2" />
            </ruleml:Atom>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:ConstitutiveStatement key="statements34Formula6">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :er1 :elf1 :er2 :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:request' :er1 :w :r) & (prOnto:electronicForm' :elf1 :er)
	 & (rioOnto:RexistAtTime :a2 :t2) & (rioOnto:and :a2 :en :ee :ert) & (prOnto:Communicate' :en :y :w :ee)
	 & (prOnto:execute' :ee :y :a) & (prOnto:relatedTo' :ert :ee :er) & (prOnto:request' :er2 :w :ene)
	 & (rioOnto:not :ene :elf2) & (prOnto:electronicForm' :elf2 :en),

	(rioOnto:exceptionCha3Sec1Art12Par3NonElectMeans :er1)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":er1">er1</ruleml:Var>
              <ruleml:Var key=":elf1">elf1</ruleml:Var>
              <ruleml:Var key=":er2">er2</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A338">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A339">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A340">
              <ruleml:Rel iri="prOnto:request" />
              <ruleml:Var keyref=":er1" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var key=":r">r</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A341">
              <ruleml:Rel iri="prOnto:electronicForm" />
              <ruleml:Var keyref=":elf1" />
              <ruleml:Var key=":er">er</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a2">a2</ruleml:Var>
              <ruleml:Var key=":t2">t2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a2" />
              <ruleml:Var key=":en">en</ruleml:Var>
              <ruleml:Var key=":ee">ee</ruleml:Var>
              <ruleml:Var key=":ert">ert</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A342">
              <ruleml:Rel iri="prOnto:Communicate" />
              <ruleml:Var keyref=":en" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":ee" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A343">
              <ruleml:Rel iri="prOnto:execute" />
              <ruleml:Var keyref=":ee" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":a">a</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A344">
              <ruleml:Rel iri="prOnto:relatedTo" />
              <ruleml:Var keyref=":ert" />
              <ruleml:Var keyref=":ee" />
              <ruleml:Var keyref=":er" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A345">
              <ruleml:Rel iri="prOnto:request" />
              <ruleml:Var keyref=":er2" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var key=":ene">ene</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":ene" />
              <ruleml:Var key=":elf2">elf2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A346">
              <ruleml:Rel iri="prOnto:electronicForm" />
              <ruleml:Var keyref=":elf2" />
              <ruleml:Var keyref=":en" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:Atom>
            <ruleml:Rel iri="rioOnto:exceptionCha3Sec1Art12Par3NonElectMeans" />
            <ruleml:Var keyref=":er1" />
          </ruleml:Atom>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements35">
    <lrml:PrescriptiveStatement key="statements35Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :er :ene :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:request' :er :w :r) & (rioOnto:not :ene :ee)
	 & (prOnto:execute' :ee :y :a) & (prOnto:relatedTo' :ert :ee :er),

	(rioOnto:RexistAtTime :a2 :t2) & (rioOnto:and :a2 :en1 :en2 :en3) & (rioOnto:<= :t2 rioOnto:+(:t1, 1M)) & (prOnto:Communicate' :en1 :y :w :ene)
	 & (prOnto:nonDelayed :en1) & (prOnto:Communicate' :en2 :y :w :ea1) & (prOnto:ableTo' :ea1 :w :el)
	 & (prOnto:lodge' :el :w :c prOnto:supAuth(prOnto:MSof(:y))) & (prOnto:complaint :c) & (prOnto:Communicate' :en3 :y :w :ea2)
	 & (prOnto:ableTo' :ea2 :w :erj) & (prOnto:request' :erj :w :j) & (prOnto:judicialRemedy :j)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":er">er</ruleml:Var>
              <ruleml:Var key=":ene">ene</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A347">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A348">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A349">
              <ruleml:Rel iri="prOnto:request" />
              <ruleml:Var keyref=":er" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var key=":r">r</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":ene" />
              <ruleml:Var key=":ee">ee</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A350">
              <ruleml:Rel iri="prOnto:execute" />
              <ruleml:Var keyref=":ee" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":a">a</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A351">
              <ruleml:Rel iri="prOnto:relatedTo" />
              <ruleml:Var key=":ert">ert</ruleml:Var>
              <ruleml:Var keyref=":ee" />
              <ruleml:Var keyref=":er" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":a2">a2</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:and" />
                <ruleml:Var keyref=":a2" />
                <ruleml:Var key=":en1">en1</ruleml:Var>
                <ruleml:Var key=":en2">en2</ruleml:Var>
                <ruleml:Var key=":en3">en3</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&lt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Expr>
                  <ruleml:Fun iri="rioOnto:+" />
                  <ruleml:Var keyref=":t1" />
                  <ruleml:Ind>1M</ruleml:Ind>
                </ruleml:Expr>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A352">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en1" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":ene" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:nonDelayed" />
                <ruleml:Var keyref=":en1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A353">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en2" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var key=":ea1">ea1</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A354">
                <ruleml:Rel iri="prOnto:ableTo" />
                <ruleml:Var keyref=":ea1" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var key=":el">el</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A355">
                <ruleml:Rel iri="prOnto:lodge" />
                <ruleml:Var keyref=":el" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var key=":c">c</ruleml:Var>
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:supAuth" />
                  <ruleml:Expr>
                    <ruleml:Fun iri="prOnto:MSof" />
                    <ruleml:Var keyref=":y" />
                  </ruleml:Expr>
                </ruleml:Expr>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:complaint" />
                <ruleml:Var keyref=":c" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A356">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en3" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var key=":ea2">ea2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A357">
                <ruleml:Rel iri="prOnto:ableTo" />
                <ruleml:Var keyref=":ea2" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var key=":erj">erj</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A358">
                <ruleml:Rel iri="prOnto:request" />
                <ruleml:Var keyref=":erj" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var key=":j">j</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:judicialRemedy" />
                <ruleml:Var keyref=":j" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements36">
    <lrml:PrescriptiveStatement key="statements36Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :er :en :ert :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:request' :er :w :r) & (prOnto:Communicate' :en :y :w :k)
	 & (prOnto:relatedTo' :ert :en :er) & (rioOnto:exceptionCha3Sec1Art12Par5 :en),

	(rioOnto:RexistAtTime :enc :t1) & (rioOnto:not :enc :ech) & (prOnto:charge' :ech :y :w :f) & (prOnto:fee :f)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":er">er</ruleml:Var>
              <ruleml:Var key=":en">en</ruleml:Var>
              <ruleml:Var key=":ert">ert</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A359">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A360">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A361">
              <ruleml:Rel iri="prOnto:request" />
              <ruleml:Var keyref=":er" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var key=":r">r</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A362">
              <ruleml:Rel iri="prOnto:Communicate" />
              <ruleml:Var keyref=":en" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A363">
              <ruleml:Rel iri="prOnto:relatedTo" />
              <ruleml:Var keyref=":ert" />
              <ruleml:Var keyref=":en" />
              <ruleml:Var keyref=":er" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec1Art12Par5" />
                <ruleml:Var keyref=":en" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":enc">enc</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:not" />
                <ruleml:Var keyref=":enc" />
                <ruleml:Var key=":ech">ech</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A364">
                <ruleml:Rel iri="prOnto:charge" />
                <ruleml:Var keyref=":ech" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var key=":f">f</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:fee" />
                <ruleml:Var keyref=":f" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements36Formula2">
      <!--
Permission:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :er :en :ert :enr :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:request' :er :w :r) & (prOnto:Communicate' :en :y :w :k)
	 & (prOnto:relatedTo' :ert :en :er) & (rioOnto:not :enr :era) & (prOnto:reasonable' :era :er),

	(rioOnto:RexistAtTime :eor :t1) & (rioOnto:or :eor :ech :erf) & (prOnto:charge' :ech :y :w :f) & (prOnto:fee :f)
	 & (prOnto:reasonable :f) & (prOnto:refuse' :erf :y :er)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":er">er</ruleml:Var>
              <ruleml:Var key=":en">en</ruleml:Var>
              <ruleml:Var key=":ert">ert</ruleml:Var>
              <ruleml:Var key=":enr">enr</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A365">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A366">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A367">
              <ruleml:Rel iri="prOnto:request" />
              <ruleml:Var keyref=":er" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var key=":r">r</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A368">
              <ruleml:Rel iri="prOnto:Communicate" />
              <ruleml:Var keyref=":en" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A369">
              <ruleml:Rel iri="prOnto:relatedTo" />
              <ruleml:Var keyref=":ert" />
              <ruleml:Var keyref=":en" />
              <ruleml:Var keyref=":er" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":enr" />
              <ruleml:Var key=":era">era</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A370">
              <ruleml:Rel iri="prOnto:reasonable" />
              <ruleml:Var keyref=":era" />
              <ruleml:Var key=":er">er</ruleml:Var>
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Permission iri="rioOnto:Permission">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":eor">eor</ruleml:Var>
                <ruleml:Var key=":t1">t1</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:or" />
                <ruleml:Var keyref=":eor" />
                <ruleml:Var key=":ech">ech</ruleml:Var>
                <ruleml:Var key=":erf">erf</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A371">
                <ruleml:Rel iri="prOnto:charge" />
                <ruleml:Var keyref=":ech" />
                <ruleml:Var key=":y">y</ruleml:Var>
                <ruleml:Var key=":w">w</ruleml:Var>
                <ruleml:Var key=":f">f</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:fee" />
                <ruleml:Var keyref=":f" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:reasonable" />
                <ruleml:Var keyref=":f" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A372">
                <ruleml:Rel iri="prOnto:refuse" />
                <ruleml:Var keyref=":erf" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":er" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Permission>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:ConstitutiveStatement key="statements36Formula3">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :er :en :ert :enr :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:request' :er :w :r) & (prOnto:Communicate' :en :y :w :k)
	 & (prOnto:relatedTo' :ert :en :er) & (rioOnto:not :enr :era) & (prOnto:reasonable' :era :er),

	(rioOnto:exceptionCha3Sec1Art12Par5 :en)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":er">er</ruleml:Var>
              <ruleml:Var key=":en">en</ruleml:Var>
              <ruleml:Var key=":ert">ert</ruleml:Var>
              <ruleml:Var key=":enr">enr</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A373">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A374">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A375">
              <ruleml:Rel iri="prOnto:request" />
              <ruleml:Var keyref=":er" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var key=":r">r</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A376">
              <ruleml:Rel iri="prOnto:Communicate" />
              <ruleml:Var keyref=":en" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A377">
              <ruleml:Rel iri="prOnto:relatedTo" />
              <ruleml:Var keyref=":ert" />
              <ruleml:Var keyref=":en" />
              <ruleml:Var keyref=":er" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":enr" />
              <ruleml:Var key=":era">era</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A378">
              <ruleml:Rel iri="prOnto:reasonable" />
              <ruleml:Var keyref=":era" />
              <ruleml:Var key=":er">er</ruleml:Var>
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:Atom>
            <ruleml:Rel iri="rioOnto:exceptionCha3Sec1Art12Par5" />
            <ruleml:Var keyref=":en" />
          </ruleml:Atom>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
    <lrml:PrescriptiveStatement key="statements36Formula4">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :er :en :ert :enr :eor :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:request' :er :w :r) & (prOnto:Communicate' :en :y :w :k)
	 & (prOnto:relatedTo' :ert :en :er) & (rioOnto:not :enr :era) & (prOnto:reasonable' :era :er)
	 & (rioOnto:or :eor :ech :erf) & (prOnto:charge' :ech :y :w :f) & (prOnto:fee :f)
	 & (prOnto:reasonable :f) & (prOnto:refuse' :erf :y :er),

	(rioOnto:RexistAtTime :ea :t1) & (prOnto:ableTo' :ea :y :ed) & (prOnto:demonstrate' :ed :y :enr)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":er">er</ruleml:Var>
              <ruleml:Var key=":en">en</ruleml:Var>
              <ruleml:Var key=":ert">ert</ruleml:Var>
              <ruleml:Var key=":enr">enr</ruleml:Var>
              <ruleml:Var key=":eor">eor</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A379">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A380">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A381">
              <ruleml:Rel iri="prOnto:request" />
              <ruleml:Var keyref=":er" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var key=":r">r</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A382">
              <ruleml:Rel iri="prOnto:Communicate" />
              <ruleml:Var keyref=":en" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A383">
              <ruleml:Rel iri="prOnto:relatedTo" />
              <ruleml:Var keyref=":ert" />
              <ruleml:Var keyref=":en" />
              <ruleml:Var keyref=":er" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":enr" />
              <ruleml:Var key=":era">era</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A384">
              <ruleml:Rel iri="prOnto:reasonable" />
              <ruleml:Var keyref=":era" />
              <ruleml:Var key=":er">er</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eor" />
              <ruleml:Var key=":ech">ech</ruleml:Var>
              <ruleml:Var key=":erf">erf</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A385">
              <ruleml:Rel iri="prOnto:charge" />
              <ruleml:Var keyref=":ech" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var key=":w">w</ruleml:Var>
              <ruleml:Var key=":f">f</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:fee" />
              <ruleml:Var keyref=":f" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:reasonable" />
              <ruleml:Var keyref=":f" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A386">
              <ruleml:Rel iri="prOnto:refuse" />
              <ruleml:Var keyref=":erf" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":er">er</ruleml:Var>
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":ea">ea</ruleml:Var>
                <ruleml:Var key=":t1">t1</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A387">
                <ruleml:Rel iri="prOnto:ableTo" />
                <ruleml:Var keyref=":ea" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var key=":ed">ed</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A388">
                <ruleml:Rel iri="prOnto:demonstrate" />
                <ruleml:Var keyref=":ed" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var key=":enr">enr</ruleml:Var>
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements37">
    <lrml:PrescriptiveStatement key="statements37Formula1">
      <!--
Permission:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :er1 :en :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:request' :er1 :w :r) & (rioOnto:not :en :eif)
	 & (prOnto:identifiableFrom' :eif :w :r) & (prOnto:reasonable :en),

	(rioOnto:RexistAtTime :er2 :t2) & (rioOnto:>= :t2 :t1) & (prOnto:request' :er2 :y :eid) & (prOnto:identify' :eid :y :w)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":er1">er1</ruleml:Var>
              <ruleml:Var key=":en">en</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A389">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A390">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A391">
              <ruleml:Rel iri="prOnto:request" />
              <ruleml:Var keyref=":er1" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var key=":r">r</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en" />
              <ruleml:Var key=":eif">eif</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A392">
              <ruleml:Rel iri="prOnto:identifiableFrom" />
              <ruleml:Var keyref=":eif" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":r" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:reasonable" />
              <ruleml:Var keyref=":en" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Permission iri="rioOnto:Permission">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":er2">er2</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A393">
                <ruleml:Rel iri="prOnto:request" />
                <ruleml:Var keyref=":er2" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var key=":eid">eid</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A394">
                <ruleml:Rel iri="prOnto:identify" />
                <ruleml:Var keyref=":eid" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Permission>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements38">
    <lrml:PrescriptiveStatement key="statements38Formula1">
      <!--
Permission:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :en :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:Communicate' :en :y :w :i),

	(rioOnto:RexistAtTime :eat :t1) & (prOnto:attachTo' :eat :y :ic :en) & (prOnto:icon :ic)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":en">en</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A395">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A396">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A397">
              <ruleml:Rel iri="prOnto:Communicate" />
              <ruleml:Var keyref=":en" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var key=":i">i</ruleml:Var>
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Permission iri="rioOnto:Permission">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":eat">eat</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A398">
                <ruleml:Rel iri="prOnto:attachTo" />
                <ruleml:Var keyref=":eat" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var key=":ic">ic</ruleml:Var>
                <ruleml:Var keyref=":en" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:icon" />
                <ruleml:Var keyref=":ic" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Permission>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements38Formula2">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :en :eat :el :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:Communicate' :en :y :w :i) & (prOnto:attachTo' :eat :y :ic :en)
	 & (prOnto:icon :ic) & (prOnto:electronicForm' :el :ic),

	(rioOnto:RexistAtTime :emr :t1) & (prOnto:machineReadable' :emr :ic)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":en">en</ruleml:Var>
              <ruleml:Var key=":eat">eat</ruleml:Var>
              <ruleml:Var key=":el">el</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A399">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A400">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A401">
              <ruleml:Rel iri="prOnto:Communicate" />
              <ruleml:Var keyref=":en" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var key=":i">i</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A402">
              <ruleml:Rel iri="prOnto:attachTo" />
              <ruleml:Var keyref=":eat" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":ic">ic</ruleml:Var>
              <ruleml:Var keyref=":en" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:icon" />
              <ruleml:Var keyref=":ic" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A403">
              <ruleml:Rel iri="prOnto:electronicForm" />
              <ruleml:Var keyref=":el" />
              <ruleml:Var keyref=":ic" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":emr">emr</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A404">
                <ruleml:Rel iri="prOnto:machineReadable" />
                <ruleml:Var keyref=":emr" />
                <ruleml:Var keyref=":ic" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements39">
    <lrml:PrescriptiveStatement key="statements39Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :es :ena :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:PersonalDataRecord :p) & (prOnto:storedIn' :es :z :p)
	 & (rioOnto:not :ena :ewa) & (prOnto:awareOf' :ewa :z prOnto:contactDetails(:y)),

	(rioOnto:RexistAtTime :en :t1) & (prOnto:Communicate' :en :y :w prOnto:contactDetails(:y))
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":es">es</ruleml:Var>
              <ruleml:Var key=":ena">ena</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A405">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A406">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalDataRecord" />
              <ruleml:Var key=":p">p</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A407">
              <ruleml:Rel iri="prOnto:storedIn" />
              <ruleml:Var keyref=":es" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":p" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":ena" />
              <ruleml:Var key=":ewa">ewa</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A408">
              <ruleml:Rel iri="prOnto:awareOf" />
              <ruleml:Var keyref=":ewa" />
              <ruleml:Var keyref=":z" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:contactDetails" />
                <ruleml:Var keyref=":y" />
              </ruleml:Expr>
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":en">en</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A409">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:contactDetails" />
                  <ruleml:Var keyref=":y" />
                </ruleml:Expr>
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements39Formula2">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :er :es :ena :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:isRepresentedBy :y :k) & (prOnto:Representative :k)
	 & (prOnto:responsibleFor' :er :k :ec) & (prOnto:PersonalDataRecord :p) & (prOnto:storedIn' :es :z :p)
	 & (rioOnto:not :ena :ewa) & (prOnto:awareOf' :ewa :z prOnto:contactDetails(:k)),

	(rioOnto:RexistAtTime :en :t1) & (prOnto:Communicate' :en :y :w prOnto:contactDetails(:k))
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":er">er</ruleml:Var>
              <ruleml:Var key=":es">es</ruleml:Var>
              <ruleml:Var key=":ena">ena</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A410">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A411">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isRepresentedBy" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Representative" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A412">
              <ruleml:Rel iri="prOnto:responsibleFor" />
              <ruleml:Var keyref=":er" />
              <ruleml:Var keyref=":k" />
              <ruleml:Var keyref=":ec" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalDataRecord" />
              <ruleml:Var key=":p">p</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A413">
              <ruleml:Rel iri="prOnto:storedIn" />
              <ruleml:Var keyref=":es" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":p" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":ena" />
              <ruleml:Var key=":ewa">ewa</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A414">
              <ruleml:Rel iri="prOnto:awareOf" />
              <ruleml:Var keyref=":ewa" />
              <ruleml:Var keyref=":z" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:contactDetails" />
                <ruleml:Var keyref=":k" />
              </ruleml:Expr>
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":en">en</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A415">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:contactDetails" />
                  <ruleml:Var keyref=":k" />
                </ruleml:Expr>
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements40">
    <lrml:PrescriptiveStatement key="statements40Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :es :ena :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:DPO :k) & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:PersonalDataRecord :p)
	 & (prOnto:storedIn' :es :z :p) & (rioOnto:not :ena :ewa) & (prOnto:awareOf' :ewa :z prOnto:contactDetails(:k)),

	(rioOnto:RexistAtTime :en :t1) & (prOnto:Communicate' :en :y :w prOnto:contactDetails(:k))
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":es">es</ruleml:Var>
              <ruleml:Var key=":ena">ena</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A416">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DPO" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A417">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalDataRecord" />
              <ruleml:Var key=":p">p</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A418">
              <ruleml:Rel iri="prOnto:storedIn" />
              <ruleml:Var keyref=":es" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":p" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":ena" />
              <ruleml:Var key=":ewa">ewa</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A419">
              <ruleml:Rel iri="prOnto:awareOf" />
              <ruleml:Var keyref=":ewa" />
              <ruleml:Var keyref=":z" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:contactDetails" />
                <ruleml:Var keyref=":k" />
              </ruleml:Expr>
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":en">en</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A420">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:contactDetails" />
                  <ruleml:Var keyref=":k" />
                </ruleml:Expr>
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements41">
    <lrml:PrescriptiveStatement key="statements41Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :es :ena1 :ena2 :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:Purpose :epu) & (prOnto:isBasedOn :ep :epu)
	 & (prOnto:legalBasisOf :elb :ep) & (prOnto:PersonalDataRecord :p) & (prOnto:storedIn' :es :z :p)
	 & (rioOnto:not :ena1 :ewa1) & (prOnto:awareOf' :ewa1 :z :epu) & (rioOnto:not :ena2 :ewa2)
	 & (prOnto:awareOf' :ewa2 :z :elb),

	(rioOnto:RexistAtTime :a2 :t1) & (rioOnto:and :a2 :en1 :en2) & (prOnto:Communicate' :en1 :y :w :epu) & (prOnto:Communicate' :en2 :y :w :elb)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":es">es</ruleml:Var>
              <ruleml:Var key=":ena1">ena1</ruleml:Var>
              <ruleml:Var key=":ena2">ena2</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A421">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A422">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Purpose" />
              <ruleml:Var key=":epu">epu</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isBasedOn" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":epu" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:legalBasisOf" />
              <ruleml:Var key=":elb">elb</ruleml:Var>
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalDataRecord" />
              <ruleml:Var key=":p">p</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A423">
              <ruleml:Rel iri="prOnto:storedIn" />
              <ruleml:Var keyref=":es" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":p" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":ena1" />
              <ruleml:Var key=":ewa1">ewa1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A424">
              <ruleml:Rel iri="prOnto:awareOf" />
              <ruleml:Var keyref=":ewa1" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":epu" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":ena2" />
              <ruleml:Var key=":ewa2">ewa2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A425">
              <ruleml:Rel iri="prOnto:awareOf" />
              <ruleml:Var keyref=":ewa2" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":elb" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":a2">a2</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:and" />
                <ruleml:Var keyref=":a2" />
                <ruleml:Var key=":en1">en1</ruleml:Var>
                <ruleml:Var key=":en2">en2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A426">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en1" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":epu" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A427">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en2" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":elb" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements42">
    <lrml:PrescriptiveStatement key="statements42Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :eor :es :ena1 :ena2 :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:thirdParty :k) & (prOnto:PersonalDataProcessing' :ep :x :z) & (rioOnto:or :eor :ei1 :ei2)
	 & (prOnto:legitimateInterestOf' :ei1 :y) & (prOnto:legitimateInterestOf' :ei2 :k) & (prOnto:PersonalDataRecord :p)
	 & (prOnto:storedIn' :es :z :p) & (rioOnto:not :ena1 :ewa1) & (prOnto:awareOf' :ewa1 :z :ei1)
	 & (rioOnto:not :ena2 :ewa2) & (prOnto:awareOf' :ewa2 :z :ei2),

	(rioOnto:RexistAtTime :o2 :t1) & (rioOnto:or :o2 :en1 :en2) & (prOnto:Communicate' :en1 :y :w :ei1) & (prOnto:Communicate' :en2 :y :w :ei2)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":eor">eor</ruleml:Var>
              <ruleml:Var key=":es">es</ruleml:Var>
              <ruleml:Var key=":ena1">ena1</ruleml:Var>
              <ruleml:Var key=":ena2">ena2</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A428">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:thirdParty" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A429">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eor" />
              <ruleml:Var key=":ei1">ei1</ruleml:Var>
              <ruleml:Var key=":ei2">ei2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A430">
              <ruleml:Rel iri="prOnto:legitimateInterestOf" />
              <ruleml:Var keyref=":ei1" />
              <ruleml:Var keyref=":y" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A431">
              <ruleml:Rel iri="prOnto:legitimateInterestOf" />
              <ruleml:Var keyref=":ei2" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalDataRecord" />
              <ruleml:Var key=":p">p</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A432">
              <ruleml:Rel iri="prOnto:storedIn" />
              <ruleml:Var keyref=":es" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":p" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":ena1" />
              <ruleml:Var key=":ewa1">ewa1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A433">
              <ruleml:Rel iri="prOnto:awareOf" />
              <ruleml:Var keyref=":ewa1" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":ei1" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":ena2" />
              <ruleml:Var key=":ewa2">ewa2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A434">
              <ruleml:Rel iri="prOnto:awareOf" />
              <ruleml:Var keyref=":ewa2" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":ei2" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":o2">o2</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:or" />
                <ruleml:Var keyref=":o2" />
                <ruleml:Var key=":en1">en1</ruleml:Var>
                <ruleml:Var key=":en2">en2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A435">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en1" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":ei1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A436">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en2" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":ei2" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements43">
    <lrml:PrescriptiveStatement key="statements43Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :eor :es :ena1 :ena2 :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:recipientOf :r :z) & (prOnto:categoryOf :p :r)
	 & (prOnto:PersonalDataRecord :p) & (prOnto:storedIn' :es :z :p) & (rioOnto:not :ena1 :ewa1)
	 & (prOnto:awareOf' :ewa1 :z :r) & (rioOnto:not :ena2 :ewa2) & (prOnto:awareOf' :ewa2 :z :c),

	(rioOnto:RexistAtTime :o2 :t1) & (rioOnto:or :o2 :en1 :en2) & (prOnto:Communicate' :en1 :y :w :r) & (prOnto:Communicate' :en2 :y :w :c)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":eor">eor</ruleml:Var>
              <ruleml:Var key=":es">es</ruleml:Var>
              <ruleml:Var key=":ena1">ena1</ruleml:Var>
              <ruleml:Var key=":ena2">ena2</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A437">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A438">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:recipientOf" />
              <ruleml:Var key=":r">r</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:categoryOf" />
              <ruleml:Var key=":p">c</ruleml:Var>
              <ruleml:Var keyref=":r" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalDataRecord" />
              <ruleml:Var key=":p">p</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A439">
              <ruleml:Rel iri="prOnto:storedIn" />
              <ruleml:Var keyref=":es" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":p" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":ena1" />
              <ruleml:Var key=":ewa1">ewa1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A440">
              <ruleml:Rel iri="prOnto:awareOf" />
              <ruleml:Var keyref=":ewa1" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":r" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":ena2" />
              <ruleml:Var key=":ewa2">ewa2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A441">
              <ruleml:Rel iri="prOnto:awareOf" />
              <ruleml:Var keyref=":ewa2" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":o2">o2</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:or" />
                <ruleml:Var keyref=":o2" />
                <ruleml:Var key=":en1">en1</ruleml:Var>
                <ruleml:Var key=":en2">en2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A442">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en1" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":r" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A443">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en2" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":c" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements44">
    <lrml:PrescriptiveStatement key="statements44Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :es :ena1 :ena2 :ena3 :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (rioOnto:RexistAtTime :a2 :t2) & (rioOnto:>= :t2 :t1)
	 & (rioOnto:and :a2 :et :o1 :o2) & (prOnto:Transmit' :et :x :z :k) & (rioOnto:or :o1 :eio :etc)
	 & (prOnto:internationalOrganization' :eio :k) & (prOnto:thirdCountry' :etc :k) & (rioOnto:or :o2 :ea :ena)
	 & (rioOnto:not :ena :ea) & (prOnto:authorizedBy' :ea :et EuropeanUnion) & (prOnto:PersonalDataRecord :p)
	 & (prOnto:storedIn :es :z :p) & (rioOnto:not :ena1 :ewa1) & (prOnto:awareOf' :ewa1 :z :et)
	 & (rioOnto:not :ena2 :ewa2) & (prOnto:awareOf' :ewa2 :z :ea) & (rioOnto:not :ena3 :ewa3)
	 & (prOnto:awareOf' :ewa3 :z :ena),

	(rioOnto:RexistAtTime :a3 :t1) & (rioOnto:and :a3 :en1 :o3) & (prOnto:Communicate' :en1 :y :w :et) & (rioOnto:or :o3 :en2 :en3)
	 & (prOnto:Communicate' :en2 :y :w :ea) & (prOnto:Communicate' :en3 :y :w :ena)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":es">es</ruleml:Var>
              <ruleml:Var key=":ena1">ena1</ruleml:Var>
              <ruleml:Var key=":ena2">ena2</ruleml:Var>
              <ruleml:Var key=":ena3">ena3</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A444">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A445">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a2">a2</ruleml:Var>
              <ruleml:Var key=":t2">t2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:&gt;=" />
              <ruleml:Var keyref=":t2" />
              <ruleml:Var keyref=":t1" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a2" />
              <ruleml:Var key=":et">et</ruleml:Var>
              <ruleml:Var key=":o1">o1</ruleml:Var>
              <ruleml:Var key=":o2">o2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A446">
              <ruleml:Rel iri="prOnto:Transmit" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":o1" />
              <ruleml:Var key=":eio">eio</ruleml:Var>
              <ruleml:Var key=":etc">etc</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A447">
              <ruleml:Rel iri="prOnto:internationalOrganization" />
              <ruleml:Var keyref=":eio" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A448">
              <ruleml:Rel iri="prOnto:thirdCountry" />
              <ruleml:Var keyref=":etc" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":o2" />
              <ruleml:Var key=":ea">ea</ruleml:Var>
              <ruleml:Var key=":ena">ena</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":ena" />
              <ruleml:Var keyref=":ea" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A449">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":ea" />
              <ruleml:Var keyref=":et" />
              <ruleml:Ind>EuropeanUnion</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalDataRecord" />
              <ruleml:Var key=":p">p</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:storedIn" />
              <ruleml:Var keyref=":es" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":p" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":ena1" />
              <ruleml:Var key=":ewa1">ewa1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A450">
              <ruleml:Rel iri="prOnto:awareOf" />
              <ruleml:Var keyref=":ewa1" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":et" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":ena2" />
              <ruleml:Var key=":ewa2">ewa2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A451">
              <ruleml:Rel iri="prOnto:awareOf" />
              <ruleml:Var keyref=":ewa2" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":ea" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":ena3" />
              <ruleml:Var key=":ewa3">ewa3</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A452">
              <ruleml:Rel iri="prOnto:awareOf" />
              <ruleml:Var keyref=":ewa3" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":ena" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":a3">a3</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:and" />
                <ruleml:Var keyref=":a3" />
                <ruleml:Var key=":en1">en1</ruleml:Var>
                <ruleml:Var key=":o3">o3</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A453">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en1" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":et" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:or" />
                <ruleml:Var keyref=":o3" />
                <ruleml:Var key=":en2">en2</ruleml:Var>
                <ruleml:Var key=":en3">en3</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A454">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en2" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":ea" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A455">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en3" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":ena" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements44Formula2">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :ei1 :ei2 :ef :es :ena1 :ena2 :ena3 :ena4 :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (rioOnto:RexistAtTime :a2 :t2) & (rioOnto:>= :t2 :t1)
	 & (rioOnto:and :a2 :et :o1 :ena) & (prOnto:Transmit' :et :x :z :k) & (rioOnto:or :o1 :eio :etc)
	 & (prOnto:internationalOrganization' :eio :k) & (prOnto:thirdCountry' :etc :k) & (rioOnto:not :ena :ea)
	 & (prOnto:authorizedBy' :ea :et EuropeanUnion) & (prOnto:measure :em1) & (prOnto:implement' :ei1 :y :em1)
	 & (prOnto:appropriate :em1) & (prOnto:measure :em2) & (prOnto:implement' :ei2 :y :em2)
	 & (prOnto:enforce' :ef :em2 :erf) & (prOnto:rightsAndFreedomsOf' :erf :w) & (prOnto:PersonalDataRecord :p)
	 & (prOnto:storedIn :es :z :p) & (rioOnto:not :ena1 :ewa1) & (prOnto:awareOf' :ewa1 :z :ei1)
	 & (rioOnto:not :ena2 :ewa2) & (prOnto:awareOf' :ewa2 :z :ei2) & (rioOnto:not :ena3 :ewa3)
	 & (prOnto:awareOf' :ewa3 :z :d1) & (rioOnto:not :ena4 :ewa4) & (prOnto:awareOf' :ewa4 :z :d2),

	(rioOnto:RexistAtTime :a3 :t1) & (rioOnto:and :a3 :en1 :en2 :en3 :en4) & (prOnto:Communicate' :en1 :y :w :ei1) & (prOnto:Communicate' :en2 :y :w :ei2)
	 & (prOnto:Communicate' :en3 :y :w :d1) & (prOnto:Communicate' :en4 :y :w :d2) & (prOnto:documentationOf :d1 :ei1)
	 & (prOnto:documentationOf :d2 :ei2)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":ei1">ei1</ruleml:Var>
              <ruleml:Var key=":ei2">ei2</ruleml:Var>
              <ruleml:Var key=":ef">ef</ruleml:Var>
              <ruleml:Var key=":es">es</ruleml:Var>
              <ruleml:Var key=":ena1">ena1</ruleml:Var>
              <ruleml:Var key=":ena2">ena2</ruleml:Var>
              <ruleml:Var key=":ena3">ena3</ruleml:Var>
              <ruleml:Var key=":ena4">ena4</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A456">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A457">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a2">a2</ruleml:Var>
              <ruleml:Var key=":t2">t2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:&gt;=" />
              <ruleml:Var keyref=":t2" />
              <ruleml:Var keyref=":t1" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a2" />
              <ruleml:Var key=":et">et</ruleml:Var>
              <ruleml:Var key=":o1">o1</ruleml:Var>
              <ruleml:Var key=":ena">ena</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A458">
              <ruleml:Rel iri="prOnto:Transmit" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":o1" />
              <ruleml:Var key=":eio">eio</ruleml:Var>
              <ruleml:Var key=":etc">etc</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A459">
              <ruleml:Rel iri="prOnto:internationalOrganization" />
              <ruleml:Var keyref=":eio" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A460">
              <ruleml:Rel iri="prOnto:thirdCountry" />
              <ruleml:Var keyref=":etc" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":ena" />
              <ruleml:Var keyref=":ea" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A461">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":ea" />
              <ruleml:Var keyref=":et" />
              <ruleml:Ind>EuropeanUnion</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:measure" />
              <ruleml:Var key=":em1">em1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A462">
              <ruleml:Rel iri="prOnto:implement" />
              <ruleml:Var keyref=":ei1" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":em1" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:appropriate" />
              <ruleml:Var keyref=":em1" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:measure" />
              <ruleml:Var key=":em2">em2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A463">
              <ruleml:Rel iri="prOnto:implement" />
              <ruleml:Var keyref=":ei2" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":em2" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A464">
              <ruleml:Rel iri="prOnto:enforce" />
              <ruleml:Var keyref=":ef" />
              <ruleml:Var keyref=":em2" />
              <ruleml:Var key=":erf">erf</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A465">
              <ruleml:Rel iri="prOnto:rightsAndFreedomsOf" />
              <ruleml:Var keyref=":erf" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalDataRecord" />
              <ruleml:Var key=":p">p</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:storedIn" />
              <ruleml:Var keyref=":es" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":p" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":ena1" />
              <ruleml:Var key=":ewa1">ewa1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A466">
              <ruleml:Rel iri="prOnto:awareOf" />
              <ruleml:Var keyref=":ewa1" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":ei1" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":ena2" />
              <ruleml:Var key=":ewa2">ewa2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A467">
              <ruleml:Rel iri="prOnto:awareOf" />
              <ruleml:Var keyref=":ewa2" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":ei2" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":ena3" />
              <ruleml:Var key=":ewa3">ewa3</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A468">
              <ruleml:Rel iri="prOnto:awareOf" />
              <ruleml:Var keyref=":ewa3" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":d1" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":ena4" />
              <ruleml:Var key=":ewa4">ewa4</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A469">
              <ruleml:Rel iri="prOnto:awareOf" />
              <ruleml:Var keyref=":ewa4" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":d2" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":a3">a3</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:and" />
                <ruleml:Var keyref=":a3" />
                <ruleml:Var key=":en1">en1</ruleml:Var>
                <ruleml:Var key=":en2">en2</ruleml:Var>
                <ruleml:Var key=":en3">en3</ruleml:Var>
                <ruleml:Var key=":en4">en4</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A470">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en1" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":ei1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A471">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en2" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":ei2" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A472">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en3" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":d1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A473">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en4" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":d2" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:documentationOf" />
                <ruleml:Var key=":d1">d1</ruleml:Var>
                <ruleml:Var keyref=":ei1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:documentationOf" />
                <ruleml:Var key=":d2">d2</ruleml:Var>
                <ruleml:Var keyref=":ei2" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements45">
    <lrml:PrescriptiveStatement key="statements45Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :es :ena1 :ena2 :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:PersonalDataRecord :p) & (prOnto:storedIn' :es :z :p)
	 & (rioOnto:not :ena1 :ewa1) & (prOnto:awareOf' :ewa1 :z :et1) & (rioOnto:timeOf :eti :es)
	 & (rioOnto:not :ena2 :ewa2) & (prOnto:awareOf' :ewa2 :z :ei) & (prOnto:implement' :ei :y :em)
	 & (prOnto:measure :em) & (rioOnto:cause :ei :eaw) & (prOnto:awareOf' :eaw :y :eti),

	(rioOnto:RexistAtTime :eo :t1) & (rioOnto:or :eo :en1 :en2) & (prOnto:Communicate' :en1 :y :w :eti) & (prOnto:Communicate' :en2 :y :w :ei)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":es">es</ruleml:Var>
              <ruleml:Var key=":ena1">ena1</ruleml:Var>
              <ruleml:Var key=":ena2">ena2</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A474">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A475">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalDataRecord" />
              <ruleml:Var key=":p">p</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A476">
              <ruleml:Rel iri="prOnto:storedIn" />
              <ruleml:Var keyref=":es" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":p" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":ena1" />
              <ruleml:Var key=":ewa1">ewa1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A477">
              <ruleml:Rel iri="prOnto:awareOf" />
              <ruleml:Var keyref=":ewa1" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var key=":et1">et1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:timeOf" />
              <ruleml:Var keyref=":eti" />
              <ruleml:Var keyref=":es" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":ena2" />
              <ruleml:Var key=":ewa2">ewa2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A478">
              <ruleml:Rel iri="prOnto:awareOf" />
              <ruleml:Var keyref=":ewa2" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var key=":ei">ei</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A479">
              <ruleml:Rel iri="prOnto:implement" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":em">em</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:measure" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:cause" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var key=":eaw">eaw</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A480">
              <ruleml:Rel iri="prOnto:awareOf" />
              <ruleml:Var keyref=":eaw" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":eti" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":eo">eo</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:or" />
                <ruleml:Var keyref=":eo" />
                <ruleml:Var key=":en1">en1</ruleml:Var>
                <ruleml:Var key=":en2">en2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A481">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en1" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":eti" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A482">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en2" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":ei" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements46">
    <lrml:PrescriptiveStatement key="statements46Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :es :ena1 :ena2 :ena3 :ena4 :ena5 :ena6 :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :k :z) & (prOnto:Controller :y :z) & (prOnto:Processor :x)
	 & (prOnto:nominates' :edp :y :x) & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:Purpose :epu)
	 & (prOnto:isBasedOn :ep :epu) & (prOnto:PersonalDataRecord :p) & (prOnto:storedIn' :es :z :p)
	 & (rioOnto:not :ena1 :ewa1) & (prOnto:awareOf' :ewa1 :z :ea1) & (prOnto:ableTo' :ea1 :w :eac)
	 & (prOnto:access' :eac :w :z) & (rioOnto:not :ena2 :ewa2) & (prOnto:awareOf' :ewa2 :z :ea2)
	 & (prOnto:ableTo' :ea2 :w :ere) & (prOnto:rectify' :ere :w :z) & (rioOnto:not :ena3 :ewa3)
	 & (prOnto:awareOf' :ewa3 :z :ea3) & (prOnto:ableTo' :ea3 :w :era) & (prOnto:erase' :era :w :z)
	 & (rioOnto:not :ena4 :ewa4) & (prOnto:awareOf' :ewa4 :z :ea4) & (prOnto:ableTo' :ea4 :w :eli)
	 & (prOnto:limit' :eli :w :ep) & (rioOnto:not :ena5 :ewa5) & (prOnto:awareOf' :ewa5 :z :ea5)
	 & (prOnto:ableTo' :ea5 :w :eng) & (rioOnto:not :eng :a2) & (rioOnto:and :a2 :ehc :eau)
	 & (prOnto:consent :c) & (prOnto:hasConsented' :ehc :w :c) & (prOnto:authorizedBy' :eau :epu :c)
	 & (rioOnto:not :ena6 :ewa6) & (prOnto:awareOf' :ewa6 :z :ea6) & (prOnto:ableTo' :ea6 :x :elt)
	 & (prOnto:Transmit' :elt :x :z :k),

	(rioOnto:RexistAtTime :a2 :t1) & (rioOnto:and :a2 :en1 :en2 :en3 :en4 :en5 :en6) & (prOnto:Communicate' :en1 :y :w :ea1) & (prOnto:Communicate' :en2 :y :w :ea2)
	 & (prOnto:Communicate' :en3 :y :w :ea3) & (prOnto:Communicate' :en4 :y :w :ea4) & (prOnto:Communicate' :en5 :y :w :ea5)
	 & (prOnto:Communicate' :en6 :y :w :ea6)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":es">es</ruleml:Var>
              <ruleml:Var key=":ena1">ena1</ruleml:Var>
              <ruleml:Var key=":ena2">ena2</ruleml:Var>
              <ruleml:Var key=":ena3">ena3</ruleml:Var>
              <ruleml:Var key=":ena4">ena4</ruleml:Var>
              <ruleml:Var key=":ena5">ena5</ruleml:Var>
              <ruleml:Var key=":ena6">ena6</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":k">k</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A483">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A484">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Purpose" />
              <ruleml:Var key=":epu">epu</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isBasedOn" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":epu" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalDataRecord" />
              <ruleml:Var key=":p">p</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A485">
              <ruleml:Rel iri="prOnto:storedIn" />
              <ruleml:Var keyref=":es" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":p" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":ena1" />
              <ruleml:Var key=":ewa1">ewa1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A486">
              <ruleml:Rel iri="prOnto:awareOf" />
              <ruleml:Var keyref=":ewa1" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var key=":ea1">ea1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A487">
              <ruleml:Rel iri="prOnto:ableTo" />
              <ruleml:Var keyref=":ea1" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var key=":eac">eac</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A488">
              <ruleml:Rel iri="prOnto:access" />
              <ruleml:Var keyref=":eac" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":ena2" />
              <ruleml:Var key=":ewa2">ewa2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A489">
              <ruleml:Rel iri="prOnto:awareOf" />
              <ruleml:Var keyref=":ewa2" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var key=":ea2">ea2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A490">
              <ruleml:Rel iri="prOnto:ableTo" />
              <ruleml:Var keyref=":ea2" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var key=":ere">ere</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A491">
              <ruleml:Rel iri="prOnto:rectify" />
              <ruleml:Var keyref=":ere" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":ena3" />
              <ruleml:Var key=":ewa3">ewa3</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A492">
              <ruleml:Rel iri="prOnto:awareOf" />
              <ruleml:Var keyref=":ewa3" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var key=":ea3">ea3</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A493">
              <ruleml:Rel iri="prOnto:ableTo" />
              <ruleml:Var keyref=":ea3" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var key=":era">era</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A494">
              <ruleml:Rel iri="prOnto:erase" />
              <ruleml:Var keyref=":era" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":ena4" />
              <ruleml:Var key=":ewa4">ewa4</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A495">
              <ruleml:Rel iri="prOnto:awareOf" />
              <ruleml:Var keyref=":ewa4" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var key=":ea4">ea4</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A496">
              <ruleml:Rel iri="prOnto:ableTo" />
              <ruleml:Var keyref=":ea4" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var key=":eli">eli</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A497">
              <ruleml:Rel iri="prOnto:limit" />
              <ruleml:Var keyref=":eli" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":ena5" />
              <ruleml:Var key=":ewa5">ewa5</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A498">
              <ruleml:Rel iri="prOnto:awareOf" />
              <ruleml:Var keyref=":ewa5" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var key=":ea5">ea5</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A499">
              <ruleml:Rel iri="prOnto:ableTo" />
              <ruleml:Var keyref=":ea5" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var key=":eng">eng</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":eng" />
              <ruleml:Var key=":a2">a2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a2" />
              <ruleml:Var key=":ehc">ehc</ruleml:Var>
              <ruleml:Var key=":eau">eau</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:consent" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A500">
              <ruleml:Rel iri="prOnto:hasConsented" />
              <ruleml:Var keyref=":ehc" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A501">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":eau" />
              <ruleml:Var keyref=":epu" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":ena6" />
              <ruleml:Var key=":ewa6">ewa6</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A502">
              <ruleml:Rel iri="prOnto:awareOf" />
              <ruleml:Var keyref=":ewa6" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var key=":ea6">ea6</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A503">
              <ruleml:Rel iri="prOnto:ableTo" />
              <ruleml:Var keyref=":ea6" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var key=":elt">elt</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A504">
              <ruleml:Rel iri="prOnto:Transmit" />
              <ruleml:Var keyref=":elt" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":a2">a2</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:and" />
                <ruleml:Var keyref=":a2" />
                <ruleml:Var key=":en1">en1</ruleml:Var>
                <ruleml:Var key=":en2">en2</ruleml:Var>
                <ruleml:Var key=":en3">en3</ruleml:Var>
                <ruleml:Var key=":en4">en4</ruleml:Var>
                <ruleml:Var key=":en5">en5</ruleml:Var>
                <ruleml:Var key=":en6">en6</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A505">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en1" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":ea1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A506">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en2" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":ea2" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A507">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en3" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":ea3" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A508">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en4" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":ea4" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A509">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en5" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":ea5" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A510">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en6" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":ea6" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements47">
    <lrml:PrescriptiveStatement key="statements47Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :es :ena :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:Purpose :epu) & (prOnto:isBasedOn :ep :epu)
	 & (prOnto:PersonalDataRecord :p) & (prOnto:storedIn' :es :z :p) & (rioOnto:not :ena :ewa)
	 & (prOnto:awareOf' :ewa :z :ea) & (prOnto:ableTo' :ea :w :ew) & (prOnto:withdrawConsentFrom' :ew :w :epu),

	(rioOnto:RexistAtTime :en :t1) & (prOnto:Communicate' :en :y :w :ea)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":es">es</ruleml:Var>
              <ruleml:Var key=":ena">ena</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A511">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A512">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Purpose" />
              <ruleml:Var key=":epu">epu</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isBasedOn" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":epu" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalDataRecord" />
              <ruleml:Var key=":p">p</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A513">
              <ruleml:Rel iri="prOnto:storedIn" />
              <ruleml:Var keyref=":es" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":p" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":ena" />
              <ruleml:Var key=":ewa">ewa</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A514">
              <ruleml:Rel iri="prOnto:awareOf" />
              <ruleml:Var keyref=":ewa" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var key=":ea">ea</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A515">
              <ruleml:Rel iri="prOnto:ableTo" />
              <ruleml:Var keyref=":ea" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var key=":ew">ew</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A516">
              <ruleml:Rel iri="prOnto:withdrawConsentFrom" />
              <ruleml:Var keyref=":ew" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":epu" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":en">en</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A517">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":ea" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements48">
    <lrml:PrescriptiveStatement key="statements48Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :es :ena :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:PersonalDataRecord :p) & (prOnto:storedIn' :es :z :p)
	 & (rioOnto:not :ena :ewa) & (prOnto:awareOf' :ewa :z :ea) & (prOnto:ableTo' :ea :w :el)
	 & (prOnto:lodge' :el :w :c prOnto:supAuth(prOnto:MSof(:y))) & (prOnto:complaint :c),

	(rioOnto:RexistAtTime :en :t1) & (prOnto:Communicate' :en :y :w :ea)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":es">es</ruleml:Var>
              <ruleml:Var key=":ena">ena</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A518">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A519">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalDataRecord" />
              <ruleml:Var key=":p">p</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A520">
              <ruleml:Rel iri="prOnto:storedIn" />
              <ruleml:Var keyref=":es" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":p" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":ena" />
              <ruleml:Var key=":ewa">ewa</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A521">
              <ruleml:Rel iri="prOnto:awareOf" />
              <ruleml:Var keyref=":ewa" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var key=":ea">ea</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A522">
              <ruleml:Rel iri="prOnto:ableTo" />
              <ruleml:Var keyref=":ea" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var key=":el">el</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A523">
              <ruleml:Rel iri="prOnto:lodge" />
              <ruleml:Var keyref=":el" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var key=":c">c</ruleml:Var>
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:supAuth" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:MSof" />
                  <ruleml:Var keyref=":y" />
                </ruleml:Expr>
              </ruleml:Expr>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:complaint" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":en">en</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A524">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":ea" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements49">
    <lrml:PrescriptiveStatement key="statements49Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :es :eob :ena1 :ena2 :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:PersonalDataRecord :p) & (prOnto:storedIn' :es :z :p)
	 & (rioOnto:or :eor1 :ei1 :ei2 :eob) & (prOnto:contract :c) & (prOnto:requestToEnter' :er :w :c)
	 & (rioOnto:imply :ei1 :c :es) & (rioOnto:imply :ei2 :er :es) & (rioOnto:Obliged' :eob :w :es :t1)
	 & (rioOnto:not :en :es) & (rioOnto:cause :en :eca),

	(rioOnto:RexistAtTime :a2 :t1) & (rioOnto:and :a2 :eor2 :en4) & (rioOnto:or :eor2 :eor2 :en1 :en2 :en3) & (prOnto:Communicate' :en1 :y :w :ei1)
	 & (prOnto:Communicate' :en2 :y :w :ei2) & (prOnto:Communicate' :en3 :y :w :eob) & (prOnto:Communicate' :en3 :y :w :eca)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":es">es</ruleml:Var>
              <ruleml:Var key=":eob">eob</ruleml:Var>
              <ruleml:Var key=":ena1">ena1</ruleml:Var>
              <ruleml:Var key=":ena2">ena2</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A525">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A526">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalDataRecord" />
              <ruleml:Var key=":p">p</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A527">
              <ruleml:Rel iri="prOnto:storedIn" />
              <ruleml:Var keyref=":es" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":p" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eor1" />
              <ruleml:Var key=":ei1">ei1</ruleml:Var>
              <ruleml:Var key=":ei2">ei2</ruleml:Var>
              <ruleml:Var key=":eob">eob</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:contract" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A528">
              <ruleml:Rel iri="prOnto:requestToEnter" />
              <ruleml:Var key=":er">er</ruleml:Var>
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:imply" />
              <ruleml:Var keyref=":ei1" />
              <ruleml:Var keyref=":c" />
              <ruleml:Var keyref=":es" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:imply" />
              <ruleml:Var keyref=":ei2" />
              <ruleml:Var keyref=":er" />
              <ruleml:Var keyref=":es" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A529">
              <ruleml:Rel iri="rioOnto:Obliged" />
              <ruleml:Var keyref=":eob" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":es" />
              <ruleml:Var keyref=":t1" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var key=":en">en</ruleml:Var>
              <ruleml:Var keyref=":es" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:cause" />
              <ruleml:Var keyref=":en" />
              <ruleml:Var key=":eca">eca</ruleml:Var>
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":a2">a2</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:and" />
                <ruleml:Var keyref=":a2" />
                <ruleml:Var key=":eor2">eor2</ruleml:Var>
                <ruleml:Var key=":en4">en4</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:or" />
                <ruleml:Var keyref=":eor2" />
                <ruleml:Var key=":eor2">eor2</ruleml:Var>
                <ruleml:Var key=":en1">en1</ruleml:Var>
                <ruleml:Var key=":en2">en2</ruleml:Var>
                <ruleml:Var key=":en3">en3</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A530">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en1" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":ei1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A531">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en2" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":ei2" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A532">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en3" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":eob" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A533">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en3" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":eca" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements50">
    <lrml:PrescriptiveStatement key="statements50Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :es :ena1 :ena2 :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:PersonalDataRecord :p) & (prOnto:storedIn' :es :z :p)
	 & (prOnto:relatedTo :ep :em) & (prOnto:implement' :ei :y :em) & (prOnto:automatedDecisionMaking :em)
	 & (rioOnto:not :ena1 :ewa1) & (prOnto:awareOf' :ewa1 :z :ei) & (rioOnto:not :ena2 :ewa2)
	 & (prOnto:awareOf' :ewa2 :z :d) & (prOnto:documentationOf :em :d),

	(rioOnto:RexistAtTime :a2 :t1) & (rioOnto:and :a2 :en1 :en2) & (prOnto:Communicate' :en1 :y :w :ei) & (prOnto:Communicate' :en2 :y :w :d)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":es">es</ruleml:Var>
              <ruleml:Var key=":ena1">ena1</ruleml:Var>
              <ruleml:Var key=":ena2">ena2</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A534">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A535">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalDataRecord" />
              <ruleml:Var key=":p">p</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A536">
              <ruleml:Rel iri="prOnto:storedIn" />
              <ruleml:Var keyref=":es" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":p" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:relatedTo" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var key=":em">ei</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A537">
              <ruleml:Rel iri="prOnto:implement" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":em">em</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:automatedDecisionMaking" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":ena1" />
              <ruleml:Var key=":ewa1">ewa1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A538">
              <ruleml:Rel iri="prOnto:awareOf" />
              <ruleml:Var keyref=":ewa1" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":ei" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":ena2" />
              <ruleml:Var key=":ewa2">ewa2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A539">
              <ruleml:Rel iri="prOnto:awareOf" />
              <ruleml:Var keyref=":ewa2" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var key=":d">d</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:documentationOf" />
              <ruleml:Var keyref=":em" />
              <ruleml:Var keyref=":d" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":a2">a2</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:and" />
                <ruleml:Var keyref=":a2" />
                <ruleml:Var key=":en1">en1</ruleml:Var>
                <ruleml:Var key=":en2">en2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A540">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en1" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":ei" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A541">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en2" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":d" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements51">
    <lrml:PrescriptiveStatement key="statements51Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :es :ena :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep1 :x :z) & (prOnto:PersonalDataRecord :p) & (prOnto:storedIn' :es :z :p)
	 & (rioOnto:RexistAtTime :ep2 :t2) & (rioOnto:>= :t2 :t1) & (prOnto:PersonalDataProcessing' :ep2 :x :z)
	 & (rioOnto:not :ena :ewa) & (prOnto:awareOf' :ewa :z :ep2),

	(rioOnto:RexistAtTime :en :t1) & (prOnto:Communicate' :en :y :w :epu2)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":es">es</ruleml:Var>
              <ruleml:Var key=":ena">ena</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A542">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A543">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var key=":ep1">ep1</ruleml:Var>
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalDataRecord" />
              <ruleml:Var key=":p">p</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A544">
              <ruleml:Rel iri="prOnto:storedIn" />
              <ruleml:Var keyref=":es" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":p" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":ep2">ep2</ruleml:Var>
              <ruleml:Var key=":t2">t2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:&gt;=" />
              <ruleml:Var keyref=":t2" />
              <ruleml:Var keyref=":t1" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A545">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep2" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":ena" />
              <ruleml:Var key=":ewa">ewa</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A546">
              <ruleml:Rel iri="prOnto:awareOf" />
              <ruleml:Var keyref=":ewa" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":ep2" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":en">en</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A547">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":epu2" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements52">
    <lrml:PrescriptiveStatement key="statements52Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :es :ena :enr :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:PersonalDataRecord :p) & (prOnto:storedIn' :es :z :p)
	 & (rioOnto:not :ena :ewa) & (prOnto:awareOf' :ewa :z prOnto:contactDetails(:y)) & (rioOnto:not :enr :erf)
	 & (prOnto:receiveFrom' :erf :y :z :w) & (rioOnto:exceptionCha3Sec2Art14Par5Point2 :es) & (rioOnto:exceptionCha3Sec2Art14Par5Point3 :es)
	 & (rioOnto:exceptionCha3Sec2Art14Par5Point4 :es),

	(rioOnto:RexistAtTime :en :t2) & (rioOnto:>= :t1 :t2) & (prOnto:Communicate' :en :y :w prOnto:contactDetails(:y))
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":es">es</ruleml:Var>
              <ruleml:Var key=":ena">ena</ruleml:Var>
              <ruleml:Var key=":enr">enr</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A548">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A549">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalDataRecord" />
              <ruleml:Var key=":p">p</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A550">
              <ruleml:Rel iri="prOnto:storedIn" />
              <ruleml:Var keyref=":es" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":p" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":ena" />
              <ruleml:Var key=":ewa">ewa</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A551">
              <ruleml:Rel iri="prOnto:awareOf" />
              <ruleml:Var keyref=":ewa" />
              <ruleml:Var keyref=":z" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:contactDetails" />
                <ruleml:Var keyref=":y" />
              </ruleml:Expr>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":enr" />
              <ruleml:Var key=":erf">erf</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A552">
              <ruleml:Rel iri="prOnto:receiveFrom" />
              <ruleml:Var keyref=":erf" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec2Art14Par5Point2" />
                <ruleml:Var keyref=":es" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec2Art14Par5Point3" />
                <ruleml:Var keyref=":es" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec2Art14Par5Point4" />
                <ruleml:Var keyref=":es" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":en">en</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t1" />
                <ruleml:Var keyref=":t2" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A553">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:contactDetails" />
                  <ruleml:Var keyref=":y" />
                </ruleml:Expr>
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements52Formula2">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :er :erb :es :ena :enr :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:isRepresentedBy :erb :y :k) & (prOnto:Representative :k)
	 & (prOnto:responsibleFor' :er :k :ec) & (prOnto:PersonalDataRecord :p) & (prOnto:storedIn' :es :z :p)
	 & (rioOnto:not :ena :ewa) & (prOnto:awareOf' :ewa :z prOnto:contactDetails(:k)) & (rioOnto:not :enr :erf)
	 & (prOnto:receiveFrom' :erf :y :z :w) & (rioOnto:exceptionCha3Sec2Art14Par5Point2 :es) & (rioOnto:exceptionCha3Sec2Art14Par5Point3 :es)
	 & (rioOnto:exceptionCha3Sec2Art14Par5Point4 :es),

	(rioOnto:RexistAtTime :en :t2) & (rioOnto:>= :t1 :t2) & (prOnto:Communicate' :en :y :w prOnto:contactDetails(:k))
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":er">er</ruleml:Var>
              <ruleml:Var key=":erb">erb</ruleml:Var>
              <ruleml:Var key=":es">es</ruleml:Var>
              <ruleml:Var key=":ena">ena</ruleml:Var>
              <ruleml:Var key=":enr">enr</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A554">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A555">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isRepresentedBy" />
              <ruleml:Var keyref=":erb" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Representative" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A556">
              <ruleml:Rel iri="prOnto:responsibleFor" />
              <ruleml:Var keyref=":er" />
              <ruleml:Var keyref=":k" />
              <ruleml:Var keyref=":ec" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalDataRecord" />
              <ruleml:Var key=":p">p</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A557">
              <ruleml:Rel iri="prOnto:storedIn" />
              <ruleml:Var keyref=":es" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":p" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":ena" />
              <ruleml:Var key=":ewa">ewa</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A558">
              <ruleml:Rel iri="prOnto:awareOf" />
              <ruleml:Var keyref=":ewa" />
              <ruleml:Var keyref=":z" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:contactDetails" />
                <ruleml:Var keyref=":k" />
              </ruleml:Expr>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":enr" />
              <ruleml:Var key=":erf">erf</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A559">
              <ruleml:Rel iri="prOnto:receiveFrom" />
              <ruleml:Var keyref=":erf" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec2Art14Par5Point2" />
                <ruleml:Var keyref=":es" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec2Art14Par5Point3" />
                <ruleml:Var keyref=":es" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec2Art14Par5Point4" />
                <ruleml:Var keyref=":es" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":en">en</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t1" />
                <ruleml:Var keyref=":t2" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A560">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:contactDetails" />
                  <ruleml:Var keyref=":k" />
                </ruleml:Expr>
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements53">
    <lrml:PrescriptiveStatement key="statements53Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :es :ena :enr :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:DPO :k) & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:PersonalDataRecord :p)
	 & (prOnto:storedIn' :es :z :p) & (rioOnto:not :ena :ewa) & (prOnto:awareOf' :ewa :z prOnto:contactDetails(:k))
	 & (rioOnto:not :enr :erf) & (prOnto:receiveFrom' :erf :y :z :w) & (rioOnto:exceptionCha3Sec2Art14Par5Point2 :es)
	 & (rioOnto:exceptionCha3Sec2Art14Par5Point3 :es) & (rioOnto:exceptionCha3Sec2Art14Par5Point4 :es),

	(rioOnto:RexistAtTime :en :t2) & (rioOnto:>= :t2 :t1) & (prOnto:Communicate' :en :y :w prOnto:contactDetails(:k))
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":es">es</ruleml:Var>
              <ruleml:Var key=":ena">ena</ruleml:Var>
              <ruleml:Var key=":enr">enr</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A561">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DPO" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A562">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalDataRecord" />
              <ruleml:Var key=":p">p</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A563">
              <ruleml:Rel iri="prOnto:storedIn" />
              <ruleml:Var keyref=":es" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":p" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":ena" />
              <ruleml:Var key=":ewa">ewa</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A564">
              <ruleml:Rel iri="prOnto:awareOf" />
              <ruleml:Var keyref=":ewa" />
              <ruleml:Var keyref=":z" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:contactDetails" />
                <ruleml:Var keyref=":k" />
              </ruleml:Expr>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":enr" />
              <ruleml:Var key=":erf">erf</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A565">
              <ruleml:Rel iri="prOnto:receiveFrom" />
              <ruleml:Var keyref=":erf" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec2Art14Par5Point2" />
                <ruleml:Var keyref=":es" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec2Art14Par5Point3" />
                <ruleml:Var keyref=":es" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec2Art14Par5Point4" />
                <ruleml:Var keyref=":es" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":en">en</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A566">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:contactDetails" />
                  <ruleml:Var keyref=":k" />
                </ruleml:Expr>
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements54">
    <lrml:PrescriptiveStatement key="statements54Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :es :ena1 :ena2 :enr :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:Purpose :epu) & (prOnto:isBasedOn :ep :epu)
	 & (prOnto:legalBasisOf :elb :ep) & (prOnto:PersonalDataRecord :p) & (prOnto:storedIn' :es :z :p)
	 & (rioOnto:not :ena1 :ewa1) & (prOnto:awareOf' :ewa1 :z :epu) & (rioOnto:not :ena2 :ewa2)
	 & (prOnto:awareOf' :ewa2 :z :elb) & (rioOnto:not :enr :erf) & (prOnto:receiveFrom' :erf :y :z :w)
	 & (rioOnto:exceptionCha3Sec2Art14Par5Point2 :es) & (rioOnto:exceptionCha3Sec2Art14Par5Point3 :es) & (rioOnto:exceptionCha3Sec2Art14Par5Point4 :es),

	(rioOnto:RexistAtTime :a2 :t2) & (rioOnto:>= :t2 :t1) & (rioOnto:and :a2 :en1 :en2) & (prOnto:Communicate' :en1 :y :w :epu)
	 & (prOnto:Communicate' :en2 :y :w :elb)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":es">es</ruleml:Var>
              <ruleml:Var key=":ena1">ena1</ruleml:Var>
              <ruleml:Var key=":ena2">ena2</ruleml:Var>
              <ruleml:Var key=":enr">enr</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A567">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A568">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Purpose" />
              <ruleml:Var key=":epu">epu</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isBasedOn" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":epu" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:legalBasisOf" />
              <ruleml:Var key=":elb">elb</ruleml:Var>
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalDataRecord" />
              <ruleml:Var key=":p">p</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A569">
              <ruleml:Rel iri="prOnto:storedIn" />
              <ruleml:Var keyref=":es" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":p" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":ena1" />
              <ruleml:Var key=":ewa1">ewa1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A570">
              <ruleml:Rel iri="prOnto:awareOf" />
              <ruleml:Var keyref=":ewa1" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":epu" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":ena2" />
              <ruleml:Var key=":ewa2">ewa2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A571">
              <ruleml:Rel iri="prOnto:awareOf" />
              <ruleml:Var keyref=":ewa2" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":elb" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":enr" />
              <ruleml:Var key=":erf">erf</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A572">
              <ruleml:Rel iri="prOnto:receiveFrom" />
              <ruleml:Var keyref=":erf" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec2Art14Par5Point2" />
                <ruleml:Var keyref=":es" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec2Art14Par5Point3" />
                <ruleml:Var keyref=":es" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec2Art14Par5Point4" />
                <ruleml:Var keyref=":es" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":a2">a2</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:and" />
                <ruleml:Var keyref=":a2" />
                <ruleml:Var key=":en1">en1</ruleml:Var>
                <ruleml:Var key=":en2">en2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A573">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en1" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":epu" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A574">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en2" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":elb" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements55">
    <lrml:PrescriptiveStatement key="statements55Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :eor :es :ena1 :ena2 :enr :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:categoryOf :p :z) & (prOnto:PersonalDataRecord :p)
	 & (prOnto:storedIn' :es :z :p) & (rioOnto:not :ena1 :ewa1) & (prOnto:awareOf' :ewa1 :z :r)
	 & (rioOnto:not :ena2 :ewa2) & (prOnto:awareOf' :ewa2 :z :c) & (rioOnto:not :enr :erf)
	 & (prOnto:receiveFrom' :erf :y :z :w) & (rioOnto:exceptionCha3Sec2Art14Par5Point2 :es) & (rioOnto:exceptionCha3Sec2Art14Par5Point3 :es)
	 & (rioOnto:exceptionCha3Sec2Art14Par5Point4 :es),

	(rioOnto:RexistAtTime :en :t2) & (rioOnto:>= :t2 :t1) & (prOnto:Communicate' :en :y :w :c)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":eor">eor</ruleml:Var>
              <ruleml:Var key=":es">es</ruleml:Var>
              <ruleml:Var key=":ena1">ena1</ruleml:Var>
              <ruleml:Var key=":ena2">ena2</ruleml:Var>
              <ruleml:Var key=":enr">enr</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A575">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A576">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:categoryOf" />
              <ruleml:Var key=":p">c</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalDataRecord" />
              <ruleml:Var key=":p">p</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A577">
              <ruleml:Rel iri="prOnto:storedIn" />
              <ruleml:Var keyref=":es" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":p" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":ena1" />
              <ruleml:Var key=":ewa1">ewa1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A578">
              <ruleml:Rel iri="prOnto:awareOf" />
              <ruleml:Var keyref=":ewa1" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":r" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":ena2" />
              <ruleml:Var key=":ewa2">ewa2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A579">
              <ruleml:Rel iri="prOnto:awareOf" />
              <ruleml:Var keyref=":ewa2" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":enr" />
              <ruleml:Var key=":erf">erf</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A580">
              <ruleml:Rel iri="prOnto:receiveFrom" />
              <ruleml:Var keyref=":erf" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec2Art14Par5Point2" />
                <ruleml:Var keyref=":es" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec2Art14Par5Point3" />
                <ruleml:Var keyref=":es" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec2Art14Par5Point4" />
                <ruleml:Var keyref=":es" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":en">en</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A581">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":c" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements56">
    <lrml:PrescriptiveStatement key="statements56Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :eor :es :ena1 :ena2 :enr :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:recipientOf :r :z) & (prOnto:categoryOf :p :r)
	 & (prOnto:PersonalDataRecord :p) & (prOnto:storedIn' :es :z :p) & (rioOnto:not :ena1 :ewa1)
	 & (prOnto:awareOf' :ewa1 :z :r) & (rioOnto:not :ena2 :ewa2) & (prOnto:awareOf' :ewa2 :z :c)
	 & (rioOnto:not :enr :erf) & (prOnto:receiveFrom' :erf :y :z :w) & (rioOnto:exceptionCha3Sec2Art14Par5Point2 :es)
	 & (rioOnto:exceptionCha3Sec2Art14Par5Point3 :es) & (rioOnto:exceptionCha3Sec2Art14Par5Point4 :es),

	(rioOnto:RexistAtTime :o2 :t2) & (rioOnto:>= :t2 :t1) & (rioOnto:or :o2 :en1 :en2) & (prOnto:Communicate' :en1 :y :w :r)
	 & (prOnto:Communicate' :en2 :y :w :c)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":eor">eor</ruleml:Var>
              <ruleml:Var key=":es">es</ruleml:Var>
              <ruleml:Var key=":ena1">ena1</ruleml:Var>
              <ruleml:Var key=":ena2">ena2</ruleml:Var>
              <ruleml:Var key=":enr">enr</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A582">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A583">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:recipientOf" />
              <ruleml:Var key=":r">r</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:categoryOf" />
              <ruleml:Var key=":p">c</ruleml:Var>
              <ruleml:Var keyref=":r" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalDataRecord" />
              <ruleml:Var key=":p">p</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A584">
              <ruleml:Rel iri="prOnto:storedIn" />
              <ruleml:Var keyref=":es" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":p" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":ena1" />
              <ruleml:Var key=":ewa1">ewa1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A585">
              <ruleml:Rel iri="prOnto:awareOf" />
              <ruleml:Var keyref=":ewa1" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":r" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":ena2" />
              <ruleml:Var key=":ewa2">ewa2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A586">
              <ruleml:Rel iri="prOnto:awareOf" />
              <ruleml:Var keyref=":ewa2" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":enr" />
              <ruleml:Var key=":erf">erf</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A587">
              <ruleml:Rel iri="prOnto:receiveFrom" />
              <ruleml:Var keyref=":erf" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec2Art14Par5Point2" />
                <ruleml:Var keyref=":es" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec2Art14Par5Point3" />
                <ruleml:Var keyref=":es" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec2Art14Par5Point4" />
                <ruleml:Var keyref=":es" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":o2">o2</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:or" />
                <ruleml:Var keyref=":o2" />
                <ruleml:Var key=":en1">en1</ruleml:Var>
                <ruleml:Var key=":en2">en2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A588">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en1" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":r" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A589">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en2" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":c" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements57">
    <lrml:PrescriptiveStatement key="statements57Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :es :ena1 :ena2 :ena3 :enr :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (rioOnto:RexistAtTime :a2 :t2) & (rioOnto:>= :t2 :t1)
	 & (rioOnto:and :a2 :et :o1 :o2) & (prOnto:Transmit' :et :x :z :k) & (rioOnto:or :o1 :eio :etc)
	 & (prOnto:internationalOrganization' :eio :k) & (prOnto:thirdCountry' :etc :k) & (rioOnto:or :o2 :ea :ena)
	 & (rioOnto:not :ena :ea) & (prOnto:authorizedBy' :ea :et EuropeanUnion) & (prOnto:PersonalDataRecord :p)
	 & (prOnto:storedIn :es :z :p) & (rioOnto:not :ena1 :ewa1) & (prOnto:awareOf' :ewa1 :z :et)
	 & (rioOnto:not :ena2 :ewa2) & (prOnto:awareOf' :ewa2 :z :ea) & (rioOnto:not :ena3 :ewa3)
	 & (prOnto:awareOf' :ewa3 :z :ena) & (rioOnto:not :enr :erf) & (prOnto:receiveFrom' :erf :y :z :w)
	 & (rioOnto:exceptionCha3Sec2Art14Par5Point2 :es) & (rioOnto:exceptionCha3Sec2Art14Par5Point3 :es) & (rioOnto:exceptionCha3Sec2Art14Par5Point4 :es),

	(rioOnto:RexistAtTime :a3 :t2) & (rioOnto:>= :t2 :t1) & (rioOnto:and :a3 :en1 :o3) & (prOnto:Communicate' :en1 :y :w :et)
	 & (rioOnto:or :o3 :en2 :en3) & (prOnto:Communicate' :en2 :y :w :ea) & (prOnto:Communicate' :en3 :y :w :ena)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":es">es</ruleml:Var>
              <ruleml:Var key=":ena1">ena1</ruleml:Var>
              <ruleml:Var key=":ena2">ena2</ruleml:Var>
              <ruleml:Var key=":ena3">ena3</ruleml:Var>
              <ruleml:Var key=":enr">enr</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A590">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A591">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a2">a2</ruleml:Var>
              <ruleml:Var key=":t2">t2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:&gt;=" />
              <ruleml:Var keyref=":t2" />
              <ruleml:Var keyref=":t1" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a2" />
              <ruleml:Var key=":et">et</ruleml:Var>
              <ruleml:Var key=":o1">o1</ruleml:Var>
              <ruleml:Var key=":o2">o2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A592">
              <ruleml:Rel iri="prOnto:Transmit" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":o1" />
              <ruleml:Var key=":eio">eio</ruleml:Var>
              <ruleml:Var key=":etc">etc</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A593">
              <ruleml:Rel iri="prOnto:internationalOrganization" />
              <ruleml:Var keyref=":eio" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A594">
              <ruleml:Rel iri="prOnto:thirdCountry" />
              <ruleml:Var keyref=":etc" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":o2" />
              <ruleml:Var key=":ea">ea</ruleml:Var>
              <ruleml:Var key=":ena">ena</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":ena" />
              <ruleml:Var keyref=":ea" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A595">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":ea" />
              <ruleml:Var keyref=":et" />
              <ruleml:Ind>EuropeanUnion</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalDataRecord" />
              <ruleml:Var key=":p">p</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:storedIn" />
              <ruleml:Var keyref=":es" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":p" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":ena1" />
              <ruleml:Var key=":ewa1">ewa1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A596">
              <ruleml:Rel iri="prOnto:awareOf" />
              <ruleml:Var keyref=":ewa1" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":et" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":ena2" />
              <ruleml:Var key=":ewa2">ewa2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A597">
              <ruleml:Rel iri="prOnto:awareOf" />
              <ruleml:Var keyref=":ewa2" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":ea" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":ena3" />
              <ruleml:Var key=":ewa3">ewa3</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A598">
              <ruleml:Rel iri="prOnto:awareOf" />
              <ruleml:Var keyref=":ewa3" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":ena" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":enr" />
              <ruleml:Var key=":erf">erf</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A599">
              <ruleml:Rel iri="prOnto:receiveFrom" />
              <ruleml:Var keyref=":erf" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec2Art14Par5Point2" />
                <ruleml:Var keyref=":es" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec2Art14Par5Point3" />
                <ruleml:Var keyref=":es" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec2Art14Par5Point4" />
                <ruleml:Var keyref=":es" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":a3">a3</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:and" />
                <ruleml:Var keyref=":a3" />
                <ruleml:Var key=":en1">en1</ruleml:Var>
                <ruleml:Var key=":o3">o3</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A600">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en1" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":et" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:or" />
                <ruleml:Var keyref=":o3" />
                <ruleml:Var key=":en2">en2</ruleml:Var>
                <ruleml:Var key=":en3">en3</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A601">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en2" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":ea" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A602">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en3" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":ena" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements57Formula2">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :ei1 :ei2 :ef :es :ena1 :ena2 :ena3 :ena4 :enr :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (rioOnto:RexistAtTime :a2 :t2) & (rioOnto:>= :t2 :t1)
	 & (rioOnto:and :a2 :et :o1 :ena) & (prOnto:Transmit' :et :x :z :k) & (rioOnto:or :o1 :eio :etc)
	 & (prOnto:internationalOrganization' :eio :k) & (prOnto:thirdCountry' :etc :k) & (rioOnto:not :ena :ea)
	 & (prOnto:authorizedBy' :ea :et EuropeanUnion) & (prOnto:measure :em1) & (prOnto:implement' :ei1 :y :em1)
	 & (prOnto:appropriate :em1) & (prOnto:measure :em2) & (prOnto:implement' :ei2 :y :em2)
	 & (prOnto:enforce' :ef :em2 :erf) & (prOnto:rightsAndFreedomsOf' :erf :w) & (prOnto:PersonalDataRecord :p)
	 & (prOnto:storedIn :es :z :p) & (rioOnto:not :ena1 :ewa1) & (prOnto:awareOf' :ewa1 :z :ei1)
	 & (rioOnto:not :ena2 :ewa2) & (prOnto:awareOf' :ewa2 :z :ei2) & (rioOnto:not :ena3 :ewa3)
	 & (prOnto:awareOf' :ewa3 :z :d1) & (rioOnto:not :ena4 :ewa4) & (prOnto:awareOf' :ewa4 :z :d2)
	 & (rioOnto:not :enr :erf) & (prOnto:receiveFrom' :erf :y :z :w) & (rioOnto:exceptionCha3Sec2Art14Par5Point2 :es)
	 & (rioOnto:exceptionCha3Sec2Art14Par5Point3 :es) & (rioOnto:exceptionCha3Sec2Art14Par5Point4 :es),

	(rioOnto:RexistAtTime :a3 :t2) & (rioOnto:>= :t2 :t1) & (rioOnto:and :a3 :en1 :en2 :en3 :en4) & (prOnto:Communicate' :en1 :y :w :ei1)
	 & (prOnto:Communicate' :en2 :y :w :ei2) & (prOnto:Communicate' :en3 :y :w :d1) & (prOnto:Communicate' :en4 :y :w :d2)
	 & (prOnto:documentationOf :d1 :ei1) & (prOnto:documentationOf :d2 :ei2)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":ei1">ei1</ruleml:Var>
              <ruleml:Var key=":ei2">ei2</ruleml:Var>
              <ruleml:Var key=":ef">ef</ruleml:Var>
              <ruleml:Var key=":es">es</ruleml:Var>
              <ruleml:Var key=":ena1">ena1</ruleml:Var>
              <ruleml:Var key=":ena2">ena2</ruleml:Var>
              <ruleml:Var key=":ena3">ena3</ruleml:Var>
              <ruleml:Var key=":ena4">ena4</ruleml:Var>
              <ruleml:Var key=":enr">enr</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A603">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A604">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a2">a2</ruleml:Var>
              <ruleml:Var key=":t2">t2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:&gt;=" />
              <ruleml:Var keyref=":t2" />
              <ruleml:Var keyref=":t1" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a2" />
              <ruleml:Var key=":et">et</ruleml:Var>
              <ruleml:Var key=":o1">o1</ruleml:Var>
              <ruleml:Var key=":ena">ena</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A605">
              <ruleml:Rel iri="prOnto:Transmit" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":o1" />
              <ruleml:Var key=":eio">eio</ruleml:Var>
              <ruleml:Var key=":etc">etc</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A606">
              <ruleml:Rel iri="prOnto:internationalOrganization" />
              <ruleml:Var keyref=":eio" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A607">
              <ruleml:Rel iri="prOnto:thirdCountry" />
              <ruleml:Var keyref=":etc" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":ena" />
              <ruleml:Var keyref=":ea" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A608">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":ea" />
              <ruleml:Var keyref=":et" />
              <ruleml:Ind>EuropeanUnion</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:measure" />
              <ruleml:Var key=":em1">em1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A609">
              <ruleml:Rel iri="prOnto:implement" />
              <ruleml:Var keyref=":ei1" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":em1" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:appropriate" />
              <ruleml:Var keyref=":em1" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:measure" />
              <ruleml:Var key=":em2">em2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A610">
              <ruleml:Rel iri="prOnto:implement" />
              <ruleml:Var keyref=":ei2" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":em2" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A611">
              <ruleml:Rel iri="prOnto:enforce" />
              <ruleml:Var keyref=":ef" />
              <ruleml:Var keyref=":em2" />
              <ruleml:Var key=":erf">erf</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A612">
              <ruleml:Rel iri="prOnto:rightsAndFreedomsOf" />
              <ruleml:Var keyref=":erf" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalDataRecord" />
              <ruleml:Var key=":p">p</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:storedIn" />
              <ruleml:Var keyref=":es" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":p" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":ena1" />
              <ruleml:Var key=":ewa1">ewa1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A613">
              <ruleml:Rel iri="prOnto:awareOf" />
              <ruleml:Var keyref=":ewa1" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":ei1" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":ena2" />
              <ruleml:Var key=":ewa2">ewa2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A614">
              <ruleml:Rel iri="prOnto:awareOf" />
              <ruleml:Var keyref=":ewa2" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":ei2" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":ena3" />
              <ruleml:Var key=":ewa3">ewa3</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A615">
              <ruleml:Rel iri="prOnto:awareOf" />
              <ruleml:Var keyref=":ewa3" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":d1" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":ena4" />
              <ruleml:Var key=":ewa4">ewa4</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A616">
              <ruleml:Rel iri="prOnto:awareOf" />
              <ruleml:Var keyref=":ewa4" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":d2" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":enr" />
              <ruleml:Var key=":erf">erf</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A617">
              <ruleml:Rel iri="prOnto:receiveFrom" />
              <ruleml:Var keyref=":erf" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec2Art14Par5Point2" />
                <ruleml:Var keyref=":es" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec2Art14Par5Point3" />
                <ruleml:Var keyref=":es" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec2Art14Par5Point4" />
                <ruleml:Var keyref=":es" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":a3">a3</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:and" />
                <ruleml:Var keyref=":a3" />
                <ruleml:Var key=":en1">en1</ruleml:Var>
                <ruleml:Var key=":en2">en2</ruleml:Var>
                <ruleml:Var key=":en3">en3</ruleml:Var>
                <ruleml:Var key=":en4">en4</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A618">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en1" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":ei1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A619">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en2" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":ei2" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A620">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en3" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":d1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A621">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en4" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":d2" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:documentationOf" />
                <ruleml:Var key=":d1">d1</ruleml:Var>
                <ruleml:Var keyref=":ei1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:documentationOf" />
                <ruleml:Var key=":d2">d2</ruleml:Var>
                <ruleml:Var keyref=":ei2" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements58">
    <lrml:PrescriptiveStatement key="statements58Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :es :ena1 :ena2 :enr :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:PersonalDataRecord :p) & (prOnto:storedIn' :es :z :p)
	 & (rioOnto:not :ena1 :ewa1) & (prOnto:awareOf' :ewa1 :z :et1) & (rioOnto:timeOf :eti :es)
	 & (rioOnto:not :ena2 :ewa2) & (prOnto:awareOf' :ewa2 :z :ei) & (prOnto:implement' :ei :y :em)
	 & (prOnto:measure :em) & (rioOnto:cause :ei :eaw) & (prOnto:awareOf' :eaw :y :eti)
	 & (rioOnto:not :enr :erf) & (prOnto:receiveFrom' :erf :y :z :w) & (rioOnto:exceptionCha3Sec2Art14Par5Point2 :es)
	 & (rioOnto:exceptionCha3Sec2Art14Par5Point3 :es) & (rioOnto:exceptionCha3Sec2Art14Par5Point4 :es),

	(rioOnto:RexistAtTime :eo :t2) & (rioOnto:>= :t2 :t1) & (rioOnto:or :eo :en1 :en2) & (prOnto:Communicate' :en1 :y :w :eti)
	 & (prOnto:Communicate' :en2 :y :w :ei)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":es">es</ruleml:Var>
              <ruleml:Var key=":ena1">ena1</ruleml:Var>
              <ruleml:Var key=":ena2">ena2</ruleml:Var>
              <ruleml:Var key=":enr">enr</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A622">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A623">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalDataRecord" />
              <ruleml:Var key=":p">p</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A624">
              <ruleml:Rel iri="prOnto:storedIn" />
              <ruleml:Var keyref=":es" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":p" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":ena1" />
              <ruleml:Var key=":ewa1">ewa1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A625">
              <ruleml:Rel iri="prOnto:awareOf" />
              <ruleml:Var keyref=":ewa1" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var key=":et1">et1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:timeOf" />
              <ruleml:Var keyref=":eti" />
              <ruleml:Var keyref=":es" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":ena2" />
              <ruleml:Var key=":ewa2">ewa2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A626">
              <ruleml:Rel iri="prOnto:awareOf" />
              <ruleml:Var keyref=":ewa2" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var key=":ei">ei</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A627">
              <ruleml:Rel iri="prOnto:implement" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":em">em</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:measure" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:cause" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var key=":eaw">eaw</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A628">
              <ruleml:Rel iri="prOnto:awareOf" />
              <ruleml:Var keyref=":eaw" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":eti" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":enr" />
              <ruleml:Var key=":erf">erf</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A629">
              <ruleml:Rel iri="prOnto:receiveFrom" />
              <ruleml:Var keyref=":erf" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec2Art14Par5Point2" />
                <ruleml:Var keyref=":es" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec2Art14Par5Point3" />
                <ruleml:Var keyref=":es" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec2Art14Par5Point4" />
                <ruleml:Var keyref=":es" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":eo">eo</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:or" />
                <ruleml:Var keyref=":eo" />
                <ruleml:Var key=":en1">en1</ruleml:Var>
                <ruleml:Var key=":en2">en2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A630">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en1" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":eti" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A631">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en2" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":ei" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements59">
    <lrml:PrescriptiveStatement key="statements59Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :eor :es :ena1 :ena2 :enr :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:thirdParty :k) & (prOnto:PersonalDataProcessing' :ep :x :z) & (rioOnto:or :eor :ei1 :ei2)
	 & (prOnto:legitimateInterestOf' :ei1 :y) & (prOnto:legitimateInterestOf' :ei2 :k) & (prOnto:PersonalDataRecord :p)
	 & (prOnto:storedIn' :es :z :p) & (rioOnto:not :ena1 :ewa1) & (prOnto:awareOf' :ewa1 :z :ei1)
	 & (rioOnto:not :ena2 :ewa2) & (prOnto:awareOf' :ewa2 :z :ei2) & (rioOnto:not :enr :erf)
	 & (prOnto:receiveFrom' :erf :y :z :w) & (rioOnto:exceptionCha3Sec2Art14Par5Point2 :es) & (rioOnto:exceptionCha3Sec2Art14Par5Point3 :es)
	 & (rioOnto:exceptionCha3Sec2Art14Par5Point4 :es),

	(rioOnto:RexistAtTime :o2 :t2) & (rioOnto:>= :t2 :t1) & (rioOnto:or :o2 :en1 :en2) & (prOnto:Communicate' :en1 :y :w :ei1)
	 & (prOnto:Communicate' :en2 :y :w :ei2)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":eor">eor</ruleml:Var>
              <ruleml:Var key=":es">es</ruleml:Var>
              <ruleml:Var key=":ena1">ena1</ruleml:Var>
              <ruleml:Var key=":ena2">ena2</ruleml:Var>
              <ruleml:Var key=":enr">enr</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A632">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:thirdParty" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A633">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eor" />
              <ruleml:Var key=":ei1">ei1</ruleml:Var>
              <ruleml:Var key=":ei2">ei2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A634">
              <ruleml:Rel iri="prOnto:legitimateInterestOf" />
              <ruleml:Var keyref=":ei1" />
              <ruleml:Var keyref=":y" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A635">
              <ruleml:Rel iri="prOnto:legitimateInterestOf" />
              <ruleml:Var keyref=":ei2" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalDataRecord" />
              <ruleml:Var key=":p">p</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A636">
              <ruleml:Rel iri="prOnto:storedIn" />
              <ruleml:Var keyref=":es" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":p" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":ena1" />
              <ruleml:Var key=":ewa1">ewa1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A637">
              <ruleml:Rel iri="prOnto:awareOf" />
              <ruleml:Var keyref=":ewa1" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":ei1" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":ena2" />
              <ruleml:Var key=":ewa2">ewa2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A638">
              <ruleml:Rel iri="prOnto:awareOf" />
              <ruleml:Var keyref=":ewa2" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":ei2" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":enr" />
              <ruleml:Var key=":erf">erf</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A639">
              <ruleml:Rel iri="prOnto:receiveFrom" />
              <ruleml:Var keyref=":erf" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec2Art14Par5Point2" />
                <ruleml:Var keyref=":es" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec2Art14Par5Point3" />
                <ruleml:Var keyref=":es" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec2Art14Par5Point4" />
                <ruleml:Var keyref=":es" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":o2">o2</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:or" />
                <ruleml:Var keyref=":o2" />
                <ruleml:Var key=":en1">en1</ruleml:Var>
                <ruleml:Var key=":en2">en2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A640">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en1" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":ei1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A641">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en2" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":ei2" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements60">
    <lrml:PrescriptiveStatement key="statements60Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :es :ena1 :ena2 :ena3 :ena4 :ena5 :ena6 :enr :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :k :z) & (prOnto:Controller :y :z) & (prOnto:Processor :x)
	 & (prOnto:nominates' :edp :y :x) & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:PersonalDataRecord :p)
	 & (prOnto:storedIn' :es :z :p) & (rioOnto:not :ena1 :ewa1) & (prOnto:awareOf' :ewa1 :z :ea1)
	 & (prOnto:ableTo' :ea1 :w :eac) & (prOnto:access' :eac :w :z) & (rioOnto:not :ena2 :ewa2)
	 & (prOnto:awareOf' :ewa2 :z :ea2) & (prOnto:ableTo' :ea2 :w :ere) & (prOnto:rectify' :ere :w :z)
	 & (rioOnto:not :ena3 :ewa3) & (prOnto:awareOf' :ewa3 :z :ea3) & (prOnto:ableTo' :ea3 :w :era)
	 & (prOnto:erase' :era :w :z) & (rioOnto:not :ena4 :ewa4) & (prOnto:awareOf' :ewa4 :z :ea4)
	 & (prOnto:ableTo' :ea4 :w :eli) & (prOnto:limit' :eli :w :ep) & (rioOnto:not :ena5 :ewa5)
	 & (prOnto:awareOf' :ewa5 :z :ea5) & (prOnto:ableTo' :ea5 :w :eng) & (rioOnto:not :eng :a2)
	 & (rioOnto:and :a2 :ehc :eau) & (prOnto:consent :c) & (prOnto:hasConsented' :ehc :w :c)
	 & (prOnto:authorizedBy' :eau :epu :c) & (rioOnto:not :ena6 :ewa6) & (prOnto:awareOf' :ewa6 :z :ea6)
	 & (prOnto:ableTo' :ea6 :x :elt) & (prOnto:Transmit' :elt :x :z :k) & (rioOnto:not :enr :erf)
	 & (prOnto:receiveFrom' :erf :y :z :w) & (rioOnto:exceptionCha3Sec2Art14Par5Point2 :es) & (rioOnto:exceptionCha3Sec2Art14Par5Point3 :es)
	 & (rioOnto:exceptionCha3Sec2Art14Par5Point4 :es),

	(rioOnto:RexistAtTime :a2 :t2) & (rioOnto:>= :t2 :t1) & (rioOnto:and :a2 :en1 :en2 :en3 :en4 :en5 :en6) & (prOnto:Communicate' :en1 :y :w :ea1)
	 & (prOnto:Communicate' :en2 :y :w :ea2) & (prOnto:Communicate' :en3 :y :w :ea3) & (prOnto:Communicate' :en4 :y :w :ea4)
	 & (prOnto:Communicate' :en5 :y :w :ea5) & (prOnto:Communicate' :en6 :y :w :ea6)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":es">es</ruleml:Var>
              <ruleml:Var key=":ena1">ena1</ruleml:Var>
              <ruleml:Var key=":ena2">ena2</ruleml:Var>
              <ruleml:Var key=":ena3">ena3</ruleml:Var>
              <ruleml:Var key=":ena4">ena4</ruleml:Var>
              <ruleml:Var key=":ena5">ena5</ruleml:Var>
              <ruleml:Var key=":ena6">ena6</ruleml:Var>
              <ruleml:Var key=":enr">enr</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":k">k</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A642">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A643">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalDataRecord" />
              <ruleml:Var key=":p">p</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A644">
              <ruleml:Rel iri="prOnto:storedIn" />
              <ruleml:Var keyref=":es" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":p" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":ena1" />
              <ruleml:Var key=":ewa1">ewa1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A645">
              <ruleml:Rel iri="prOnto:awareOf" />
              <ruleml:Var keyref=":ewa1" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var key=":ea1">ea1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A646">
              <ruleml:Rel iri="prOnto:ableTo" />
              <ruleml:Var keyref=":ea1" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var key=":eac">eac</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A647">
              <ruleml:Rel iri="prOnto:access" />
              <ruleml:Var keyref=":eac" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":ena2" />
              <ruleml:Var key=":ewa2">ewa2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A648">
              <ruleml:Rel iri="prOnto:awareOf" />
              <ruleml:Var keyref=":ewa2" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var key=":ea2">ea2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A649">
              <ruleml:Rel iri="prOnto:ableTo" />
              <ruleml:Var keyref=":ea2" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var key=":ere">ere</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A650">
              <ruleml:Rel iri="prOnto:rectify" />
              <ruleml:Var keyref=":ere" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":ena3" />
              <ruleml:Var key=":ewa3">ewa3</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A651">
              <ruleml:Rel iri="prOnto:awareOf" />
              <ruleml:Var keyref=":ewa3" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var key=":ea3">ea3</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A652">
              <ruleml:Rel iri="prOnto:ableTo" />
              <ruleml:Var keyref=":ea3" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var key=":era">era</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A653">
              <ruleml:Rel iri="prOnto:erase" />
              <ruleml:Var keyref=":era" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":ena4" />
              <ruleml:Var key=":ewa4">ewa4</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A654">
              <ruleml:Rel iri="prOnto:awareOf" />
              <ruleml:Var keyref=":ewa4" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var key=":ea4">ea4</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A655">
              <ruleml:Rel iri="prOnto:ableTo" />
              <ruleml:Var keyref=":ea4" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var key=":eli">eli</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A656">
              <ruleml:Rel iri="prOnto:limit" />
              <ruleml:Var keyref=":eli" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":ena5" />
              <ruleml:Var key=":ewa5">ewa5</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A657">
              <ruleml:Rel iri="prOnto:awareOf" />
              <ruleml:Var keyref=":ewa5" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var key=":ea5">ea5</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A658">
              <ruleml:Rel iri="prOnto:ableTo" />
              <ruleml:Var keyref=":ea5" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var key=":eng">eng</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":eng" />
              <ruleml:Var key=":a2">a2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a2" />
              <ruleml:Var key=":ehc">ehc</ruleml:Var>
              <ruleml:Var key=":eau">eau</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:consent" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A659">
              <ruleml:Rel iri="prOnto:hasConsented" />
              <ruleml:Var keyref=":ehc" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A660">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":eau" />
              <ruleml:Var keyref=":epu" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":ena6" />
              <ruleml:Var key=":ewa6">ewa6</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A661">
              <ruleml:Rel iri="prOnto:awareOf" />
              <ruleml:Var keyref=":ewa6" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var key=":ea6">ea6</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A662">
              <ruleml:Rel iri="prOnto:ableTo" />
              <ruleml:Var keyref=":ea6" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var key=":elt">elt</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A663">
              <ruleml:Rel iri="prOnto:Transmit" />
              <ruleml:Var keyref=":elt" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":enr" />
              <ruleml:Var key=":erf">erf</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A664">
              <ruleml:Rel iri="prOnto:receiveFrom" />
              <ruleml:Var keyref=":erf" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec2Art14Par5Point2" />
                <ruleml:Var keyref=":es" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec2Art14Par5Point3" />
                <ruleml:Var keyref=":es" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec2Art14Par5Point4" />
                <ruleml:Var keyref=":es" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":a2">a2</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:and" />
                <ruleml:Var keyref=":a2" />
                <ruleml:Var key=":en1">en1</ruleml:Var>
                <ruleml:Var key=":en2">en2</ruleml:Var>
                <ruleml:Var key=":en3">en3</ruleml:Var>
                <ruleml:Var key=":en4">en4</ruleml:Var>
                <ruleml:Var key=":en5">en5</ruleml:Var>
                <ruleml:Var key=":en6">en6</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A665">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en1" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":ea1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A666">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en2" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":ea2" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A667">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en3" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":ea3" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A668">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en4" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":ea4" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A669">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en5" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":ea5" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A670">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en6" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":ea6" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements61">
    <lrml:PrescriptiveStatement key="statements61Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :es :ena :enr :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:Purpose :epu) & (prOnto:isBasedOn :ep :epu)
	 & (prOnto:PersonalDataRecord :p) & (prOnto:storedIn' :es :z :p) & (rioOnto:not :ena :ewa)
	 & (prOnto:awareOf' :ewa :z :ea) & (prOnto:ableTo' :ea :w :ew) & (prOnto:withdrawConsentFrom' :ew :w :epu)
	 & (rioOnto:not :enr :erf) & (prOnto:receiveFrom' :erf :y :z :w) & (rioOnto:exceptionCha3Sec2Art14Par5Point2 :es)
	 & (rioOnto:exceptionCha3Sec2Art14Par5Point3 :es) & (rioOnto:exceptionCha3Sec2Art14Par5Point4 :es),

	(rioOnto:RexistAtTime :en :t2) & (rioOnto:>= :t2 :t1) & (prOnto:Communicate' :en :y :w :ea)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":es">es</ruleml:Var>
              <ruleml:Var key=":ena">ena</ruleml:Var>
              <ruleml:Var key=":enr">enr</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A671">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A672">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Purpose" />
              <ruleml:Var key=":epu">epu</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isBasedOn" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":epu" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalDataRecord" />
              <ruleml:Var key=":p">p</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A673">
              <ruleml:Rel iri="prOnto:storedIn" />
              <ruleml:Var keyref=":es" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":p" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":ena" />
              <ruleml:Var key=":ewa">ewa</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A674">
              <ruleml:Rel iri="prOnto:awareOf" />
              <ruleml:Var keyref=":ewa" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var key=":ea">ea</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A675">
              <ruleml:Rel iri="prOnto:ableTo" />
              <ruleml:Var keyref=":ea" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var key=":ew">ew</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A676">
              <ruleml:Rel iri="prOnto:withdrawConsentFrom" />
              <ruleml:Var keyref=":ew" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":epu" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":enr" />
              <ruleml:Var key=":erf">erf</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A677">
              <ruleml:Rel iri="prOnto:receiveFrom" />
              <ruleml:Var keyref=":erf" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec2Art14Par5Point2" />
                <ruleml:Var keyref=":es" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec2Art14Par5Point3" />
                <ruleml:Var keyref=":es" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec2Art14Par5Point4" />
                <ruleml:Var keyref=":es" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":en">en</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A678">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":ea" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements62">
    <lrml:PrescriptiveStatement key="statements62Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :es :ena :enr :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:PersonalDataRecord :p) & (prOnto:storedIn' :es :z :p)
	 & (rioOnto:not :ena :ewa) & (prOnto:awareOf' :ewa :z :ea) & (prOnto:ableTo' :ea :w :el)
	 & (prOnto:lodge' :el :w :c prOnto:supAuth(prOnto:MSof(:y))) & (prOnto:complaint :c) & (rioOnto:not :enr :erf)
	 & (prOnto:receiveFrom' :erf :y :z :w) & (rioOnto:exceptionCha3Sec2Art14Par5Point2 :es) & (rioOnto:exceptionCha3Sec2Art14Par5Point3 :es)
	 & (rioOnto:exceptionCha3Sec2Art14Par5Point4 :es),

	(rioOnto:RexistAtTime :en :t2) & (rioOnto:>= :t2 :t1) & (prOnto:Communicate' :en :y :w :ea)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":es">es</ruleml:Var>
              <ruleml:Var key=":ena">ena</ruleml:Var>
              <ruleml:Var key=":enr">enr</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A679">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A680">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalDataRecord" />
              <ruleml:Var key=":p">p</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A681">
              <ruleml:Rel iri="prOnto:storedIn" />
              <ruleml:Var keyref=":es" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":p" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":ena" />
              <ruleml:Var key=":ewa">ewa</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A682">
              <ruleml:Rel iri="prOnto:awareOf" />
              <ruleml:Var keyref=":ewa" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var key=":ea">ea</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A683">
              <ruleml:Rel iri="prOnto:ableTo" />
              <ruleml:Var keyref=":ea" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var key=":el">el</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A684">
              <ruleml:Rel iri="prOnto:lodge" />
              <ruleml:Var keyref=":el" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var key=":c">c</ruleml:Var>
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:supAuth" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:MSof" />
                  <ruleml:Var keyref=":y" />
                </ruleml:Expr>
              </ruleml:Expr>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:complaint" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":enr" />
              <ruleml:Var key=":erf">erf</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A685">
              <ruleml:Rel iri="prOnto:receiveFrom" />
              <ruleml:Var keyref=":erf" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec2Art14Par5Point2" />
                <ruleml:Var keyref=":es" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec2Art14Par5Point3" />
                <ruleml:Var keyref=":es" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec2Art14Par5Point4" />
                <ruleml:Var keyref=":es" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":en">en</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A686">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":ea" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements63">
    <lrml:PrescriptiveStatement key="statements63Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :es :ena :enr :enr :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:PersonalDataRecord :p) & (prOnto:storedIn' :es :z :p)
	 & (rioOnto:not :ena :ewa) & (prOnto:awareOf' :ewa :z :k) & (rioOnto:not :enr :erf1)
	 & (prOnto:receiveFrom' :erf1 :y :z :w) & (prOnto:receiveFrom' :erf2 :y :z :k) & (rioOnto:exceptionCha3Sec2Art14Par5Point2 :es)
	 & (rioOnto:exceptionCha3Sec2Art14Par5Point3 :es) & (rioOnto:exceptionCha3Sec2Art14Par5Point4 :es),

	(rioOnto:RexistAtTime :en :t2) & (rioOnto:>= :t2 :t1) & (prOnto:Communicate' :en :y :w :k)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":es">es</ruleml:Var>
              <ruleml:Var key=":ena">ena</ruleml:Var>
              <ruleml:Var key=":enr">enr</ruleml:Var>
              <ruleml:Var key=":enr">erf2</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A687">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A688">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalDataRecord" />
              <ruleml:Var key=":p">p</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A689">
              <ruleml:Rel iri="prOnto:storedIn" />
              <ruleml:Var keyref=":es" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":p" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":ena" />
              <ruleml:Var key=":ewa">ewa</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A690">
              <ruleml:Rel iri="prOnto:awareOf" />
              <ruleml:Var keyref=":ewa" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":enr" />
              <ruleml:Var key=":erf1">erf1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A691">
              <ruleml:Rel iri="prOnto:receiveFrom" />
              <ruleml:Var keyref=":erf1" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A692">
              <ruleml:Rel iri="prOnto:receiveFrom" />
              <ruleml:Var keyref=":erf2" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec2Art14Par5Point2" />
                <ruleml:Var keyref=":es" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec2Art14Par5Point3" />
                <ruleml:Var keyref=":es" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec2Art14Par5Point4" />
                <ruleml:Var keyref=":es" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":en">en</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A693">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":k" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements64">
    <lrml:PrescriptiveStatement key="statements64Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :es :ena1 :ena2 :enr :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:PersonalDataRecord :p) & (prOnto:storedIn' :es :z :p)
	 & (prOnto:relatedTo :ep :em) & (prOnto:implement' :ei :y :em) & (prOnto:automatedDecisionMaking :em)
	 & (rioOnto:not :ena1 :ewa1) & (prOnto:awareOf' :ewa1 :z :ei) & (rioOnto:not :ena2 :ewa2)
	 & (prOnto:awareOf' :ewa2 :z :d) & (prOnto:documentationOf :em :d) & (rioOnto:not :enr :erf)
	 & (prOnto:receiveFrom' :erf :y :z :w) & (rioOnto:exceptionCha3Sec2Art14Par5Point2 :es) & (rioOnto:exceptionCha3Sec2Art14Par5Point3 :es)
	 & (rioOnto:exceptionCha3Sec2Art14Par5Point4 :es),

	(rioOnto:RexistAtTime :a2 :t2) & (rioOnto:>= :t2 :t1) & (rioOnto:and :a2 :en1 :en2) & (prOnto:Communicate' :en1 :y :w :ei)
	 & (prOnto:Communicate' :en2 :y :w :d)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":es">es</ruleml:Var>
              <ruleml:Var key=":ena1">ena1</ruleml:Var>
              <ruleml:Var key=":ena2">ena2</ruleml:Var>
              <ruleml:Var key=":enr">enr</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A694">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A695">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalDataRecord" />
              <ruleml:Var key=":p">p</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A696">
              <ruleml:Rel iri="prOnto:storedIn" />
              <ruleml:Var keyref=":es" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":p" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:relatedTo" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var key=":em">ei</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A697">
              <ruleml:Rel iri="prOnto:implement" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":em">em</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:automatedDecisionMaking" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":ena1" />
              <ruleml:Var key=":ewa1">ewa1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A698">
              <ruleml:Rel iri="prOnto:awareOf" />
              <ruleml:Var keyref=":ewa1" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":ei" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":ena2" />
              <ruleml:Var key=":ewa2">ewa2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A699">
              <ruleml:Rel iri="prOnto:awareOf" />
              <ruleml:Var keyref=":ewa2" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var key=":d">d</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:documentationOf" />
              <ruleml:Var keyref=":em" />
              <ruleml:Var keyref=":d" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":enr" />
              <ruleml:Var key=":erf">erf</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A700">
              <ruleml:Rel iri="prOnto:receiveFrom" />
              <ruleml:Var keyref=":erf" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec2Art14Par5Point2" />
                <ruleml:Var keyref=":es" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec2Art14Par5Point3" />
                <ruleml:Var keyref=":es" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec2Art14Par5Point4" />
                <ruleml:Var keyref=":es" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":a2">a2</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:and" />
                <ruleml:Var keyref=":a2" />
                <ruleml:Var key=":en1">en1</ruleml:Var>
                <ruleml:Var key=":en2">en2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A701">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en1" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":ei" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A702">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en2" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":d" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements65">
    <lrml:PrescriptiveStatement key="statements65Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :es :enr :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:PersonalDataRecord :p) & (prOnto:storedIn' :es :z :p)
	 & (rioOnto:not :enr :erf) & (prOnto:receiveFrom' :erf :y :z :w) & (rioOnto:exceptionCha3Sec2Art14Par5Point2 :es)
	 & (rioOnto:exceptionCha3Sec2Art14Par5Point3 :es) & (rioOnto:exceptionCha3Sec2Art14Par5Point4 :es),

	(rioOnto:RexistAtTime :en :t2) & (rioOnto:>= :t2 :t1) & (rioOnto:<= :t2 rioOnto:+(:t1, 1M)) & (prOnto:Communicate' :en :y :w :k)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":es">es</ruleml:Var>
              <ruleml:Var key=":enr">enr</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A703">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A704">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalDataRecord" />
              <ruleml:Var key=":p">p</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A705">
              <ruleml:Rel iri="prOnto:storedIn" />
              <ruleml:Var keyref=":es" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":p" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":enr" />
              <ruleml:Var key=":erf">erf</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A706">
              <ruleml:Rel iri="prOnto:receiveFrom" />
              <ruleml:Var keyref=":erf" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec2Art14Par5Point2" />
                <ruleml:Var keyref=":es" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec2Art14Par5Point3" />
                <ruleml:Var keyref=":es" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec2Art14Par5Point4" />
                <ruleml:Var keyref=":es" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":en">en</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&lt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Expr>
                  <ruleml:Fun iri="rioOnto:+" />
                  <ruleml:Var keyref=":t1" />
                  <ruleml:Ind>1M</ruleml:Ind>
                </ruleml:Expr>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A707">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var key=":k">k</ruleml:Var>
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements66">
    <lrml:PrescriptiveStatement key="statements66Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :es :enr :ert :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:PersonalDataRecord :p) & (prOnto:storedIn' :es :z :p)
	 & (rioOnto:not :enr :erf) & (prOnto:receiveFrom' :erf :y :z :w) & (rioOnto:RexistAtTime :en1 :t2)
	 & (rioOnto:>= :t2 :t1) & (prOnto:Communicate' :en1 :y :w :k) & (rioOnto:exceptionCha3Sec2Art14Par5Point2 :es)
	 & (rioOnto:exceptionCha3Sec2Art14Par5Point3 :es) & (rioOnto:exceptionCha3Sec2Art14Par5Point4 :es),

	(rioOnto:= :t2 :t3) & (rioOnto:RexistAtTime :en2 :t3) & (prOnto:Communicate' :en2 :y :w :d) & (prOnto:relatedTo' :ert :z :en2)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":es">es</ruleml:Var>
              <ruleml:Var key=":enr">enr</ruleml:Var>
              <ruleml:Var key=":ert">ert</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A708">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A709">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalDataRecord" />
              <ruleml:Var key=":p">p</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A710">
              <ruleml:Rel iri="prOnto:storedIn" />
              <ruleml:Var keyref=":es" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":p" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":enr" />
              <ruleml:Var key=":erf">erf</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A711">
              <ruleml:Rel iri="prOnto:receiveFrom" />
              <ruleml:Var keyref=":erf" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":en1">en1</ruleml:Var>
              <ruleml:Var key=":t2">t2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:&gt;=" />
              <ruleml:Var keyref=":t2" />
              <ruleml:Var keyref=":t1" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A712">
              <ruleml:Rel iri="prOnto:Communicate" />
              <ruleml:Var keyref=":en1" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec2Art14Par5Point2" />
                <ruleml:Var keyref=":es" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec2Art14Par5Point3" />
                <ruleml:Var keyref=":es" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec2Art14Par5Point4" />
                <ruleml:Var keyref=":es" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t3" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":en2">en2</ruleml:Var>
                <ruleml:Var key=":t3">t3</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A713">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en2" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var key=":d">d</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A714">
                <ruleml:Rel iri="prOnto:relatedTo" />
                <ruleml:Var keyref=":ert" />
                <ruleml:Var keyref=":z" />
                <ruleml:Var keyref=":en2" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements67">
    <lrml:PrescriptiveStatement key="statements67Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :es :enr :ert :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:PersonalDataRecord :p) & (prOnto:storedIn' :es :z :p)
	 & (rioOnto:not :enr :erf) & (prOnto:receiveFrom' :erf :y :z :w) & (rioOnto:RexistAtTime :en1 :t2)
	 & (rioOnto:>= :t2 :t1) & (prOnto:Communicate' :en1 :y :w :k) & (rioOnto:exceptionCha3Sec2Art14Par5Point2 :es)
	 & (rioOnto:exceptionCha3Sec2Art14Par5Point3 :es) & (rioOnto:exceptionCha3Sec2Art14Par5Point4 :es),

	(rioOnto:RexistAtTime :ed :t3) & (rioOnto:= :t2 :t3) & (prOnto:disclosure' :ed :x :z)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":es">es</ruleml:Var>
              <ruleml:Var key=":enr">enr</ruleml:Var>
              <ruleml:Var key=":ert">ert</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A715">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A716">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalDataRecord" />
              <ruleml:Var key=":p">p</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A717">
              <ruleml:Rel iri="prOnto:storedIn" />
              <ruleml:Var keyref=":es" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":p" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":enr" />
              <ruleml:Var key=":erf">erf</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A718">
              <ruleml:Rel iri="prOnto:receiveFrom" />
              <ruleml:Var keyref=":erf" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":en1">en1</ruleml:Var>
              <ruleml:Var key=":t2">t2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:&gt;=" />
              <ruleml:Var keyref=":t2" />
              <ruleml:Var keyref=":t1" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A719">
              <ruleml:Rel iri="prOnto:Communicate" />
              <ruleml:Var keyref=":en1" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec2Art14Par5Point2" />
                <ruleml:Var keyref=":es" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec2Art14Par5Point3" />
                <ruleml:Var keyref=":es" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec2Art14Par5Point4" />
                <ruleml:Var keyref=":es" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":ed">ed</ruleml:Var>
                <ruleml:Var key=":t3">t3</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t3" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A720">
                <ruleml:Rel iri="prOnto:disclosure" />
                <ruleml:Var keyref=":ed" />
                <ruleml:Var keyref=":x" />
                <ruleml:Var keyref=":z" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements68">
    <lrml:PrescriptiveStatement key="statements68Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :es :ena :enr :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep1 :x :z) & (prOnto:PersonalDataRecord :p) & (prOnto:storedIn' :es :z :p)
	 & (rioOnto:RexistAtTime :ep2 :t2) & (rioOnto:>= :t2 :t1) & (prOnto:PersonalDataProcessing' :ep2 :x :z)
	 & (rioOnto:not :ena :ewa) & (prOnto:awareOf' :ewa :z :ep2) & (rioOnto:not :enr :erf)
	 & (prOnto:receiveFrom' :erf :y :z :w) & (rioOnto:exceptionCha3Sec2Art14Par5Point2 :es) & (rioOnto:exceptionCha3Sec2Art14Par5Point3 :es)
	 & (rioOnto:exceptionCha3Sec2Art14Par5Point4 :es),

	(rioOnto:RexistAtTime :en :t1) & (prOnto:Communicate' :en :y :w :epu2)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":es">es</ruleml:Var>
              <ruleml:Var key=":ena">ena</ruleml:Var>
              <ruleml:Var key=":enr">enr</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A721">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A722">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var key=":ep1">ep1</ruleml:Var>
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalDataRecord" />
              <ruleml:Var key=":p">p</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A723">
              <ruleml:Rel iri="prOnto:storedIn" />
              <ruleml:Var keyref=":es" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":p" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":ep2">ep2</ruleml:Var>
              <ruleml:Var key=":t2">t2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:&gt;=" />
              <ruleml:Var keyref=":t2" />
              <ruleml:Var keyref=":t1" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A724">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep2" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":ena" />
              <ruleml:Var key=":ewa">ewa</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A725">
              <ruleml:Rel iri="prOnto:awareOf" />
              <ruleml:Var keyref=":ewa" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":ep2" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":enr" />
              <ruleml:Var key=":erf">erf</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A726">
              <ruleml:Rel iri="prOnto:receiveFrom" />
              <ruleml:Var keyref=":erf" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec2Art14Par5Point2" />
                <ruleml:Var keyref=":es" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec2Art14Par5Point3" />
                <ruleml:Var keyref=":es" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec2Art14Par5Point4" />
                <ruleml:Var keyref=":es" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":en">en</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A727">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":epu2" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements69">
    <lrml:ConstitutiveStatement key="statements69Formula1">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :es :enr :er :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:PersonalDataRecord :p) & (prOnto:storedIn' :es :z :p)
	 & (rioOnto:not :enr :erf) & (prOnto:receiveFrom' :erf :y :z :w) & (rioOnto:RexistAtTime :en :t2)
	 & (rioOnto:>= :t2 :t1) & (prOnto:Communicate' :en :y :w :k) & (prOnto:requireTooMuchEffort' :er :en),

	(rioOnto:exceptionCha3Sec2Art14Par5Point2 :es)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":es">es</ruleml:Var>
              <ruleml:Var key=":enr">enr</ruleml:Var>
              <ruleml:Var key=":er">er</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A728">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A729">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalDataRecord" />
              <ruleml:Var key=":p">p</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A730">
              <ruleml:Rel iri="prOnto:storedIn" />
              <ruleml:Var keyref=":es" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":p" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":enr" />
              <ruleml:Var key=":erf">erf</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A731">
              <ruleml:Rel iri="prOnto:receiveFrom" />
              <ruleml:Var keyref=":erf" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":en">en</ruleml:Var>
              <ruleml:Var key=":t2">t2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:&gt;=" />
              <ruleml:Var keyref=":t2" />
              <ruleml:Var keyref=":t1" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A732">
              <ruleml:Rel iri="prOnto:Communicate" />
              <ruleml:Var keyref=":en" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A733">
              <ruleml:Rel iri="prOnto:requireTooMuchEffort" />
              <ruleml:Var keyref=":er" />
              <ruleml:Var keyref=":en" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:Atom>
            <ruleml:Rel iri="rioOnto:exceptionCha3Sec2Art14Par5Point2" />
            <ruleml:Var keyref=":es" />
          </ruleml:Atom>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
    <lrml:PrescriptiveStatement key="statements69Formula2">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :es :enr :er :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:PersonalDataRecord :p) & (prOnto:storedIn' :es :z :p)
	 & (rioOnto:not :enr :erf) & (prOnto:receiveFrom' :erf :y :z :w) & (rioOnto:RexistAtTime :en :t2)
	 & (rioOnto:>= :t2 :t1) & (prOnto:Communicate' :en :y :w :k) & (prOnto:requireTooMuchEffort' :er :en),

	(rioOnto:RexistAtTime :a2 :t2) & (rioOnto:and :a2 :eim :eca1 :eca2) & (prOnto:measure :em) & (prOnto:implement' :eim :y :em)
	 & (rioOnto:cause' :eca1 :em :epr1) & (prOnto:protect' :epr1 :em :eraf) & (prOnto:rightsAndFreedomsOf' :eraf :w)
	 & (rioOnto:cause' :eca2 :em :epr2) & (prOnto:protect' :epr2 :em :eli) & (prOnto:legitimateInterestOf' :eli :w)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":es">es</ruleml:Var>
              <ruleml:Var key=":enr">enr</ruleml:Var>
              <ruleml:Var key=":er">er</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A734">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A735">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalDataRecord" />
              <ruleml:Var key=":p">p</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A736">
              <ruleml:Rel iri="prOnto:storedIn" />
              <ruleml:Var keyref=":es" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":p" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":enr" />
              <ruleml:Var key=":erf">erf</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A737">
              <ruleml:Rel iri="prOnto:receiveFrom" />
              <ruleml:Var keyref=":erf" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":en">en</ruleml:Var>
              <ruleml:Var key=":t2">t2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:&gt;=" />
              <ruleml:Var keyref=":t2" />
              <ruleml:Var keyref=":t1" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A738">
              <ruleml:Rel iri="prOnto:Communicate" />
              <ruleml:Var keyref=":en" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A739">
              <ruleml:Rel iri="prOnto:requireTooMuchEffort" />
              <ruleml:Var keyref=":er" />
              <ruleml:Var keyref=":en" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":a2">a2</ruleml:Var>
                <ruleml:Var keyref=":t2" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:and" />
                <ruleml:Var keyref=":a2" />
                <ruleml:Var key=":eim">eim</ruleml:Var>
                <ruleml:Var key=":eca1">eca1</ruleml:Var>
                <ruleml:Var key=":eca2">eca2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:measure" />
                <ruleml:Var key=":em">em</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A740">
                <ruleml:Rel iri="prOnto:implement" />
                <ruleml:Var keyref=":eim" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":em" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A741">
                <ruleml:Rel iri="rioOnto:cause" />
                <ruleml:Var keyref=":eca1" />
                <ruleml:Var keyref=":em" />
                <ruleml:Var key=":epr1">epr1</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A742">
                <ruleml:Rel iri="prOnto:protect" />
                <ruleml:Var keyref=":epr1" />
                <ruleml:Var keyref=":em" />
                <ruleml:Var key=":eraf">eraf</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A743">
                <ruleml:Rel iri="prOnto:rightsAndFreedomsOf" />
                <ruleml:Var keyref=":eraf" />
                <ruleml:Var keyref=":w" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A744">
                <ruleml:Rel iri="rioOnto:cause" />
                <ruleml:Var keyref=":eca2" />
                <ruleml:Var keyref=":em" />
                <ruleml:Var key=":epr2">epr2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A745">
                <ruleml:Rel iri="prOnto:protect" />
                <ruleml:Var keyref=":epr2" />
                <ruleml:Var keyref=":em" />
                <ruleml:Var key=":eli">eli</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A746">
                <ruleml:Rel iri="prOnto:legitimateInterestOf" />
                <ruleml:Var keyref=":eli" />
                <ruleml:Var keyref=":w" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements70">
    <lrml:ConstitutiveStatement key="statements70Formula1">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :es :enr :eor :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:PersonalDataRecord :p) & (prOnto:storedIn' :es :z :p)
	 & (rioOnto:not :enr :erf) & (prOnto:receiveFrom' :erf :y :z :w) & (rioOnto:or :eor :ea1 :ea2)
	 & (prOnto:authorizedBy' :ea1 :es EuropeanUnion) & (prOnto:authorizedBy' :ea2 :es prOnto:MSof(:y)),

	(rioOnto:exceptionCha3Sec2Art14Par5Point3 :es)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":es">es</ruleml:Var>
              <ruleml:Var key=":enr">enr</ruleml:Var>
              <ruleml:Var key=":eor">eor</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A747">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A748">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalDataRecord" />
              <ruleml:Var key=":p">p</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A749">
              <ruleml:Rel iri="prOnto:storedIn" />
              <ruleml:Var keyref=":es" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":p" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":enr" />
              <ruleml:Var key=":erf">erf</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A750">
              <ruleml:Rel iri="prOnto:receiveFrom" />
              <ruleml:Var keyref=":erf" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eor" />
              <ruleml:Var key=":ea1">ea1</ruleml:Var>
              <ruleml:Var key=":ea2">ea2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A751">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":ea1" />
              <ruleml:Var keyref=":es" />
              <ruleml:Ind>EuropeanUnion</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A752">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":ea2" />
              <ruleml:Var keyref=":es" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:MSof" />
                <ruleml:Var keyref=":y" />
              </ruleml:Expr>
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:Atom>
            <ruleml:Rel iri="rioOnto:exceptionCha3Sec2Art14Par5Point3" />
            <ruleml:Var keyref=":es" />
          </ruleml:Atom>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
    <lrml:PrescriptiveStatement key="statements70Formula2">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :es :enr :eor :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:PersonalDataRecord :p) & (prOnto:storedIn' :es :z :p)
	 & (rioOnto:not :enr :erf) & (prOnto:receiveFrom' :erf :y :z :w) & (rioOnto:or :eor :ea1 :ea2)
	 & (prOnto:authorizedBy' :ea1 :es EuropeanUnion) & (prOnto:authorizedBy' :ea2 :es prOnto:MSof(:y)),

	(rioOnto:RexistAtTime :a2 :t1) & (rioOnto:and :a2 :eim :eca) & (prOnto:measure :em) & (prOnto:implement' :eim :y :em)
	 & (rioOnto:cause' :eca :em :epr) & (prOnto:protect' :epr :em :eli) & (prOnto:legitimateInterestOf' :eli :w)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":es">es</ruleml:Var>
              <ruleml:Var key=":enr">enr</ruleml:Var>
              <ruleml:Var key=":eor">eor</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A753">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A754">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalDataRecord" />
              <ruleml:Var key=":p">p</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A755">
              <ruleml:Rel iri="prOnto:storedIn" />
              <ruleml:Var keyref=":es" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":p" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":enr" />
              <ruleml:Var key=":erf">erf</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A756">
              <ruleml:Rel iri="prOnto:receiveFrom" />
              <ruleml:Var keyref=":erf" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eor" />
              <ruleml:Var key=":ea1">ea1</ruleml:Var>
              <ruleml:Var key=":ea2">ea2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A757">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":ea1" />
              <ruleml:Var keyref=":es" />
              <ruleml:Ind>EuropeanUnion</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A758">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":ea2" />
              <ruleml:Var keyref=":es" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:MSof" />
                <ruleml:Var keyref=":y" />
              </ruleml:Expr>
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":a2">a2</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:and" />
                <ruleml:Var keyref=":a2" />
                <ruleml:Var key=":eim">eim</ruleml:Var>
                <ruleml:Var key=":eca">eca</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:measure" />
                <ruleml:Var key=":em">em</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A759">
                <ruleml:Rel iri="prOnto:implement" />
                <ruleml:Var keyref=":eim" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":em" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A760">
                <ruleml:Rel iri="rioOnto:cause" />
                <ruleml:Var keyref=":eca" />
                <ruleml:Var keyref=":em" />
                <ruleml:Var key=":epr">epr</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A761">
                <ruleml:Rel iri="prOnto:protect" />
                <ruleml:Var keyref=":epr" />
                <ruleml:Var keyref=":em" />
                <ruleml:Var key=":eli">eli</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A762">
                <ruleml:Rel iri="prOnto:legitimateInterestOf" />
                <ruleml:Var keyref=":eli" />
                <ruleml:Var keyref=":w" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements71">
    <lrml:ConstitutiveStatement key="statements71Formula1">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :es :enr :eob :eor :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:PersonalDataRecord :p) & (prOnto:storedIn' :es :z :p)
	 & (rioOnto:not :enr :erf) & (prOnto:receiveFrom' :erf :y :z :w) & (rioOnto:Obliged' :eob :y :end :t1)
	 & (rioOnto:not :end :ed) & (prOnto:disclosure' :ed :y :z) & (rioOnto:or :eor :ea1 :ea2)
	 & (prOnto:authorizedBy' :ea1 :eob EuropeanUnion) & (prOnto:authorizedBy' :ea2 :eob prOnto:MSof(:y)),

	(rioOnto:exceptionCha3Sec2Art14Par5Point2 :es)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":es">es</ruleml:Var>
              <ruleml:Var key=":enr">enr</ruleml:Var>
              <ruleml:Var key=":eob">eob</ruleml:Var>
              <ruleml:Var key=":eor">eor</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A763">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A764">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalDataRecord" />
              <ruleml:Var key=":p">p</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A765">
              <ruleml:Rel iri="prOnto:storedIn" />
              <ruleml:Var keyref=":es" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":p" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":enr" />
              <ruleml:Var key=":erf">erf</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A766">
              <ruleml:Rel iri="prOnto:receiveFrom" />
              <ruleml:Var keyref=":erf" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A767">
              <ruleml:Rel iri="rioOnto:Obliged" />
              <ruleml:Var keyref=":eob" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":end" />
              <ruleml:Var keyref=":t1" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":end" />
              <ruleml:Var key=":ed">ed</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A768">
              <ruleml:Rel iri="prOnto:disclosure" />
              <ruleml:Var keyref=":ed" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eor" />
              <ruleml:Var key=":ea1">ea1</ruleml:Var>
              <ruleml:Var key=":ea2">ea2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A769">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":ea1" />
              <ruleml:Var keyref=":eob" />
              <ruleml:Ind>EuropeanUnion</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A770">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":ea2" />
              <ruleml:Var keyref=":eob" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:MSof" />
                <ruleml:Var keyref=":y" />
              </ruleml:Expr>
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:Atom>
            <ruleml:Rel iri="rioOnto:exceptionCha3Sec2Art14Par5Point2" />
            <ruleml:Var keyref=":es" />
          </ruleml:Atom>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements72">
    <lrml:PrescriptiveStatement key="statements72Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :er :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:Purpose :epu) & (prOnto:isBasedOn :ep :epu)
	 & (prOnto:request' :er :w :ea) & (prOnto:awareOf' :ea :w :ep) & (rioOnto:exceptionCha3Sec1Art12Par2 :ep)
	 & (rioOnto:exceptionCha2Art11Par2 :ep),

	(rioOnto:RexistAtTime :en :t2) & (rioOnto:>= :t2 :t1) & (prOnto:Communicate' :en :y :w :epu)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":er">er</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A771">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A772">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Purpose" />
              <ruleml:Var key=":epu">epu</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isBasedOn" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":epu" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A773">
              <ruleml:Rel iri="prOnto:request" />
              <ruleml:Var keyref=":er" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var key=":ea">ea</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A774">
              <ruleml:Rel iri="prOnto:awareOf" />
              <ruleml:Var keyref=":ea" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec1Art12Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha2Art11Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":en">en</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A775">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":epu" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements73">
    <lrml:PrescriptiveStatement key="statements73Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :er :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:categoryOf :ca :w) & (prOnto:request' :er :w :ea)
	 & (prOnto:awareOf' :ea :w :ep) & (rioOnto:exceptionCha3Sec1Art12Par2 :ep) & (rioOnto:exceptionCha2Art11Par2 :ep),

	(rioOnto:RexistAtTime :en :t2) & (rioOnto:>= :t2 :t1) & (prOnto:Communicate' :en :y :w :ca)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":er">er</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A776">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A777">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:categoryOf" />
              <ruleml:Var key=":ca">ca</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A778">
              <ruleml:Rel iri="prOnto:request" />
              <ruleml:Var keyref=":er" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var key=":ea">ea</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A779">
              <ruleml:Rel iri="prOnto:awareOf" />
              <ruleml:Var keyref=":ea" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec1Art12Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha2Art11Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":en">en</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A780">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":ca" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements74">
    <lrml:PrescriptiveStatement key="statements74Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :er :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:recipientOf :r :w) & (prOnto:categoryOf :cr :r)
	 & (prOnto:request' :er :w :ea) & (prOnto:awareOf' :ea :w :ep) & (rioOnto:exceptionCha3Sec1Art12Par2 :ep)
	 & (rioOnto:exceptionCha2Art11Par2 :ep),

	(rioOnto:RexistAtTime :eor :t2) & (rioOnto:>= :t2 :t1) & (rioOnto:or :eor :en1 :en2) & (prOnto:Communicate' :en1 :y :w :r)
	 & (prOnto:Communicate' :en2 :y :w :cr)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":er">er</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A781">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A782">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:recipientOf" />
              <ruleml:Var key=":r">r</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:categoryOf" />
              <ruleml:Var key=":cr">cr</ruleml:Var>
              <ruleml:Var keyref=":r" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A783">
              <ruleml:Rel iri="prOnto:request" />
              <ruleml:Var keyref=":er" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var key=":ea">ea</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A784">
              <ruleml:Rel iri="prOnto:awareOf" />
              <ruleml:Var keyref=":ea" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec1Art12Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha2Art11Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":eor">eor</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:or" />
                <ruleml:Var keyref=":eor" />
                <ruleml:Var key=":en1">en1</ruleml:Var>
                <ruleml:Var key=":en2">en2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A785">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en1" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":r" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A786">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en2" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":cr" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements75">
    <lrml:PrescriptiveStatement key="statements75Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :es :ei :er :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:PersonalDataRecord :p) & (prOnto:storedIn' :es :z :p)
	 & (rioOnto:timeOf :eti :es) & (prOnto:implement' :ei :y :em) & (prOnto:measure :em)
	 & (rioOnto:cause :ei :eaw) & (prOnto:awareOf' :eaw :y :eti) & (prOnto:request' :er :w :ea)
	 & (prOnto:awareOf' :ea :w :ep) & (rioOnto:exceptionCha3Sec1Art12Par2 :ep) & (rioOnto:exceptionCha2Art11Par2 :ep),

	(rioOnto:RexistAtTime :eor :t2) & (rioOnto:>= :t2 :t1) & (rioOnto:or :eor :en1 :en2) & (prOnto:Communicate' :en1 :y :w :eti)
	 & (prOnto:Communicate' :en2 :y :w :ei)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":es">es</ruleml:Var>
              <ruleml:Var key=":ei">ei</ruleml:Var>
              <ruleml:Var key=":er">er</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A787">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A788">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalDataRecord" />
              <ruleml:Var key=":p">p</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A789">
              <ruleml:Rel iri="prOnto:storedIn" />
              <ruleml:Var keyref=":es" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":p" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:timeOf" />
              <ruleml:Var keyref=":eti" />
              <ruleml:Var keyref=":es" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A790">
              <ruleml:Rel iri="prOnto:implement" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":em">em</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:measure" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:cause" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var key=":eaw">eaw</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A791">
              <ruleml:Rel iri="prOnto:awareOf" />
              <ruleml:Var keyref=":eaw" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":eti" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A792">
              <ruleml:Rel iri="prOnto:request" />
              <ruleml:Var keyref=":er" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var key=":ea">ea</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A793">
              <ruleml:Rel iri="prOnto:awareOf" />
              <ruleml:Var keyref=":ea" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec1Art12Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha2Art11Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":eor">eor</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:or" />
                <ruleml:Var keyref=":eor" />
                <ruleml:Var key=":en1">en1</ruleml:Var>
                <ruleml:Var key=":en2">en2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A794">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en1" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":eti" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A795">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en2" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":ei" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements76">
    <lrml:PrescriptiveStatement key="statements76Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :er :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:request' :er :w :ea) & (prOnto:awareOf' :ea :w :ep)
	 & (rioOnto:exceptionCha3Sec1Art12Par2 :ep) & (rioOnto:exceptionCha2Art11Par2 :ep),

	(rioOnto:RexistAtTime :a2 :t2) & (rioOnto:>= :t2 :t1) & (rioOnto:and :a2 :en1 :en2 :en2 :en2 :en2) & (prOnto:Communicate' :en1 :y :w :ea1)
	 & (prOnto:ableTo' :ea1 :w :eac) & (prOnto:access' :eac :w :z) & (prOnto:Communicate' :en2 :y :w :ea2)
	 & (prOnto:ableTo' :ea2 :w :ere) & (prOnto:rectify' :ere :w :z) & (prOnto:Communicate' :en3 :y :w :ea3)
	 & (prOnto:ableTo' :ea3 :w :era) & (prOnto:erase' :era :w :z) & (prOnto:Communicate' :en4 :y :w :ea4)
	 & (prOnto:ableTo' :ea4 :w :eli) & (prOnto:limit' :eli :w :z) & (prOnto:Communicate' :en5 :y :w :ea5)
	 & (prOnto:ableTo' :ea5 :w :eng) & (rioOnto:not :eng :a3) & (rioOnto:and :a3 :ehc :eau)
	 & (prOnto:consent :c :ep) & (prOnto:hasConsented' :ehc :w :c :ep) & (prOnto:authorizedBy' :eau :epu :c :ep)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":er">er</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A796">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A797">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A798">
              <ruleml:Rel iri="prOnto:request" />
              <ruleml:Var keyref=":er" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var key=":ea">ea</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A799">
              <ruleml:Rel iri="prOnto:awareOf" />
              <ruleml:Var keyref=":ea" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec1Art12Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha2Art11Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":a2">a2</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:and" />
                <ruleml:Var keyref=":a2" />
                <ruleml:Var key=":en1">en1</ruleml:Var>
                <ruleml:Var key=":en2">en2</ruleml:Var>
                <ruleml:Var key=":en2">en3</ruleml:Var>
                <ruleml:Var key=":en2">en4</ruleml:Var>
                <ruleml:Var key=":en2">en5</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A800">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en1" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var key=":ea1">ea1</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A801">
                <ruleml:Rel iri="prOnto:ableTo" />
                <ruleml:Var keyref=":ea1" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var key=":eac">eac</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A802">
                <ruleml:Rel iri="prOnto:access" />
                <ruleml:Var keyref=":eac" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":z" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A803">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en2" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var key=":ea2">ea2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A804">
                <ruleml:Rel iri="prOnto:ableTo" />
                <ruleml:Var keyref=":ea2" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var key=":ere">ere</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A805">
                <ruleml:Rel iri="prOnto:rectify" />
                <ruleml:Var keyref=":ere" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":z" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A806">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en3" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var key=":ea3">ea3</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A807">
                <ruleml:Rel iri="prOnto:ableTo" />
                <ruleml:Var keyref=":ea3" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var key=":era">era</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A808">
                <ruleml:Rel iri="prOnto:erase" />
                <ruleml:Var keyref=":era" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":z" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A809">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en4" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var key=":ea4">ea4</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A810">
                <ruleml:Rel iri="prOnto:ableTo" />
                <ruleml:Var keyref=":ea4" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var key=":eli">eli</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A811">
                <ruleml:Rel iri="prOnto:limit" />
                <ruleml:Var keyref=":eli" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":z" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A812">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en5" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var key=":ea5">ea5</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A813">
                <ruleml:Rel iri="prOnto:ableTo" />
                <ruleml:Var keyref=":ea5" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var key=":eng">eng</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:not" />
                <ruleml:Var keyref=":eng" />
                <ruleml:Var key=":a3">a3</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:and" />
                <ruleml:Var keyref=":a3" />
                <ruleml:Var key=":ehc">ehc</ruleml:Var>
                <ruleml:Var key=":eau">eau</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:consent" />
                <ruleml:Var key=":c">c</ruleml:Var>
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A814">
                <ruleml:Rel iri="prOnto:hasConsented" />
                <ruleml:Var keyref=":ehc" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":c" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A815">
                <ruleml:Rel iri="prOnto:authorizedBy" />
                <ruleml:Var keyref=":eau" />
                <ruleml:Var keyref=":epu" />
                <ruleml:Var keyref=":c" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements77">
    <lrml:PrescriptiveStatement key="statements77Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :er :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:request' :er :w :ea) & (prOnto:awareOf' :ea :w :ep)
	 & (rioOnto:exceptionCha3Sec1Art12Par2 :ep) & (rioOnto:exceptionCha2Art11Par2 :ep),

	(rioOnto:RexistAtTime :en :t2) & (rioOnto:>= :t2 :t1) & (prOnto:Communicate' :en :y :w :ea) & (prOnto:ableTo' :ea :w :el)
	 & (prOnto:lodge' :el :w :c prOnto:supAuth(prOnto:MSof(:y))) & (prOnto:complaint :c)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":er">er</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A816">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A817">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A818">
              <ruleml:Rel iri="prOnto:request" />
              <ruleml:Var keyref=":er" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var key=":ea">ea</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A819">
              <ruleml:Rel iri="prOnto:awareOf" />
              <ruleml:Var keyref=":ea" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec1Art12Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha2Art11Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":en">en</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A820">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var key=":ea">ea</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A821">
                <ruleml:Rel iri="prOnto:ableTo" />
                <ruleml:Var keyref=":ea" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var key=":el">el</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A822">
                <ruleml:Rel iri="prOnto:lodge" />
                <ruleml:Var keyref=":el" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var key=":c">c</ruleml:Var>
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:supAuth" />
                  <ruleml:Expr>
                    <ruleml:Fun iri="prOnto:MSof" />
                    <ruleml:Var keyref=":y" />
                  </ruleml:Expr>
                </ruleml:Expr>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:complaint" />
                <ruleml:Var keyref=":c" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements78">
    <lrml:PrescriptiveStatement key="statements78Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :enr :er :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (rioOnto:not :enr :erf1) & (prOnto:receiveFrom' :erf1 :y :z :w)
	 & (prOnto:request' :er :w :ea) & (prOnto:awareOf' :ea :w :ep) & (rioOnto:exceptionCha3Sec1Art12Par2 :ep)
	 & (rioOnto:exceptionCha2Art11Par2 :ep),

	(rioOnto:RexistAtTime :a2 :t2) & (rioOnto:>= :t2 :t1) & (rioOnto:and :a2 :en :erf2) & (prOnto:Communicate' :en :y :w :k)
	 & (prOnto:receiveFrom' :erf2 :y :z :k)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":enr">enr</ruleml:Var>
              <ruleml:Var key=":er">er</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A823">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A824">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":enr" />
              <ruleml:Var key=":erf1">erf1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A825">
              <ruleml:Rel iri="prOnto:receiveFrom" />
              <ruleml:Var keyref=":erf1" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A826">
              <ruleml:Rel iri="prOnto:request" />
              <ruleml:Var keyref=":er" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var key=":ea">ea</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A827">
              <ruleml:Rel iri="prOnto:awareOf" />
              <ruleml:Var keyref=":ea" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec1Art12Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha2Art11Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":a2">a2</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:and" />
                <ruleml:Var keyref=":a2" />
                <ruleml:Var key=":en">en</ruleml:Var>
                <ruleml:Var key=":erf2">erf2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A828">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var key=":k">k</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A829">
                <ruleml:Rel iri="prOnto:receiveFrom" />
                <ruleml:Var keyref=":erf2" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":z" />
                <ruleml:Var keyref=":k" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements79">
    <lrml:PrescriptiveStatement key="statements79Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :ei :er :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:relatedTo :ep :em) & (prOnto:implement' :ei :y :em)
	 & (prOnto:automatedDecisionMaking :em) & (prOnto:request' :er :w :ea) & (prOnto:awareOf' :ea :w :ep)
	 & (rioOnto:exceptionCha3Sec1Art12Par2 :ep) & (rioOnto:exceptionCha2Art11Par2 :ep),

	(rioOnto:RexistAtTime :a2 :t2) & (rioOnto:>= :t2 :t1) & (rioOnto:and :a2 :en1 :en2) & (prOnto:Communicate' :en1 :y :w :ei)
	 & (prOnto:Communicate' :en2 :y :w :d) & (prOnto:documentationOf :em :d)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":ei">ei</ruleml:Var>
              <ruleml:Var key=":er">er</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A830">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A831">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:relatedTo" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var key=":em">ei</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A832">
              <ruleml:Rel iri="prOnto:implement" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":em">em</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:automatedDecisionMaking" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A833">
              <ruleml:Rel iri="prOnto:request" />
              <ruleml:Var keyref=":er" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var key=":ea">ea</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A834">
              <ruleml:Rel iri="prOnto:awareOf" />
              <ruleml:Var keyref=":ea" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec1Art12Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha2Art11Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":a2">a2</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:and" />
                <ruleml:Var keyref=":a2" />
                <ruleml:Var key=":en1">en1</ruleml:Var>
                <ruleml:Var key=":en2">en2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A835">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en1" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":ei" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A836">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en2" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var key=":d">d</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:documentationOf" />
                <ruleml:Var keyref=":em" />
                <ruleml:Var keyref=":d" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements80">
    <lrml:PrescriptiveStatement key="statements80Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :et :er :erq) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:thirdCountry :c) & (prOnto:Transmit' :et :x :z :c) & (prOnto:measure :em)
	 & (prOnto:implement' :ei :y :em) & (prOnto:relatedTo' :er :ei :et) & (prOnto:appropriate :em)
	 & (prOnto:request' :erq :w :ea) & (prOnto:awareOf' :ea :w :ei) & (rioOnto:exceptionCha3Sec1Art12Par2 :ep)
	 & (rioOnto:exceptionCha2Art11Par2 :ep),

	(rioOnto:RexistAtTime :en :t2) & (rioOnto:>= :t2 :t1) & (prOnto:Communicate' :en :y :w :ei)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":et">et</ruleml:Var>
              <ruleml:Var key=":er">er</ruleml:Var>
              <ruleml:Var key=":erq">erq</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A837">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:thirdCountry" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A838">
              <ruleml:Rel iri="prOnto:Transmit" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:measure" />
              <ruleml:Var key=":em">em</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A839">
              <ruleml:Rel iri="prOnto:implement" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A840">
              <ruleml:Rel iri="prOnto:relatedTo" />
              <ruleml:Var keyref=":er" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var keyref=":et" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:appropriate" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A841">
              <ruleml:Rel iri="prOnto:request" />
              <ruleml:Var keyref=":erq" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var key=":ea">ea</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A842">
              <ruleml:Rel iri="prOnto:awareOf" />
              <ruleml:Var keyref=":ea" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":ei" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec1Art12Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha2Art11Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":en">en</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A843">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":ei" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements80Formula2">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :et :er :erq) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:internationalOrganization :c) & (prOnto:Transmit' :et :x :z :c) & (prOnto:measure :em)
	 & (prOnto:implement' :ei :y :em) & (prOnto:relatedTo' :er :ei :et) & (prOnto:appropriate :em)
	 & (prOnto:request' :erq :w :ea) & (prOnto:awareOf' :ea :w :ei) & (rioOnto:exceptionCha3Sec1Art12Par2 :ep)
	 & (rioOnto:exceptionCha2Art11Par2 :ep),

	(rioOnto:RexistAtTime :en :t2) & (rioOnto:>= :t2 :t1) & (prOnto:Communicate' :en :y :w :ei)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":et">et</ruleml:Var>
              <ruleml:Var key=":er">er</ruleml:Var>
              <ruleml:Var key=":erq">erq</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A844">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:internationalOrganization" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A845">
              <ruleml:Rel iri="prOnto:Transmit" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:measure" />
              <ruleml:Var key=":em">em</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A846">
              <ruleml:Rel iri="prOnto:implement" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A847">
              <ruleml:Rel iri="prOnto:relatedTo" />
              <ruleml:Var keyref=":er" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var keyref=":et" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:appropriate" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A848">
              <ruleml:Rel iri="prOnto:request" />
              <ruleml:Var keyref=":erq" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var key=":ea">ea</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A849">
              <ruleml:Rel iri="prOnto:awareOf" />
              <ruleml:Var keyref=":ea" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":ei" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec1Art12Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha2Art11Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":en">en</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A850">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":ei" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements81">
    <lrml:PrescriptiveStatement key="statements81Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :er :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:request' :er :w prOnto:copyOf(:z)) & (rioOnto:exceptionCha3Sec2Art15Par4 :en)
	 & (rioOnto:exceptionCha3Sec1Art12Par2 :ep) & (rioOnto:exceptionCha2Art11Par2 :ep),

	(rioOnto:RexistAtTime :en :t2) & (rioOnto:>= :t2 :t1) & (prOnto:Communicate' :en :y :w prOnto:copyOf(:z))
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":er">er</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A851">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A852">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A853">
              <ruleml:Rel iri="prOnto:request" />
              <ruleml:Var keyref=":er" />
              <ruleml:Var keyref=":w" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:copyOf" />
                <ruleml:Var keyref=":z" />
              </ruleml:Expr>
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec2Art15Par4" />
                <ruleml:Var keyref=":en" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec1Art12Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha2Art11Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":en">en</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A854">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:copyOf" />
                  <ruleml:Var keyref=":z" />
                </ruleml:Expr>
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements81Formula2">
      <!--
Permission:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :er :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:request' :er :w prOnto:copyOf(:z)) & (rioOnto:exceptionCha3Sec1Art12Par2 :ep)
	 & (rioOnto:exceptionCha2Art11Par2 :ep),

	(rioOnto:RexistAtTime :ech :t2) & (rioOnto:>= :t2 :t1) & (prOnto:charge' :ech :y :w :f) & (prOnto:fee :f)
	 & (prOnto:reasonable :f)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":er">er</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A855">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A856">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A857">
              <ruleml:Rel iri="prOnto:request" />
              <ruleml:Var keyref=":er" />
              <ruleml:Var keyref=":w" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:copyOf" />
                <ruleml:Var keyref=":z" />
              </ruleml:Expr>
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec1Art12Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha2Art11Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Permission iri="rioOnto:Permission">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":ech">ech</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A858">
                <ruleml:Rel iri="prOnto:charge" />
                <ruleml:Var keyref=":ech" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var key=":f">f</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:fee" />
                <ruleml:Var keyref=":f" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:reasonable" />
                <ruleml:Var keyref=":f" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Permission>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements81Formula3">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :en :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:Communicate' :en :y :w prOnto:copyOf(:z)) & (rioOnto:exceptionCha3Sec2Art15Par3 :en)
	 & (rioOnto:exceptionCha3Sec1Art12Par2 :ep) & (rioOnto:exceptionCha2Art11Par2 :ep),

	(rioOnto:RexistAtTime :ef :t2) & (rioOnto:>= :t2 :t1) & (prOnto:electronicForm' :ef prOnto:copyOf(:z))
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":en">en</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A859">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A860">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A861">
              <ruleml:Rel iri="prOnto:Communicate" />
              <ruleml:Var keyref=":en" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":w" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:copyOf" />
                <ruleml:Var keyref=":z" />
              </ruleml:Expr>
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec2Art15Par3" />
                <ruleml:Var keyref=":en" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec1Art12Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha2Art11Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":ef">ef</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A862">
                <ruleml:Rel iri="prOnto:electronicForm" />
                <ruleml:Var keyref=":ef" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:copyOf" />
                  <ruleml:Var keyref=":z" />
                </ruleml:Expr>
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:ConstitutiveStatement key="statements81Formula4">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :en :er :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:Communicate' :en :y :w prOnto:copyOf(:z)) & (prOnto:request' :er :w :enn)
	 & (rioOnto:not :enn :ef) & (prOnto:electronicForm' :ef prOnto:copyOf(:z)) & (rioOnto:exceptionCha2Art11Par2 :ep),

	(prOnto:rioOnto:exceptionCha3Sec2Art15Par3 :en)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":en">en</ruleml:Var>
              <ruleml:Var key=":er">er</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A863">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A864">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A865">
              <ruleml:Rel iri="prOnto:Communicate" />
              <ruleml:Var keyref=":en" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":w" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:copyOf" />
                <ruleml:Var keyref=":z" />
              </ruleml:Expr>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A866">
              <ruleml:Rel iri="prOnto:request" />
              <ruleml:Var keyref=":er" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var key=":enn">enn</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":enn" />
              <ruleml:Var key=":ef">ef</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A867">
              <ruleml:Rel iri="prOnto:electronicForm" />
              <ruleml:Var keyref=":ef" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:copyOf" />
                <ruleml:Var keyref=":z" />
              </ruleml:Expr>
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha2Art11Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:Atom>
            <ruleml:Rel iri="prOnto:rioOnto:exceptionCha3Sec2Art15Par3" />
            <ruleml:Var keyref=":en" />
          </ruleml:Atom>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
    <lrml:PrescriptiveStatement key="statements81Formula5">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :en :er :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:Communicate' :en :y :w prOnto:copyOf(:z)) & (prOnto:request' :er :w :enn)
	 & (rioOnto:not :enn :ef) & (prOnto:electronicForm' :ef prOnto:copyOf(:z)) & (rioOnto:exceptionCha3Sec1Art12Par2 :ep)
	 & (rioOnto:exceptionCha2Art11Par2 :ep),

	(rioOnto:RexistAtTime :enn :t1)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":en">en</ruleml:Var>
              <ruleml:Var key=":er">er</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A868">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A869">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A870">
              <ruleml:Rel iri="prOnto:Communicate" />
              <ruleml:Var keyref=":en" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":w" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:copyOf" />
                <ruleml:Var keyref=":z" />
              </ruleml:Expr>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A871">
              <ruleml:Rel iri="prOnto:request" />
              <ruleml:Var keyref=":er" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var key=":enn">enn</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":enn" />
              <ruleml:Var key=":ef">ef</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A872">
              <ruleml:Rel iri="prOnto:electronicForm" />
              <ruleml:Var keyref=":ef" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:copyOf" />
                <ruleml:Var keyref=":z" />
              </ruleml:Expr>
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec1Art12Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha2Art11Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var keyref=":enn" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements82">
    <lrml:ConstitutiveStatement key="statements82Formula1">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :er :eca :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:request' :er :w prOnto:copyOf(:z)) & (rioOnto:cause' :eca :er :evf)
	 & (prOnto:violationOf' :evf :erf) & (prOnto:rightsAndFreedomsOf' :erf :k) & (rioOnto:exceptionCha2Art11Par2 :ep),

	(prOnto:exceptionCha3Sec2Art15Par4 :en)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":er">er</ruleml:Var>
              <ruleml:Var key=":eca">eca</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A873">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A874">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A875">
              <ruleml:Rel iri="prOnto:request" />
              <ruleml:Var keyref=":er" />
              <ruleml:Var keyref=":w" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:copyOf" />
                <ruleml:Var keyref=":z" />
              </ruleml:Expr>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A876">
              <ruleml:Rel iri="rioOnto:cause" />
              <ruleml:Var keyref=":eca" />
              <ruleml:Var keyref=":er" />
              <ruleml:Var key=":evf">evf</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A877">
              <ruleml:Rel iri="prOnto:violationOf" />
              <ruleml:Var keyref=":evf" />
              <ruleml:Var key=":erf">erf</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A878">
              <ruleml:Rel iri="prOnto:rightsAndFreedomsOf" />
              <ruleml:Var keyref=":erf" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha2Art11Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:Atom>
            <ruleml:Rel iri="prOnto:exceptionCha3Sec2Art15Par4" />
            <ruleml:Var keyref=":en" />
          </ruleml:Atom>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements83">
    <lrml:PrescriptiveStatement key="statements83Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :er :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:request' :er :w :ere) & (prOnto:rectify' :ere :w :z)
	 & (rioOnto:exceptionCha3Sec1Art12Par2 :ep) & (rioOnto:exceptionCha2Art11Par2 :ep),

	(rioOnto:RexistAtTime :ere :t2) & (rioOnto:>= :t2 :t1) & (prOnto:nonDelayed :ere)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":er">er</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A879">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A880">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A881">
              <ruleml:Rel iri="prOnto:request" />
              <ruleml:Var keyref=":er" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":ere" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A882">
              <ruleml:Rel iri="prOnto:rectify" />
              <ruleml:Var keyref=":ere" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec1Art12Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha2Art11Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var keyref=":ere" />
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:nonDelayed" />
                <ruleml:Var keyref=":ere" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements83Formula2">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :er :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:request' :er :w :eco) & (prOnto:complete' :eco :w :z)
	 & (rioOnto:exceptionCha3Sec1Art12Par2 :ep) & (rioOnto:exceptionCha2Art11Par2 :ep),

	(rioOnto:RexistAtTime :eco :t2) & (rioOnto:>= :t2 :t1) & (prOnto:nonDelayed :eco)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":er">er</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A883">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A884">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A885">
              <ruleml:Rel iri="prOnto:request" />
              <ruleml:Var keyref=":er" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var key=":eco">eco</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A886">
              <ruleml:Rel iri="prOnto:complete" />
              <ruleml:Var keyref=":eco" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec1Art12Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha2Art11Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var keyref=":eco" />
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:nonDelayed" />
                <ruleml:Var keyref=":eco" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements84">
    <lrml:PrescriptiveStatement key="statements84Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :er :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:request' :er :y :era) & (prOnto:erase' :era :w :z)
	 & (rioOnto:exceptionCha3Sec3Art17Par3 :z) & (rioOnto:exceptionCha3Sec1Art12Par2 :ep) & (rioOnto:exceptionCha2Art11Par2 :ep),

	(rioOnto:RexistAtTime :era :t2) & (rioOnto:>= :t2 :t1) & (prOnto:nonDelayed :era)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":er">er</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A887">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A888">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A889">
              <ruleml:Rel iri="prOnto:request" />
              <ruleml:Var keyref=":er" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":era">era</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A890">
              <ruleml:Rel iri="prOnto:erase" />
              <ruleml:Var keyref=":era" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec3Art17Par3" />
                <ruleml:Var keyref=":z" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec1Art12Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha2Art11Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var keyref=":era" />
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:nonDelayed" />
                <ruleml:Var keyref=":era" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements85">
    <lrml:PrescriptiveStatement key="statements85Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :en :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:Purpose :epu) & (prOnto:isBasedOn :ep :epu)
	 & (rioOnto:not :en :ei) & (rioOnto:imply :ei :z :epu) & (rioOnto:exceptionCha3Sec3Art17Par3 :z)
	 & (rioOnto:exceptionCha3Sec3Art18Par1Point3 :z) & (rioOnto:exceptionCha3Sec1Art12Par2 :ep) & (rioOnto:exceptionCha2Art11Par2 :ep),

	(rioOnto:RexistAtTime :era :t2) & (rioOnto:>= :t2 :t1) & (prOnto:erase' :era :y :z) & (prOnto:nonDelayed :era)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":en">en</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A891">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A892">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Purpose" />
              <ruleml:Var key=":epu">epu</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isBasedOn" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":epu" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en" />
              <ruleml:Var key=":ei">ei</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:imply" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":epu" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec3Art17Par3" />
                <ruleml:Var keyref=":z" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec3Art18Par1Point3" />
                <ruleml:Var keyref=":z" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec1Art12Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha2Art11Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":era">era</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A893">
                <ruleml:Rel iri="prOnto:erase" />
                <ruleml:Var keyref=":era" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":z" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:nonDelayed" />
                <ruleml:Var keyref=":era" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements86">
    <lrml:PrescriptiveStatement key="statements86Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :ew :en :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:Purpose :epu) & (prOnto:isBasedOn :ep :epu)
	 & (prOnto:withdrawConsentFrom' :ew :w :epu) & (rioOnto:not :en :eca) & (rioOnto:cause' :eca :l :ep)
	 & (prOnto:legalRequirement :l) & (rioOnto:exceptionCha3Sec3Art17Par3 :z) & (rioOnto:exceptionCha3Sec1Art12Par2 :ep)
	 & (rioOnto:exceptionCha2Art11Par2 :ep),

	(rioOnto:RexistAtTime :era :t2) & (rioOnto:>= :t2 :t1) & (prOnto:erase' :era :y :z) & (prOnto:nonDelayed :era)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":ew">ew</ruleml:Var>
              <ruleml:Var key=":en">en</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A894">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A895">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Purpose" />
              <ruleml:Var key=":epu">epu</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isBasedOn" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":epu" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A896">
              <ruleml:Rel iri="prOnto:withdrawConsentFrom" />
              <ruleml:Var keyref=":ew" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":epu" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en" />
              <ruleml:Var key=":eca">eca</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A897">
              <ruleml:Rel iri="rioOnto:cause" />
              <ruleml:Var keyref=":eca" />
              <ruleml:Var key=":l">l</ruleml:Var>
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:legalRequirement" />
              <ruleml:Var keyref=":l" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec3Art17Par3" />
                <ruleml:Var keyref=":z" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec1Art12Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha2Art11Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":era">era</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A898">
                <ruleml:Rel iri="prOnto:erase" />
                <ruleml:Var keyref=":era" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":z" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:nonDelayed" />
                <ruleml:Var keyref=":era" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements87">
    <lrml:PrescriptiveStatement key="statements87Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :epe :eor :eh :ei :ew :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:execute' :ee :y :et) & (rioOnto:Permitted' :epe :y :et :t1)
	 & (rioOnto:or :eor :er1 :er2) & (prOnto:relatedTo' :er1 :et :pi) & (prOnto:relatedTo' :er2 :et :pp)
	 & (prOnto:PublicInterest :pi) & (prOnto:publicPowers :pp) & (prOnto:hold' :eh :y :pp)
	 & (rioOnto:imply :ei :y :pp) & (prOnto:withdrawConsentFrom' :ew :w :ep) & (rioOnto:exceptionCha3Sec4Art21Par1NW :ep)
	 & (rioOnto:exceptionCha3Sec3Art17Par3 :z) & (rioOnto:exceptionCha3Sec1Art12Par2 :ep) & (rioOnto:exceptionCha2Art11Par2 :ep),

	(rioOnto:RexistAtTime :era :t2) & (rioOnto:>= :t2 :t1) & (prOnto:erase' :era :y :z) & (prOnto:nonDelayed :era)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":epe">epe</ruleml:Var>
              <ruleml:Var key=":eor">eor</ruleml:Var>
              <ruleml:Var key=":eh">eh</ruleml:Var>
              <ruleml:Var key=":ei">ei</ruleml:Var>
              <ruleml:Var key=":ew">ew</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A899">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A900">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A901">
              <ruleml:Rel iri="prOnto:execute" />
              <ruleml:Var key=":ee">ee</ruleml:Var>
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":et">et</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A902">
              <ruleml:Rel iri="rioOnto:Permitted" />
              <ruleml:Var keyref=":epe" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":et">et</ruleml:Var>
              <ruleml:Var keyref=":t1" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eor" />
              <ruleml:Var keyref=":er1" />
              <ruleml:Var keyref=":er2" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A903">
              <ruleml:Rel iri="prOnto:relatedTo" />
              <ruleml:Var keyref=":er1" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var key=":pi">pi</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A904">
              <ruleml:Rel iri="prOnto:relatedTo" />
              <ruleml:Var keyref=":er2" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var key=":pp">pp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PublicInterest" />
              <ruleml:Var keyref=":pi" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:publicPowers" />
              <ruleml:Var keyref=":pp" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A905">
              <ruleml:Rel iri="prOnto:hold" />
              <ruleml:Var keyref=":eh" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":pp" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:imply" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":pp" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec4Art21Par1NW" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec3Art17Par3" />
                <ruleml:Var keyref=":z" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec1Art12Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Atom keyref=":A906">
              <ruleml:Rel iri="prOnto:withdrawConsentFrom" />
              <ruleml:Var keyref=":ew" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha2Art11Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":era">era</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A907">
                <ruleml:Rel iri="prOnto:erase" />
                <ruleml:Var keyref=":era" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":z" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:nonDelayed" />
                <ruleml:Var keyref=":era" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements87Formula2">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :eor :en :ei :ew :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:thirdParty :k) & (prOnto:PersonalDataProcessing' :ep :x :z) & (rioOnto:or :eor :ei1 :ei2)
	 & (prOnto:legitimateInterestOf' :ei1 :y) & (prOnto:legitimateInterestOf' :ei2 :k) & (rioOnto:not :en :ea)
	 & (rioOnto:and :ea :er1 :er2) & (prOnto:riskFor' :er1 :ei3) & (prOnto:legitimateInterestOf' :ei3 :w)
	 & (prOnto:riskFor' :er2 :erf) & (prOnto:rightsAndFreedomsOf' :erf :w) & (rioOnto:imply :ei :eor :ep)
	 & (prOnto:withdrawConsentFrom' :w :ew :ep) & (rioOnto:exceptionCha3Sec4Art21Par1NW :ep) & (rioOnto:exceptionCha3Sec3Art17Par3 :z)
	 & (rioOnto:exceptionCha3Sec1Art12Par2 :ep) & (rioOnto:exceptionCha2Art11Par2 :ep),

	(rioOnto:RexistAtTime :era :t2) & (rioOnto:>= :t2 :t1) & (prOnto:erase' :era :y :z) & (prOnto:nonDelayed :era)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":eor">eor</ruleml:Var>
              <ruleml:Var key=":en">en</ruleml:Var>
              <ruleml:Var key=":ei">ei</ruleml:Var>
              <ruleml:Var key=":ew">ew</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A908">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:thirdParty" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A909">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eor" />
              <ruleml:Var key=":ei1">ei1</ruleml:Var>
              <ruleml:Var key=":ei2">ei2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A910">
              <ruleml:Rel iri="prOnto:legitimateInterestOf" />
              <ruleml:Var keyref=":ei1" />
              <ruleml:Var keyref=":y" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A911">
              <ruleml:Rel iri="prOnto:legitimateInterestOf" />
              <ruleml:Var keyref=":ei2" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en" />
              <ruleml:Var key=":ea">ea</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":ea" />
              <ruleml:Var key=":er1">er1</ruleml:Var>
              <ruleml:Var key=":er2">er2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A912">
              <ruleml:Rel iri="prOnto:riskFor" />
              <ruleml:Var keyref=":er1" />
              <ruleml:Var key=":ei3">ei3</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A913">
              <ruleml:Rel iri="prOnto:legitimateInterestOf" />
              <ruleml:Var keyref=":ei3" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A914">
              <ruleml:Rel iri="prOnto:riskFor" />
              <ruleml:Var keyref=":er2" />
              <ruleml:Var key=":erf">erf</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A915">
              <ruleml:Rel iri="prOnto:rightsAndFreedomsOf" />
              <ruleml:Var keyref=":erf" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:imply" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var keyref=":eor" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec4Art21Par1NW" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec3Art17Par3" />
                <ruleml:Var keyref=":z" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec1Art12Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Atom keyref=":A916">
              <ruleml:Rel iri="prOnto:withdrawConsentFrom" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":ew" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha2Art11Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":era">era</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A917">
                <ruleml:Rel iri="prOnto:erase" />
                <ruleml:Var keyref=":era" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":z" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:nonDelayed" />
                <ruleml:Var keyref=":era" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements87Formula3">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :ei :ew :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:publicAuthority :k) & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:execute' :ee :k :et)
	 & (rioOnto:imply :ei :et :ep) & (prOnto:withdrawConsentFrom' :w :ew :ep) & (rioOnto:exceptionCha3Sec4Art21Par1NW :ep)
	 & (rioOnto:exceptionCha3Sec3Art17Par3 :z) & (rioOnto:exceptionCha3Sec1Art12Par2 :ep) & (rioOnto:exceptionCha2Art11Par2 :ep),

	(rioOnto:RexistAtTime :era :t2) & (rioOnto:>= :t2 :t1) & (prOnto:erase' :era :y :z) & (prOnto:nonDelayed :era)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":ei">ei</ruleml:Var>
              <ruleml:Var key=":ew">ew</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A918">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:publicAuthority" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A919">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A920">
              <ruleml:Rel iri="prOnto:execute" />
              <ruleml:Var key=":ee">ee</ruleml:Var>
              <ruleml:Var keyref=":k" />
              <ruleml:Var key=":et">et</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:imply" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec4Art21Par1NW" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec3Art17Par3" />
                <ruleml:Var keyref=":z" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec1Art12Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Atom keyref=":A921">
              <ruleml:Rel iri="prOnto:withdrawConsentFrom" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":ew" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha2Art11Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":era">era</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A922">
                <ruleml:Rel iri="prOnto:erase" />
                <ruleml:Var keyref=":era" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":z" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:nonDelayed" />
                <ruleml:Var keyref=":era" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements87Formula4">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :ew :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:Marketing :epu) & (prOnto:isBasedOn :ep :epu)
	 & (prOnto:withdrawConsentFrom' :w :ew :ep) & (rioOnto:exceptionCha3Sec3Art17Par3 :z) & (rioOnto:exceptionCha3Sec1Art12Par2 :ep)
	 & (rioOnto:exceptionCha2Art11Par2 :ep),

	(rioOnto:RexistAtTime :era :t2) & (rioOnto:>= :t2 :t1) & (prOnto:erase' :era :y :z) & (prOnto:nonDelayed :era)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":ew">ew</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A923">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A924">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Marketing" />
              <ruleml:Var key=":epu">epu</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isBasedOn" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":epu" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec3Art17Par3" />
                <ruleml:Var keyref=":z" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec1Art12Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Atom keyref=":A925">
              <ruleml:Rel iri="prOnto:withdrawConsentFrom" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":ew" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha2Art11Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":era">era</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A926">
                <ruleml:Rel iri="prOnto:erase" />
                <ruleml:Var keyref=":era" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":z" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:nonDelayed" />
                <ruleml:Var keyref=":era" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements88">
    <lrml:PrescriptiveStatement key="statements88Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :en :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (rioOnto:not :en :el) & (prOnto:lawful' :el :ep)
	 & (rioOnto:exceptionCha3Sec3Art17Par3 :z) & (rioOnto:exceptionCha3Sec3Art18Par1Point2 :z) & (rioOnto:exceptionCha3Sec1Art12Par2 :ep)
	 & (rioOnto:exceptionCha2Art11Par2 :ep),

	(rioOnto:RexistAtTime :era :t2) & (rioOnto:>= :t2 :t1) & (prOnto:erase' :era :y :z) & (prOnto:nonDelayed :era)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":en">en</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A927">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A928">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en" />
              <ruleml:Var key=":el">el</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A929">
              <ruleml:Rel iri="prOnto:lawful" />
              <ruleml:Var keyref=":el" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec3Art17Par3" />
                <ruleml:Var keyref=":z" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec3Art18Par1Point2" />
                <ruleml:Var keyref=":z" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec1Art12Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha2Art11Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":era">era</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A930">
                <ruleml:Rel iri="prOnto:erase" />
                <ruleml:Var keyref=":era" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":z" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:nonDelayed" />
                <ruleml:Var keyref=":era" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements89">
    <lrml:PrescriptiveStatement key="statements89Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :ei :eor :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:legalRequirement :lr) & (rioOnto:imply :ei :lr :eob :eob)
	 & (rioOnto:Obliged' :eob :y :era :t1) & (prOnto:erase' :era :y :z) & (rioOnto:or :eor :er1 :er2)
	 & (prOnto:relatedTo' :er1 :lr EuropeanUnion) & (prOnto:relatedTo' :er2 :lr prOnto:MSof(:y)) & (rioOnto:exceptionCha3Sec3Art17Par3 :z)
	 & (rioOnto:exceptionCha3Sec1Art12Par2 :ep) & (rioOnto:exceptionCha2Art11Par2 :ep),

	(rioOnto:RexistAtTime :era :t2) & (rioOnto:>= :t2 :t1) & (prOnto:nonDelayed :era)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":ei">ei</ruleml:Var>
              <ruleml:Var key=":eor">eor</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A931">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A932">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:legalRequirement" />
              <ruleml:Var key=":lr">lr</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:imply" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var keyref=":lr" />
              <ruleml:Var key=":eob">eob</ruleml:Var>
              <ruleml:Var keyref=":eob" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A933">
              <ruleml:Rel iri="rioOnto:Obliged" />
              <ruleml:Var keyref=":eob" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":era">era</ruleml:Var>
              <ruleml:Var keyref=":t1" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A934">
              <ruleml:Rel iri="prOnto:erase" />
              <ruleml:Var keyref=":era" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eor" />
              <ruleml:Var key=":er1">er1</ruleml:Var>
              <ruleml:Var key=":er2">er2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A935">
              <ruleml:Rel iri="prOnto:relatedTo" />
              <ruleml:Var keyref=":er1" />
              <ruleml:Var keyref=":lr" />
              <ruleml:Ind>EuropeanUnion</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A936">
              <ruleml:Rel iri="prOnto:relatedTo" />
              <ruleml:Var keyref=":er2" />
              <ruleml:Var keyref=":lr" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:MSof" />
                <ruleml:Var keyref=":y" />
              </ruleml:Expr>
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec3Art17Par3" />
                <ruleml:Var keyref=":z" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec1Art12Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha2Art11Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var keyref=":era" />
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:nonDelayed" />
                <ruleml:Var keyref=":era" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements90">
    <lrml:PrescriptiveStatement key="statements90Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :ehc :eau :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:Purpose :epu) & (prOnto:isBasedOn :ep :epu)
	 & (prOnto:consent :c) & (prOnto:hasConsented' :ehc :w :c) & (prOnto:authorizedBy' :eau :epu :c)
	 & (rioOnto:< prOnto:ageOf(:w) prOnto:minAgeForConsent(:c)) & (rioOnto:exceptionCha3Sec3Art17Par3 :z) & (rioOnto:exceptionCha3Sec1Art12Par2 :ep)
	 & (rioOnto:exceptionCha2Art11Par2 :ep),

	(rioOnto:RexistAtTime :era :t2) & (rioOnto:>= :t2 :t1) & (prOnto:erase' :era :y :z) & (prOnto:nonDelayed :era)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":ehc">ehc</ruleml:Var>
              <ruleml:Var key=":eau">eau</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A937">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A938">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Purpose" />
              <ruleml:Var key=":epu">epu</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isBasedOn" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":epu" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:consent" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A939">
              <ruleml:Rel iri="prOnto:hasConsented" />
              <ruleml:Var keyref=":ehc" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A940">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":eau" />
              <ruleml:Var keyref=":epu" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:&lt;" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:ageOf" />
                <ruleml:Var keyref=":w" />
              </ruleml:Expr>
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:minAgeForConsent" />
                <ruleml:Var keyref=":c" />
              </ruleml:Expr>
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec3Art17Par3" />
                <ruleml:Var keyref=":z" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec1Art12Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha2Art11Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":era">era</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A941">
                <ruleml:Rel iri="prOnto:erase" />
                <ruleml:Var keyref=":era" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":z" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:nonDelayed" />
                <ruleml:Var keyref=":era" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements91">
    <lrml:PrescriptiveStatement key="statements91Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :eob :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y2 prOnto:copyOf(:z)) & (prOnto:Controller :y1 :z) & (prOnto:Processor :x)
	 & (prOnto:nominates' :edp :y1 :x) & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:public :z)
	 & (rioOnto:Obliged' :eob :y1 :era1 :t1) & (prOnto:erase' :era1 :w :z) & (rioOnto:exceptionCha3Sec3Art17Par3 :z)
	 & (rioOnto:exceptionCha3Sec1Art12Par2 :ep) & (rioOnto:exceptionCha2Art11Par2 :ep),

	(rioOnto:RexistAtTime :en :t2) & (rioOnto:>= :t2 :t1) & (prOnto:Communicate' :en :y1 :y2 :era2) & (prOnto:reasonable :en)
	 & (prOnto:erase' :era2 :w prOnto:copyOf(:z))
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":eob">eob</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y2">y2</ruleml:Var>
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:copyOf" />
                <ruleml:Var keyref=":z" />
              </ruleml:Expr>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y1">y1</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A942">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y1" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A943">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:public" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A944">
              <ruleml:Rel iri="rioOnto:Obliged" />
              <ruleml:Var keyref=":eob" />
              <ruleml:Var keyref=":y1" />
              <ruleml:Var key=":era1">era1</ruleml:Var>
              <ruleml:Var keyref=":t1" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A945">
              <ruleml:Rel iri="prOnto:erase" />
              <ruleml:Var keyref=":era1" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec3Art17Par3" />
                <ruleml:Var keyref=":z" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec1Art12Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha2Art11Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":en">en</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A946">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en" />
                <ruleml:Var keyref=":y1" />
                <ruleml:Var keyref=":y2" />
                <ruleml:Var key=":era2">era2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:reasonable" />
                <ruleml:Var keyref=":en" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A947">
                <ruleml:Rel iri="prOnto:erase" />
                <ruleml:Var keyref=":era2" />
                <ruleml:Var keyref=":w" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:copyOf" />
                  <ruleml:Var keyref=":z" />
                </ruleml:Expr>
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements92">
    <lrml:ConstitutiveStatement key="statements92Formula1">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :eca) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (rioOnto:cause' :eca :era :ev) & (prOnto:erase' :era :w :z)
	 & (prOnto:violationOf' :ev :f) & (prOnto:freedomOfExprAndInfo :f) & (rioOnto:exceptionCha2Art11Par2 :ep),

	(rioOnto:exceptionCha3Sec3Art17Par3 :z)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":eca">eca</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A948">
              <ruleml:Rel iri="rioOnto:cause" />
              <ruleml:Var keyref=":eca" />
              <ruleml:Var key=":era">era</ruleml:Var>
              <ruleml:Var key=":ev">ev</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A949">
              <ruleml:Rel iri="prOnto:erase" />
              <ruleml:Var keyref=":era" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A950">
              <ruleml:Rel iri="prOnto:violationOf" />
              <ruleml:Var keyref=":ev" />
              <ruleml:Var key=":f">f</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:freedomOfExprAndInfo" />
              <ruleml:Var keyref=":f" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha2Art11Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:Atom>
            <ruleml:Rel iri="rioOnto:exceptionCha3Sec3Art17Par3" />
            <ruleml:Var keyref=":z" />
          </ruleml:Atom>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements93">
    <lrml:ConstitutiveStatement key="statements93Formula1">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :ei :eor :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:legalRequirement :lr) & (rioOnto:imply :ei :lr :eob :eob)
	 & (rioOnto:Obliged' :eob :y :era :t1) & (prOnto:erase' :era :y :z) & (rioOnto:or :eor :er1 :er2)
	 & (prOnto:relatedTo' :er1 :lr EuropeanUnion) & (prOnto:relatedTo' :er2 :lr prOnto:MSof(:y)) & (rioOnto:exceptionCha2Art11Par2 :ep),

	(rioOnto:exceptionCha3Sec3Art17Par3 :z)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":ei">ei</ruleml:Var>
              <ruleml:Var key=":eor">eor</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A951">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A952">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:legalRequirement" />
              <ruleml:Var key=":lr">lr</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:imply" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var keyref=":lr" />
              <ruleml:Var key=":eob">eob</ruleml:Var>
              <ruleml:Var keyref=":eob" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A953">
              <ruleml:Rel iri="rioOnto:Obliged" />
              <ruleml:Var keyref=":eob" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":era">era</ruleml:Var>
              <ruleml:Var keyref=":t1" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A954">
              <ruleml:Rel iri="prOnto:erase" />
              <ruleml:Var keyref=":era" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eor" />
              <ruleml:Var key=":er1">er1</ruleml:Var>
              <ruleml:Var key=":er2">er2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A955">
              <ruleml:Rel iri="prOnto:relatedTo" />
              <ruleml:Var keyref=":er1" />
              <ruleml:Var keyref=":lr" />
              <ruleml:Ind>EuropeanUnion</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A956">
              <ruleml:Rel iri="prOnto:relatedTo" />
              <ruleml:Var keyref=":er2" />
              <ruleml:Var keyref=":lr" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:MSof" />
                <ruleml:Var keyref=":y" />
              </ruleml:Expr>
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha2Art11Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:Atom>
            <ruleml:Rel iri="rioOnto:exceptionCha3Sec3Art17Par3" />
            <ruleml:Var keyref=":z" />
          </ruleml:Atom>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
    <lrml:ConstitutiveStatement key="statements93Formula2">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :epe :eor :eh :ei :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (rioOnto:Permitted' :epe :y :ee :t1) & (prOnto:execute' :ee :y :et)
	 & (rioOnto:or :eor :er1 :er2) & (prOnto:relatedTo' :er1 :et :pi) & (prOnto:relatedTo' :er2 :et :pp)
	 & (prOnto:PublicInterest :pi) & (prOnto:publicPowers :pp) & (prOnto:hold' :eh :y :pp)
	 & (rioOnto:imply :ei :y :pp) & (rioOnto:exceptionCha3Sec4Art21Par1 :ep) & (rioOnto:exceptionCha2Art11Par2 :ep),

	(rioOnto:exceptionCha3Sec3Art17Par3 :z)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":epe">epe</ruleml:Var>
              <ruleml:Var key=":eor">eor</ruleml:Var>
              <ruleml:Var key=":eh">eh</ruleml:Var>
              <ruleml:Var key=":ei">ei</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A957">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A958">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A959">
              <ruleml:Rel iri="rioOnto:Permitted" />
              <ruleml:Var keyref=":epe" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":ee">ee</ruleml:Var>
              <ruleml:Var keyref=":t1" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A960">
              <ruleml:Rel iri="prOnto:execute" />
              <ruleml:Var keyref=":ee" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":et">et</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eor" />
              <ruleml:Var keyref=":er1" />
              <ruleml:Var keyref=":er2" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A961">
              <ruleml:Rel iri="prOnto:relatedTo" />
              <ruleml:Var keyref=":er1" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var key=":pi">pi</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A962">
              <ruleml:Rel iri="prOnto:relatedTo" />
              <ruleml:Var keyref=":er2" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var key=":pp">pp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PublicInterest" />
              <ruleml:Var keyref=":pi" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:publicPowers" />
              <ruleml:Var keyref=":pp" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A963">
              <ruleml:Rel iri="prOnto:hold" />
              <ruleml:Var keyref=":eh" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":pp" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:imply" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":pp" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec4Art21Par1" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha2Art11Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:Atom>
            <ruleml:Rel iri="rioOnto:exceptionCha3Sec3Art17Par3" />
            <ruleml:Var keyref=":z" />
          </ruleml:Atom>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements94">
    <lrml:ConstitutiveStatement key="statements94Formula1">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :ei :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (rioOnto:imply :ei :ee :ep) & (prOnto:execute' :ee :k :et)
	 & (prOnto:relatedTo :et :pi) & (prOnto:PublicInterest :pi) & (prOnto:relatedTo :et :ph)
	 & (prOnto:publicHealth :ph) & (rioOnto:exceptionCha2Art11Par2 :ep),

	(rioOnto:exceptionCha3Sec3Art17Par3 :z)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":ei">ei</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A964">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A965">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:imply" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var key=":ee">ee</ruleml:Var>
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A966">
              <ruleml:Rel iri="prOnto:execute" />
              <ruleml:Var keyref=":ee" />
              <ruleml:Var key=":k">k</ruleml:Var>
              <ruleml:Var key=":et">et</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:relatedTo" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var key=":pi">pi</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PublicInterest" />
              <ruleml:Var keyref=":pi" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:relatedTo" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var key=":ph">ph</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:publicHealth" />
              <ruleml:Var keyref=":ph" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha2Art11Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:Atom>
            <ruleml:Rel iri="rioOnto:exceptionCha3Sec3Art17Par3" />
            <ruleml:Var keyref=":z" />
          </ruleml:Atom>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements95">
    <lrml:ConstitutiveStatement key="statements95Formula1">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :eor :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (rioOnto:or :eor :ebo1 :ebo2 :ebo3) & (prOnto:isBasedOn' :ebo1 :ep :epi)
	 & (prOnto:PublicInterest :epi) & (prOnto:isBasedOn' :ebo2 :ep :ers) & (prOnto:Research :ers)
	 & (prOnto:isBasedOn' :ebo3 :ep :est) & (prOnto:Statistic :est) & (rioOnto:cause' :eca :era :enp)
	 & (prOnto:erase' :era :w :z) & (rioOnto:not :enp :ep) & (rioOnto:exceptionCha2Art11Par2 :ep),

	(rioOnto:exceptionCha3Sec3Art17Par3 :z)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":eor">eor</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A967">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A968">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eor" />
              <ruleml:Var key=":ebo1">ebo1</ruleml:Var>
              <ruleml:Var key=":ebo2">ebo2</ruleml:Var>
              <ruleml:Var key=":ebo3">ebo3</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A969">
              <ruleml:Rel iri="prOnto:isBasedOn" />
              <ruleml:Var keyref=":ebo1" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var key=":epi">epi</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PublicInterest" />
              <ruleml:Var keyref=":epi" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A970">
              <ruleml:Rel iri="prOnto:isBasedOn" />
              <ruleml:Var keyref=":ebo2" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var key=":ers">ers</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Research" />
              <ruleml:Var keyref=":ers" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A971">
              <ruleml:Rel iri="prOnto:isBasedOn" />
              <ruleml:Var keyref=":ebo3" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var key=":est">est</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Statistic" />
              <ruleml:Var keyref=":est" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A972">
              <ruleml:Rel iri="rioOnto:cause" />
              <ruleml:Var keyref=":eca" />
              <ruleml:Var key=":era">era</ruleml:Var>
              <ruleml:Var key=":enp">enp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A973">
              <ruleml:Rel iri="prOnto:erase" />
              <ruleml:Var keyref=":era" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":enp" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha2Art11Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:Atom>
            <ruleml:Rel iri="rioOnto:exceptionCha3Sec3Art17Par3" />
            <ruleml:Var keyref=":z" />
          </ruleml:Atom>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements96">
    <lrml:ConstitutiveStatement key="statements96Formula1">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ei) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (rioOnto:imply :ei :ep :l) & (prOnto:legalClaim :l)
	 & (rioOnto:exceptionCha2Art11Par2 :ep),

	(rioOnto:exceptionCha3Sec3Art17Par3 :z)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ei">ei</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:imply" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":l">l</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:legalClaim" />
              <ruleml:Var keyref=":l" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha2Art11Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:Atom>
            <ruleml:Rel iri="rioOnto:exceptionCha3Sec3Art17Par3" />
            <ruleml:Var keyref=":z" />
          </ruleml:Atom>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements97">
    <lrml:PrescriptiveStatement key="statements97Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :enr :er :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (rioOnto:not :enr :eaw) & (prOnto:accurate' :eaw :z)
	 & (prOnto:request' :er :y :eli) & (prOnto:limit' :eli :w :z) & (rioOnto:exceptionCha3Sec1Art12Par2 :ep)
	 & (rioOnto:exceptionCha2Art11Par2 :ep),

	(rioOnto:RexistAtTime :eli :t2) & (rioOnto:>= :t2 :t1)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":enr">enr</ruleml:Var>
              <ruleml:Var key=":er">er</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A974">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A975">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":enr" />
              <ruleml:Var key=":eaw">eaw</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A976">
              <ruleml:Rel iri="prOnto:accurate" />
              <ruleml:Var keyref=":eaw" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A977">
              <ruleml:Rel iri="prOnto:request" />
              <ruleml:Var keyref=":er" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":eli">eli</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A978">
              <ruleml:Rel iri="prOnto:limit" />
              <ruleml:Var keyref=":eli" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec1Art12Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha2Art11Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var keyref=":eli" />
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements98">
    <lrml:PrescriptiveStatement key="statements98Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :enl :er :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (rioOnto:not :enl :el) & (prOnto:lawful' :el :ep)
	 & (prOnto:request' :er :y :eli) & (prOnto:limit' :eli :w :z) & (rioOnto:exceptionCha3Sec1Art12Par2 :ep)
	 & (rioOnto:exceptionCha2Art11Par2 :ep),

	(rioOnto:RexistAtTime :eli :t2) & (rioOnto:>= :t2 :t1)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":enl">enl</ruleml:Var>
              <ruleml:Var key=":er">er</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A979">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A980">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":enl" />
              <ruleml:Var key=":el">el</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A981">
              <ruleml:Rel iri="prOnto:lawful" />
              <ruleml:Var keyref=":el" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A982">
              <ruleml:Rel iri="prOnto:request" />
              <ruleml:Var keyref=":er" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":eli">eli</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A983">
              <ruleml:Rel iri="prOnto:limit" />
              <ruleml:Var keyref=":eli" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec1Art12Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha2Art11Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var keyref=":eli" />
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:ConstitutiveStatement key="statements98Formula2">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :enl :er :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (rioOnto:not :enl :el) & (prOnto:lawful' :el :ep)
	 & (prOnto:request' :er :y :eli) & (prOnto:limit' :eli :w :z) & (rioOnto:exceptionCha2Art11Par2 :ep),

	(rioOnto:exceptionCha3Sec3Art18Par1Point2 :z)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":enl">enl</ruleml:Var>
              <ruleml:Var key=":er">er</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A984">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A985">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":enl" />
              <ruleml:Var key=":el">el</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A986">
              <ruleml:Rel iri="prOnto:lawful" />
              <ruleml:Var keyref=":el" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A987">
              <ruleml:Rel iri="prOnto:request" />
              <ruleml:Var keyref=":er" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":eli">eli</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A988">
              <ruleml:Rel iri="prOnto:limit" />
              <ruleml:Var keyref=":eli" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha2Art11Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:exceptionCha3Sec3Art18Par1Point2" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements99">
    <lrml:PrescriptiveStatement key="statements99Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :en :er :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:Purpose :epu) & (prOnto:isBasedOn :ep :epu)
	 & (rioOnto:not :en :ei) & (rioOnto:imply :ei :z :epu) & (prOnto:relatedTo' :er :z :l)
	 & (prOnto:legalClaim :k) & (rioOnto:exceptionCha3Sec1Art12Par2 :ep) & (rioOnto:exceptionCha2Art11Par2 :ep),

	(rioOnto:RexistAtTime :eli :t2) & (rioOnto:>= :t2 :t1) & (prOnto:limit' :eli :w :z)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":en">en</ruleml:Var>
              <ruleml:Var key=":er">er</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A989">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A990">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Purpose" />
              <ruleml:Var key=":epu">epu</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isBasedOn" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":epu" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en" />
              <ruleml:Var key=":ei">ei</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:imply" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":epu" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A991">
              <ruleml:Rel iri="prOnto:relatedTo" />
              <ruleml:Var keyref=":er" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var key=":l">l</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:legalClaim" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec1Art12Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha2Art11Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":eli">eli</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A992">
                <ruleml:Rel iri="prOnto:limit" />
                <ruleml:Var keyref=":eli" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":z" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:ConstitutiveStatement key="statements99Formula2">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :en :er :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:Purpose :epu) & (prOnto:isBasedOn :ep :epu)
	 & (rioOnto:not :en :ei) & (rioOnto:imply :ei :z :epu) & (prOnto:relatedTo' :er :z :l)
	 & (prOnto:legalClaim :k) & (rioOnto:exceptionCha2Art11Par2 :ep),

	(rioOnto:exceptionCha3Sec3Art18Par1Point3 :z)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":en">en</ruleml:Var>
              <ruleml:Var key=":er">er</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A993">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A994">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Purpose" />
              <ruleml:Var key=":epu">epu</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isBasedOn" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":epu" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en" />
              <ruleml:Var key=":ei">ei</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:imply" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":epu" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A995">
              <ruleml:Rel iri="prOnto:relatedTo" />
              <ruleml:Var keyref=":er" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var key=":l">l</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:legalClaim" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha2Art11Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:exceptionCha3Sec3Art18Par1Point3" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements100">
    <lrml:PrescriptiveStatement key="statements100Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :epe :eor :eh :ei :ew :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:execute' :ee :y :et) & (rioOnto:Permitted' :epe :y :et :t1)
	 & (rioOnto:or :eor :er1 :er2) & (prOnto:relatedTo' :er1 :et :pi) & (prOnto:relatedTo' :er2 :et :pp)
	 & (prOnto:PublicInterest :pi) & (prOnto:publicPowers :pp) & (prOnto:hold' :eh :y :pp)
	 & (rioOnto:imply :ei :y :pp) & (prOnto:withdrawConsentFrom' :ew :w :ep) & (rioOnto:exceptionCha3Sec4Art21Par1NW :ep)
	 & (rioOnto:exceptionCha3Sec1Art12Par2 :ep) & (rioOnto:exceptionCha2Art11Par2 :ep),

	(rioOnto:RexistAtTime :eli :t2) & (rioOnto:>= :t2 :t1) & (prOnto:limit' :eli :w :z)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":epe">epe</ruleml:Var>
              <ruleml:Var key=":eor">eor</ruleml:Var>
              <ruleml:Var key=":eh">eh</ruleml:Var>
              <ruleml:Var key=":ei">ei</ruleml:Var>
              <ruleml:Var key=":ew">ew</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A996">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A997">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A998">
              <ruleml:Rel iri="prOnto:execute" />
              <ruleml:Var key=":ee">ee</ruleml:Var>
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":et">et</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A999">
              <ruleml:Rel iri="rioOnto:Permitted" />
              <ruleml:Var keyref=":epe" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":et">et</ruleml:Var>
              <ruleml:Var keyref=":t1" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eor" />
              <ruleml:Var keyref=":er1" />
              <ruleml:Var keyref=":er2" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1000">
              <ruleml:Rel iri="prOnto:relatedTo" />
              <ruleml:Var keyref=":er1" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var key=":pi">pi</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1001">
              <ruleml:Rel iri="prOnto:relatedTo" />
              <ruleml:Var keyref=":er2" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var key=":pp">pp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PublicInterest" />
              <ruleml:Var keyref=":pi" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:publicPowers" />
              <ruleml:Var keyref=":pp" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1002">
              <ruleml:Rel iri="prOnto:hold" />
              <ruleml:Var keyref=":eh" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":pp" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:imply" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":pp" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec4Art21Par1NW" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec1Art12Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Atom keyref=":A1003">
              <ruleml:Rel iri="prOnto:withdrawConsentFrom" />
              <ruleml:Var keyref=":ew" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha2Art11Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":eli">eli</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1004">
                <ruleml:Rel iri="prOnto:limit" />
                <ruleml:Var keyref=":eli" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":z" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements100Formula2">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :eor :en :ei :ew :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:thirdParty :k) & (prOnto:PersonalDataProcessing' :ep :x :z) & (rioOnto:or :eor :ei1 :ei2)
	 & (prOnto:legitimateInterestOf' :ei1 :y) & (prOnto:legitimateInterestOf' :ei2 :k) & (rioOnto:not :en :ea)
	 & (rioOnto:and :ea :er1 :er2) & (prOnto:riskFor' :er1 :ei3) & (prOnto:legitimateInterestOf' :ei3 :w)
	 & (prOnto:riskFor' :er2 :erf) & (prOnto:rightsAndFreedomsOf' :erf :w) & (rioOnto:imply :ei :eor :ep)
	 & (prOnto:withdrawConsentFrom' :ew :w :ep) & (rioOnto:exceptionCha3Sec4Art21Par1NW :ep) & (rioOnto:exceptionCha3Sec1Art12Par2 :ep)
	 & (rioOnto:exceptionCha2Art11Par2 :ep),

	(rioOnto:RexistAtTime :eli :t2) & (rioOnto:>= :t2 :t1) & (prOnto:limit' :eli :w :z)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":eor">eor</ruleml:Var>
              <ruleml:Var key=":en">en</ruleml:Var>
              <ruleml:Var key=":ei">ei</ruleml:Var>
              <ruleml:Var key=":ew">ew</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1005">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:thirdParty" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1006">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eor" />
              <ruleml:Var key=":ei1">ei1</ruleml:Var>
              <ruleml:Var key=":ei2">ei2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1007">
              <ruleml:Rel iri="prOnto:legitimateInterestOf" />
              <ruleml:Var keyref=":ei1" />
              <ruleml:Var keyref=":y" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1008">
              <ruleml:Rel iri="prOnto:legitimateInterestOf" />
              <ruleml:Var keyref=":ei2" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en" />
              <ruleml:Var key=":ea">ea</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":ea" />
              <ruleml:Var key=":er1">er1</ruleml:Var>
              <ruleml:Var key=":er2">er2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1009">
              <ruleml:Rel iri="prOnto:riskFor" />
              <ruleml:Var keyref=":er1" />
              <ruleml:Var key=":ei3">ei3</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1010">
              <ruleml:Rel iri="prOnto:legitimateInterestOf" />
              <ruleml:Var keyref=":ei3" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1011">
              <ruleml:Rel iri="prOnto:riskFor" />
              <ruleml:Var keyref=":er2" />
              <ruleml:Var key=":erf">erf</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1012">
              <ruleml:Rel iri="prOnto:rightsAndFreedomsOf" />
              <ruleml:Var keyref=":erf" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:imply" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var keyref=":eor" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec4Art21Par1NW" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec1Art12Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Atom keyref=":A1013">
              <ruleml:Rel iri="prOnto:withdrawConsentFrom" />
              <ruleml:Var keyref=":ew" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha2Art11Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":eli">eli</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1014">
                <ruleml:Rel iri="prOnto:limit" />
                <ruleml:Var keyref=":eli" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":z" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements100Formula3">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :ei :ew :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:publicAuthority :k) & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:execute' :ee :k :et)
	 & (rioOnto:imply :ei :et :ep) & (prOnto:withdrawConsentFrom' :ew :w :ep) & (rioOnto:exceptionCha3Sec4Art21Par1NW :ep)
	 & (rioOnto:exceptionCha3Sec1Art12Par2 :ep) & (rioOnto:exceptionCha2Art11Par2 :ep),

	(rioOnto:RexistAtTime :eli :t2) & (rioOnto:>= :t2 :t1) & (prOnto:limit' :eli :w :z)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":ei">ei</ruleml:Var>
              <ruleml:Var key=":ew">ew</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1015">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:publicAuthority" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1016">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1017">
              <ruleml:Rel iri="prOnto:execute" />
              <ruleml:Var key=":ee">ee</ruleml:Var>
              <ruleml:Var keyref=":k" />
              <ruleml:Var key=":et">et</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:imply" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec4Art21Par1NW" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec1Art12Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Atom keyref=":A1018">
              <ruleml:Rel iri="prOnto:withdrawConsentFrom" />
              <ruleml:Var keyref=":ew" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha2Art11Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":eli">eli</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1019">
                <ruleml:Rel iri="prOnto:limit" />
                <ruleml:Var keyref=":eli" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":z" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements101">
    <lrml:PrescriptiveStatement key="statements101Formula1">
      <!--
Permission:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :eli :eor :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:limit' :eli :w :z) & (rioOnto:or :eor :a2 :ei1 :ei2 :ei3)
	 & (rioOnto:and :a2 :ehc :eau) & (prOnto:consent :c) & (prOnto:hasConsented' :ehc :w :c)
	 & (prOnto:authorizedBy' :eau :ep :c) & (rioOnto:imply :ei1 :lc :ep) & (prOnto:legalClaim :lc)
	 & (rioOnto:imply :ei2 :epr :ep) & (prOnto:protect' :epr :y :erf) & (prOnto:rightsAndFreedomsOf' :erf :k)
	 & (rioOnto:imply :ei3 :pi :ep) & (prOnto:PublicInterest :pi) & (rioOnto:exceptionCha3Sec1Art12Par2 :ep)
	 & (rioOnto:exceptionCha2Art11Par2 :ep),

	(rioOnto:RexistAtTime :ep :t1)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":eli">eli</ruleml:Var>
              <ruleml:Var key=":eor">eor</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1020">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1021">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1022">
              <ruleml:Rel iri="prOnto:limit" />
              <ruleml:Var keyref=":eli" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eor" />
              <ruleml:Var key=":a2">a2</ruleml:Var>
              <ruleml:Var key=":ei1">ei1</ruleml:Var>
              <ruleml:Var key=":ei2">ei2</ruleml:Var>
              <ruleml:Var key=":ei3">ei3</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a2" />
              <ruleml:Var key=":ehc">ehc</ruleml:Var>
              <ruleml:Var key=":eau">eau</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:consent" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1023">
              <ruleml:Rel iri="prOnto:hasConsented" />
              <ruleml:Var keyref=":ehc" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1024">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":eau" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:imply" />
              <ruleml:Var keyref=":ei1" />
              <ruleml:Var key=":lc">lc</ruleml:Var>
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:legalClaim" />
              <ruleml:Var keyref=":lc" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:imply" />
              <ruleml:Var keyref=":ei2" />
              <ruleml:Var key=":epr">epr</ruleml:Var>
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1025">
              <ruleml:Rel iri="prOnto:protect" />
              <ruleml:Var keyref=":epr" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":erf">erf</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1026">
              <ruleml:Rel iri="prOnto:rightsAndFreedomsOf" />
              <ruleml:Var keyref=":erf" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:imply" />
              <ruleml:Var keyref=":ei3" />
              <ruleml:Var key=":pi">pi</ruleml:Var>
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PublicInterest" />
              <ruleml:Var keyref=":pi" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec1Art12Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha2Art11Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Permission iri="rioOnto:Permission">
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":t1" />
            </ruleml:Atom>
          </lrml:Permission>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements102">
    <lrml:PrescriptiveStatement key="statements102Formula1">
      <!--
Obligation:
(
	(rioOnto:and :a1 :eli :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w) & (prOnto:Controller :y :z)
	 & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x) & (prOnto:PersonalDataProcessing' :ep :x :z)
	 & (prOnto:limit' :eli :w :z) & (rioOnto:RexistAtTime :enl :t2) & (rioOnto:>= :t2 :t1)
	 & (rioOnto:not :enl :eli) & (rioOnto:exceptionCha3Sec1Art12Par2 :ep) & (rioOnto:exceptionCha2Art11Par2 :ep),

	(rioOnto:RexistAtTime :en :t1) & (prOnto:Communicate' :en :y :w :enl)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":eli">eli</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1027">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1028">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1029">
              <ruleml:Rel iri="prOnto:limit" />
              <ruleml:Var keyref=":eli" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":enl">enl</ruleml:Var>
              <ruleml:Var key=":t2">t2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:&gt;=" />
              <ruleml:Var keyref=":t2" />
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":enl" />
              <ruleml:Var keyref=":eli" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec1Art12Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha2Art11Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":en">en</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1030">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":enl" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements103">
    <lrml:PrescriptiveStatement key="statements103Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :eor :enr :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:recipientOf :r :z) & (rioOnto:or :eor :ere :era :eli)
	 & (prOnto:rectify' :ere :w :z) & (prOnto:erase' :era :w :z) & (prOnto:limit' :eli :w :z)
	 & (rioOnto:not :enr :er) & (prOnto:requireTooMuchEffort' :er :en) & (prOnto:Communicate' :en :y :r :eor)
	 & (rioOnto:exceptionCha3Sec1Art12Par2 :ep) & (rioOnto:exceptionCha2Art11Par2 :ep),

	(rioOnto:RexistAtTime :en :t2) & (rioOnto:>= :t2 :t1)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":eor">eor</ruleml:Var>
              <ruleml:Var key=":enr">enr</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1031">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1032">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:recipientOf" />
              <ruleml:Var key=":r">r</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eor" />
              <ruleml:Var key=":ere">ere</ruleml:Var>
              <ruleml:Var key=":era">era</ruleml:Var>
              <ruleml:Var key=":eli">eli</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1033">
              <ruleml:Rel iri="prOnto:rectify" />
              <ruleml:Var keyref=":ere" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1034">
              <ruleml:Rel iri="prOnto:erase" />
              <ruleml:Var keyref=":era" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1035">
              <ruleml:Rel iri="prOnto:limit" />
              <ruleml:Var keyref=":eli" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":enr" />
              <ruleml:Var key=":er">er</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1036">
              <ruleml:Rel iri="prOnto:requireTooMuchEffort" />
              <ruleml:Var keyref=":er" />
              <ruleml:Var key=":en">en</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1037">
              <ruleml:Rel iri="prOnto:Communicate" />
              <ruleml:Var keyref=":en" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":r" />
              <ruleml:Var keyref=":eor" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec1Art12Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha2Art11Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var keyref=":en" />
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements103Formula2">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :eor :en1 :er :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:recipientOf :r :z) & (rioOnto:or :eor :ere :era :eli)
	 & (prOnto:rectify' :ere :w :z) & (prOnto:erase' :era :w :z) & (prOnto:limit' :eli :w :z)
	 & (prOnto:Communicate' :en1 :y :r :eor) & (prOnto:request' :er :w :en1) & (rioOnto:exceptionCha3Sec1Art12Par2 :ep)
	 & (rioOnto:exceptionCha2Art11Par2 :ep),

	(rioOnto:RexistAtTime :en2 :t2) & (rioOnto:>= :t2 :t1) & (prOnto:Communicate' :en2 :y :w :r)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":eor">eor</ruleml:Var>
              <ruleml:Var key=":en1">en1</ruleml:Var>
              <ruleml:Var key=":er">er</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1038">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1039">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:recipientOf" />
              <ruleml:Var key=":r">r</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eor" />
              <ruleml:Var key=":ere">ere</ruleml:Var>
              <ruleml:Var key=":era">era</ruleml:Var>
              <ruleml:Var key=":eli">eli</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1040">
              <ruleml:Rel iri="prOnto:rectify" />
              <ruleml:Var keyref=":ere" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1041">
              <ruleml:Rel iri="prOnto:erase" />
              <ruleml:Var keyref=":era" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1042">
              <ruleml:Rel iri="prOnto:limit" />
              <ruleml:Var keyref=":eli" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1043">
              <ruleml:Rel iri="prOnto:Communicate" />
              <ruleml:Var keyref=":en1" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":r" />
              <ruleml:Var keyref=":eor" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1044">
              <ruleml:Rel iri="prOnto:request" />
              <ruleml:Var keyref=":er" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":en1" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec1Art12Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha2Art11Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":en2">en2</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1045">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en2" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":r" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements104">
    <lrml:PrescriptiveStatement key="statements104Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :er :eor1 :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:request' :er :w :erf) & (prOnto:receiveFrom' :erf :w :z :y)
	 & (prOnto:electronicForm :z) & (rioOnto:or :eor1 :a2 :ei) & (rioOnto:and :a2 :ehc :eau)
	 & (prOnto:Purpose :epu) & (prOnto:isBasedOn :ep :epu) & (prOnto:consent :c)
	 & (prOnto:hasConsented' :ehc :w :c) & (prOnto:authorizedBy' :eau :epu :c) & (rioOnto:imply :ei :eor2 :ep)
	 & (rioOnto:or :eor2 :ea :er) & (rioOnto:and :ea :ee :epa) & (prOnto:execute' :ee :s :c)
	 & (prOnto:contract :c) & (rioOnto:partOf' :epa :w :c) & (prOnto:requestToEnter' :er :w :c)
	 & (prOnto:automated :ep) & (rioOnto:exceptionCha3Sec3Art20Par3 :ep) & (rioOnto:exceptionCha3Sec3Art20Par4 :ep)
	 & (rioOnto:exceptionCha3Sec1Art12Par2 :ep) & (rioOnto:exceptionCha2Art11Par2 :ep),

	(rioOnto:RexistAtTime :erf :t2) & (rioOnto:>= :t2 :t1)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":er">er</ruleml:Var>
              <ruleml:Var key=":eor1">eor1</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1046">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1047">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1048">
              <ruleml:Rel iri="prOnto:request" />
              <ruleml:Var keyref=":er" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var key=":erf">erf</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1049">
              <ruleml:Rel iri="prOnto:receiveFrom" />
              <ruleml:Var keyref=":erf" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":y" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:electronicForm" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eor1" />
              <ruleml:Var key=":a2">a2</ruleml:Var>
              <ruleml:Var key=":ei">ei</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a2" />
              <ruleml:Var key=":ehc">ehc</ruleml:Var>
              <ruleml:Var key=":eau">eau</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Purpose" />
              <ruleml:Var key=":epu">epu</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isBasedOn" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":epu" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:consent" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1050">
              <ruleml:Rel iri="prOnto:hasConsented" />
              <ruleml:Var keyref=":ehc" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1051">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":eau" />
              <ruleml:Var keyref=":epu" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:imply" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var key=":eor2">eor2</ruleml:Var>
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eor2" />
              <ruleml:Var key=":ea">ea</ruleml:Var>
              <ruleml:Var keyref=":er" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":ea" />
              <ruleml:Var key=":ee">ee</ruleml:Var>
              <ruleml:Var key=":epa">epa</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1052">
              <ruleml:Rel iri="prOnto:execute" />
              <ruleml:Var keyref=":ee" />
              <ruleml:Var key=":s">s</ruleml:Var>
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:contract" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1053">
              <ruleml:Rel iri="rioOnto:partOf" />
              <ruleml:Var keyref=":epa" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1054">
              <ruleml:Rel iri="prOnto:requestToEnter" />
              <ruleml:Var keyref=":er" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:automated" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec3Art20Par3" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec3Art20Par4" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec1Art12Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha2Art11Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var keyref=":erf" />
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements104Formula2">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :er :eor1 :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :k :z) & (prOnto:Controller :y :z) & (prOnto:Processor :x)
	 & (prOnto:nominates' :edp :y :x) & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:request' :er :w :elt)
	 & (prOnto:Transmit' :elt :x :z :k) & (rioOnto:or :eor1 :a2 :ei) & (rioOnto:and :a2 :ehc :eau)
	 & (prOnto:Purpose :epu) & (prOnto:isBasedOn :ep :epu) & (prOnto:consent :c)
	 & (prOnto:hasConsented' :ehc :w :c) & (prOnto:authorizedBy' :eau :epu :c) & (rioOnto:imply :ei :eor2 :ep)
	 & (rioOnto:or :eor2 :ea :er) & (rioOnto:and :ea :ee :epa) & (prOnto:execute' :ee :s :c)
	 & (prOnto:contract :c) & (rioOnto:partOf' :epa :w :c) & (prOnto:requestToEnter' :er :w :c)
	 & (prOnto:automated :ep) & (rioOnto:exceptionCha3Sec3Art20Par3 :ep) & (rioOnto:exceptionCha3Sec3Art20Par4 :ep)
	 & (rioOnto:exceptionCha3Sec1Art12Par2 :ep) & (rioOnto:exceptionCha2Art11Par2 :ep),

	(rioOnto:RexistAtTime :elt :t2) & (rioOnto:>= :t2 :t1)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":er">er</ruleml:Var>
              <ruleml:Var key=":eor1">eor1</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":k">k</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1055">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1056">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1057">
              <ruleml:Rel iri="prOnto:request" />
              <ruleml:Var keyref=":er" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var key=":elt">elt</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1058">
              <ruleml:Rel iri="prOnto:Transmit" />
              <ruleml:Var keyref=":elt" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eor1" />
              <ruleml:Var key=":a2">a2</ruleml:Var>
              <ruleml:Var key=":ei">ei</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a2" />
              <ruleml:Var key=":ehc">ehc</ruleml:Var>
              <ruleml:Var key=":eau">eau</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Purpose" />
              <ruleml:Var key=":epu">epu</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isBasedOn" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":epu" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:consent" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1059">
              <ruleml:Rel iri="prOnto:hasConsented" />
              <ruleml:Var keyref=":ehc" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1060">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":eau" />
              <ruleml:Var keyref=":epu" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:imply" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var key=":eor2">eor2</ruleml:Var>
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eor2" />
              <ruleml:Var key=":ea">ea</ruleml:Var>
              <ruleml:Var keyref=":er" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":ea" />
              <ruleml:Var key=":ee">ee</ruleml:Var>
              <ruleml:Var key=":epa">epa</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1061">
              <ruleml:Rel iri="prOnto:execute" />
              <ruleml:Var keyref=":ee" />
              <ruleml:Var key=":s">s</ruleml:Var>
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:contract" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1062">
              <ruleml:Rel iri="rioOnto:partOf" />
              <ruleml:Var keyref=":epa" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1063">
              <ruleml:Rel iri="prOnto:requestToEnter" />
              <ruleml:Var keyref=":er" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:automated" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec3Art20Par3" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec3Art20Par4" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec1Art12Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha2Art11Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var keyref=":elt" />
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements105">
    <lrml:PrescriptiveStatement key="statements105Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :etr :er :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :k :z) & (prOnto:Controller :y :z) & (prOnto:Processor :x)
	 & (prOnto:nominates' :edp :y :x) & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:Transmit' :etr :x :z :k)
	 & (prOnto:request' :er :w :etr) & (rioOnto:exceptionCha3Sec1Art12Par2 :ep) & (rioOnto:exceptionCha2Art11Par2 :ep),

	(rioOnto:RexistAtTime :etr :t2) & (rioOnto:>= :t2 :t1)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":etr">etr</ruleml:Var>
              <ruleml:Var key=":er">er</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":k">k</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1064">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1065">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1066">
              <ruleml:Rel iri="prOnto:Transmit" />
              <ruleml:Var keyref=":etr" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1067">
              <ruleml:Rel iri="prOnto:request" />
              <ruleml:Var keyref=":er" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":etr" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec1Art12Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha2Art11Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var keyref=":etr" />
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements106">
    <lrml:ConstitutiveStatement key="statements106Formula1">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :epe :eor :eh :ei :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (rioOnto:Permitted' :epe :y :ee :t1) & (prOnto:execute' :ee :y :et)
	 & (rioOnto:or :eor :er1 :er2) & (prOnto:relatedTo' :er1 :et :pi) & (prOnto:relatedTo' :er2 :et :pp)
	 & (prOnto:PublicInterest :pi) & (prOnto:publicPowers :pp) & (prOnto:hold' :eh :y :pp)
	 & (rioOnto:imply :ei :y :pp) & (rioOnto:exceptionCha2Art11Par2 :ep),

	(rioOnto:exceptionCha3Sec3Art20Par3 :ep)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":epe">epe</ruleml:Var>
              <ruleml:Var key=":eor">eor</ruleml:Var>
              <ruleml:Var key=":eh">eh</ruleml:Var>
              <ruleml:Var key=":ei">ei</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1068">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1069">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1070">
              <ruleml:Rel iri="rioOnto:Permitted" />
              <ruleml:Var keyref=":epe" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":ee">ee</ruleml:Var>
              <ruleml:Var keyref=":t1" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1071">
              <ruleml:Rel iri="prOnto:execute" />
              <ruleml:Var keyref=":ee" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":et">et</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eor" />
              <ruleml:Var keyref=":er1" />
              <ruleml:Var keyref=":er2" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1072">
              <ruleml:Rel iri="prOnto:relatedTo" />
              <ruleml:Var keyref=":er1" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var key=":pi">pi</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1073">
              <ruleml:Rel iri="prOnto:relatedTo" />
              <ruleml:Var keyref=":er2" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var key=":pp">pp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PublicInterest" />
              <ruleml:Var keyref=":pi" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:publicPowers" />
              <ruleml:Var keyref=":pp" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1074">
              <ruleml:Rel iri="prOnto:hold" />
              <ruleml:Var keyref=":eh" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":pp" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:imply" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":pp" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha2Art11Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:exceptionCha3Sec3Art20Par3" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements107">
    <lrml:ConstitutiveStatement key="statements107Formula1">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :er :eor1 :eca :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:request' :er :w :erf) & (prOnto:receiveFrom' :erf :w :z :y)
	 & (prOnto:electronicForm :z) & (rioOnto:or :eor1 :a2 :ei) & (rioOnto:and :a2 :ehc :eau)
	 & (prOnto:Purpose :epu) & (prOnto:isBasedOn :ep :epu) & (prOnto:consent :c)
	 & (prOnto:hasConsented' :ehc :w :c) & (prOnto:authorizedBy' :eau :epu :c) & (rioOnto:imply :ei :eor2 :ep)
	 & (rioOnto:or :eor2 :ea :er) & (rioOnto:and :ea :ee :epa) & (prOnto:execute' :ee :s :c)
	 & (prOnto:contract :c) & (rioOnto:partOf' :epa :w :c) & (prOnto:requestToEnter' :er :w :c)
	 & (prOnto:automated :ep) & (rioOnto:cause' :eca :erf :evf) & (prOnto:violationOf' :evf :eraf)
	 & (prOnto:rightsAndFreedomsOf' :eraf :a) & (rioOnto:exceptionCha2Art11Par2 :ep),

	(rioOnto:exceptionCha3Sec3Art20Par4 :ep)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":er">er</ruleml:Var>
              <ruleml:Var key=":eor1">eor1</ruleml:Var>
              <ruleml:Var key=":eca">eca</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1075">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1076">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1077">
              <ruleml:Rel iri="prOnto:request" />
              <ruleml:Var keyref=":er" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var key=":erf">erf</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1078">
              <ruleml:Rel iri="prOnto:receiveFrom" />
              <ruleml:Var keyref=":erf" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":y" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:electronicForm" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eor1" />
              <ruleml:Var key=":a2">a2</ruleml:Var>
              <ruleml:Var key=":ei">ei</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a2" />
              <ruleml:Var key=":ehc">ehc</ruleml:Var>
              <ruleml:Var key=":eau">eau</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Purpose" />
              <ruleml:Var key=":epu">epu</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isBasedOn" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":epu" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:consent" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1079">
              <ruleml:Rel iri="prOnto:hasConsented" />
              <ruleml:Var keyref=":ehc" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1080">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":eau" />
              <ruleml:Var keyref=":epu" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:imply" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var key=":eor2">eor2</ruleml:Var>
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eor2" />
              <ruleml:Var key=":ea">ea</ruleml:Var>
              <ruleml:Var keyref=":er" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":ea" />
              <ruleml:Var key=":ee">ee</ruleml:Var>
              <ruleml:Var key=":epa">epa</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1081">
              <ruleml:Rel iri="prOnto:execute" />
              <ruleml:Var keyref=":ee" />
              <ruleml:Var key=":s">s</ruleml:Var>
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:contract" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1082">
              <ruleml:Rel iri="rioOnto:partOf" />
              <ruleml:Var keyref=":epa" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1083">
              <ruleml:Rel iri="prOnto:requestToEnter" />
              <ruleml:Var keyref=":er" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:automated" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1084">
              <ruleml:Rel iri="rioOnto:cause" />
              <ruleml:Var keyref=":eca" />
              <ruleml:Var keyref=":erf" />
              <ruleml:Var key=":evf">evf</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1085">
              <ruleml:Rel iri="prOnto:violationOf" />
              <ruleml:Var keyref=":evf" />
              <ruleml:Var key=":eraf">eraf</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1086">
              <ruleml:Rel iri="prOnto:rightsAndFreedomsOf" />
              <ruleml:Var keyref=":eraf" />
              <ruleml:Var key=":a">a</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha2Art11Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:exceptionCha3Sec3Art20Par4" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
    <lrml:ConstitutiveStatement key="statements107Formula2">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :er :eor1 :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Controller :k :z) & (prOnto:Processor :x)
	 & (prOnto:nominates' :edp :y :x) & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:request' :er :w :elt)
	 & (prOnto:Transmit' :elt :x :z :k) & (rioOnto:or :eor1 :a2 :ei) & (rioOnto:and :a2 :ehc :eau)
	 & (prOnto:Purpose :epu) & (prOnto:isBasedOn :ep :epu) & (prOnto:consent :c)
	 & (prOnto:hasConsented' :ehc :w :c) & (prOnto:authorizedBy' :eau :epu :c) & (rioOnto:imply :ei :eor2 :ep)
	 & (rioOnto:or :eor2 :ea :er) & (rioOnto:and :ea :ee :epa) & (prOnto:execute' :ee :s :c)
	 & (prOnto:contract :c) & (rioOnto:partOf' :epa :w :c) & (prOnto:requestToEnter' :er :w :c)
	 & (prOnto:automated :ep) & (rioOnto:cause' :eca :elt :evf) & (prOnto:violationOf' :evf :eraf)
	 & (prOnto:rightsAndFreedomsOf' :eraf :a) & (rioOnto:exceptionCha2Art11Par2 :ep),

	(rioOnto:exceptionCha3Sec3Art20Par4 :ep)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":er">er</ruleml:Var>
              <ruleml:Var key=":eor1">eor1</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":k">k</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1087">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1088">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1089">
              <ruleml:Rel iri="prOnto:request" />
              <ruleml:Var keyref=":er" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var key=":elt">elt</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1090">
              <ruleml:Rel iri="prOnto:Transmit" />
              <ruleml:Var keyref=":elt" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eor1" />
              <ruleml:Var key=":a2">a2</ruleml:Var>
              <ruleml:Var key=":ei">ei</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a2" />
              <ruleml:Var key=":ehc">ehc</ruleml:Var>
              <ruleml:Var key=":eau">eau</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Purpose" />
              <ruleml:Var key=":epu">epu</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isBasedOn" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":epu" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:consent" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1091">
              <ruleml:Rel iri="prOnto:hasConsented" />
              <ruleml:Var keyref=":ehc" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1092">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":eau" />
              <ruleml:Var keyref=":epu" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:imply" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var key=":eor2">eor2</ruleml:Var>
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eor2" />
              <ruleml:Var key=":ea">ea</ruleml:Var>
              <ruleml:Var keyref=":er" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":ea" />
              <ruleml:Var key=":ee">ee</ruleml:Var>
              <ruleml:Var key=":epa">epa</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1093">
              <ruleml:Rel iri="prOnto:execute" />
              <ruleml:Var keyref=":ee" />
              <ruleml:Var key=":s">s</ruleml:Var>
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:contract" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1094">
              <ruleml:Rel iri="rioOnto:partOf" />
              <ruleml:Var keyref=":epa" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1095">
              <ruleml:Rel iri="prOnto:requestToEnter" />
              <ruleml:Var keyref=":er" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:automated" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1096">
              <ruleml:Rel iri="rioOnto:cause" />
              <ruleml:Var keyref=":eca" />
              <ruleml:Var keyref=":elt" />
              <ruleml:Var key=":evf">evf</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1097">
              <ruleml:Rel iri="prOnto:violationOf" />
              <ruleml:Var keyref=":evf" />
              <ruleml:Var key=":eraf">eraf</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1098">
              <ruleml:Rel iri="prOnto:rightsAndFreedomsOf" />
              <ruleml:Var keyref=":eraf" />
              <ruleml:Var key=":a">a</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha2Art11Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:exceptionCha3Sec3Art20Par4" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements108">
    <lrml:PrescriptiveStatement key="statements108Formula1">
      <!--
Permission:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :epe :eor :eh :ei :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:execute' :ee :y :et) & (rioOnto:Permitted' :epe :y :et :t1)
	 & (rioOnto:or :eor :er1 :er2) & (prOnto:relatedTo' :er1 :et :pi) & (prOnto:relatedTo' :er2 :et :pp)
	 & (prOnto:PublicInterest :pi) & (prOnto:publicPowers :pp) & (prOnto:hold' :eo :y :pp)
	 & (rioOnto:imply :ei :y :pp) & (rioOnto:exceptionCha3Sec4Art21Par1NW :ep) & (rioOnto:exceptionCha3Sec1Art12Par2 :ep),

	(rioOnto:RexistAtTime :ew :t1) & (prOnto:withdrawConsentFrom' :ew :w :ep)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":epe">epe</ruleml:Var>
              <ruleml:Var key=":eor">eor</ruleml:Var>
              <ruleml:Var key=":eh">eh</ruleml:Var>
              <ruleml:Var key=":ei">ei</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1099">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1100">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1101">
              <ruleml:Rel iri="prOnto:execute" />
              <ruleml:Var key=":ee">ee</ruleml:Var>
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":et">et</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1102">
              <ruleml:Rel iri="rioOnto:Permitted" />
              <ruleml:Var keyref=":epe" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":et">et</ruleml:Var>
              <ruleml:Var keyref=":t1" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eor" />
              <ruleml:Var keyref=":er1" />
              <ruleml:Var keyref=":er2" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1103">
              <ruleml:Rel iri="prOnto:relatedTo" />
              <ruleml:Var keyref=":er1" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var key=":pi">pi</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1104">
              <ruleml:Rel iri="prOnto:relatedTo" />
              <ruleml:Var keyref=":er2" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var key=":pp">pp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PublicInterest" />
              <ruleml:Var keyref=":pi" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:publicPowers" />
              <ruleml:Var keyref=":pp" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1105">
              <ruleml:Rel iri="prOnto:hold" />
              <ruleml:Var keyref=":eo" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":pp" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:imply" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":pp" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec4Art21Par1NW" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec1Art12Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Permission iri="rioOnto:Permission">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":ew">ew</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1106">
                <ruleml:Rel iri="prOnto:withdrawConsentFrom" />
                <ruleml:Var keyref=":ew" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Permission>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements108Formula2">
      <!--
Permission:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :eor :en :ei :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:thirdParty :k) & (prOnto:PersonalDataProcessing' :ep :x :z) & (rioOnto:or :eor :ei1 :ei2)
	 & (prOnto:legitimateInterestOf' :ei1 :y) & (prOnto:legitimateInterestOf' :ei2 :k) & (rioOnto:not :en :ea)
	 & (rioOnto:and :ea :er1 :er2) & (prOnto:riskFor' :er1 :ei3) & (prOnto:legitimateInterestOf' :ei3 :w)
	 & (prOnto:riskFor' :er2 :erf) & (prOnto:rightsAndFreedomsOf' :erf :w) & (rioOnto:imply :ei :eor :ep)
	 & (rioOnto:exceptionCha3Sec4Art21Par1NW :ep) & (rioOnto:exceptionCha3Sec1Art12Par2 :ep),

	(rioOnto:RexistAtTime :ew :t1) & (prOnto:withdrawConsentFrom' :w :ew :ep)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":eor">eor</ruleml:Var>
              <ruleml:Var key=":en">en</ruleml:Var>
              <ruleml:Var key=":ei">ei</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1107">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:thirdParty" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1108">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eor" />
              <ruleml:Var key=":ei1">ei1</ruleml:Var>
              <ruleml:Var key=":ei2">ei2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1109">
              <ruleml:Rel iri="prOnto:legitimateInterestOf" />
              <ruleml:Var keyref=":ei1" />
              <ruleml:Var keyref=":y" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1110">
              <ruleml:Rel iri="prOnto:legitimateInterestOf" />
              <ruleml:Var keyref=":ei2" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en" />
              <ruleml:Var key=":ea">ea</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":ea" />
              <ruleml:Var key=":er1">er1</ruleml:Var>
              <ruleml:Var key=":er2">er2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1111">
              <ruleml:Rel iri="prOnto:riskFor" />
              <ruleml:Var keyref=":er1" />
              <ruleml:Var key=":ei3">ei3</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1112">
              <ruleml:Rel iri="prOnto:legitimateInterestOf" />
              <ruleml:Var keyref=":ei3" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1113">
              <ruleml:Rel iri="prOnto:riskFor" />
              <ruleml:Var keyref=":er2" />
              <ruleml:Var key=":erf">erf</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1114">
              <ruleml:Rel iri="prOnto:rightsAndFreedomsOf" />
              <ruleml:Var keyref=":erf" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:imply" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var keyref=":eor" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec4Art21Par1NW" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec1Art12Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Permission iri="rioOnto:Permission">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":ew">ew</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1115">
                <ruleml:Rel iri="prOnto:withdrawConsentFrom" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":ew" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Permission>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements108Formula3">
      <!--
Permission:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :ei :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:publicAuthority :k) & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:execute' :ee :k :et)
	 & (rioOnto:imply :ei :et :ep) & (rioOnto:exceptionCha3Sec4Art21Par1NW :ep) & (rioOnto:exceptionCha3Sec1Art12Par2 :ep),

	(rioOnto:RexistAtTime :ew :t1) & (prOnto:withdrawConsentFrom' :ew :w :ep)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":ei">ei</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1116">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:publicAuthority" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1117">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1118">
              <ruleml:Rel iri="prOnto:execute" />
              <ruleml:Var key=":ee">ee</ruleml:Var>
              <ruleml:Var keyref=":k" />
              <ruleml:Var key=":et">et</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:imply" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec4Art21Par1NW" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec1Art12Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Permission iri="rioOnto:Permission">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":ew">ew</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1119">
                <ruleml:Rel iri="prOnto:withdrawConsentFrom" />
                <ruleml:Var keyref=":ew" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Permission>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:ConstitutiveStatement key="statements108Formula4">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :epe :eor :eh :ei :ew :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:execute' :ee :y :et) & (rioOnto:Permitted' :epe :y :et :t1)
	 & (rioOnto:or :eor :er1 :er2) & (prOnto:relatedTo' :er1 :et :pi) & (prOnto:relatedTo' :er2 :et :pp)
	 & (prOnto:PublicInterest :pi) & (prOnto:publicPowers :pp) & (prOnto:hold' :eh :y :pp)
	 & (rioOnto:imply :ei :y :pp) & (prOnto:withdrawConsentFrom' :ew :w :ep),

	(rioOnto:exceptionCha3Sec4Art21Par1 :ep)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":epe">epe</ruleml:Var>
              <ruleml:Var key=":eor">eor</ruleml:Var>
              <ruleml:Var key=":eh">eh</ruleml:Var>
              <ruleml:Var key=":ei">ei</ruleml:Var>
              <ruleml:Var key=":ew">ew</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1120">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1121">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1122">
              <ruleml:Rel iri="prOnto:execute" />
              <ruleml:Var key=":ee">ee</ruleml:Var>
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":et">et</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1123">
              <ruleml:Rel iri="rioOnto:Permitted" />
              <ruleml:Var keyref=":epe" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":et">et</ruleml:Var>
              <ruleml:Var keyref=":t1" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eor" />
              <ruleml:Var keyref=":er1" />
              <ruleml:Var keyref=":er2" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1124">
              <ruleml:Rel iri="prOnto:relatedTo" />
              <ruleml:Var keyref=":er1" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var key=":pi">pi</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1125">
              <ruleml:Rel iri="prOnto:relatedTo" />
              <ruleml:Var keyref=":er2" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var key=":pp">pp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PublicInterest" />
              <ruleml:Var keyref=":pi" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:publicPowers" />
              <ruleml:Var keyref=":pp" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1126">
              <ruleml:Rel iri="prOnto:hold" />
              <ruleml:Var keyref=":eh" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":pp" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:imply" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":pp" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1127">
              <ruleml:Rel iri="prOnto:withdrawConsentFrom" />
              <ruleml:Var keyref=":ew" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:exceptionCha3Sec4Art21Par1" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
    <lrml:ConstitutiveStatement key="statements108Formula5">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :eor :en :ei :ew :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:thirdParty :k) & (prOnto:PersonalDataProcessing' :ep :x :z) & (rioOnto:or :eor :ei1 :ei2)
	 & (prOnto:legitimateInterestOf' :ei1 :y) & (prOnto:legitimateInterestOf' :ei2 :k) & (rioOnto:not :en :ea)
	 & (rioOnto:and :ea :er1 :er2) & (prOnto:riskFor' :er1 :ei3) & (prOnto:legitimateInterestOf' :ei3 :w)
	 & (prOnto:riskFor' :er2 :erf) & (prOnto:rightsAndFreedomsOf' :erf :w) & (rioOnto:imply :ei :eor :ep)
	 & (prOnto:withdrawConsentFrom' :ew :w :ep),

	(rioOnto:exceptionCha3Sec4Art21Par1 :ep)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":eor">eor</ruleml:Var>
              <ruleml:Var key=":en">en</ruleml:Var>
              <ruleml:Var key=":ei">ei</ruleml:Var>
              <ruleml:Var key=":ew">ew</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1128">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:thirdParty" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1129">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eor" />
              <ruleml:Var key=":ei1">ei1</ruleml:Var>
              <ruleml:Var key=":ei2">ei2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1130">
              <ruleml:Rel iri="prOnto:legitimateInterestOf" />
              <ruleml:Var keyref=":ei1" />
              <ruleml:Var keyref=":y" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1131">
              <ruleml:Rel iri="prOnto:legitimateInterestOf" />
              <ruleml:Var keyref=":ei2" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en" />
              <ruleml:Var key=":ea">ea</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":ea" />
              <ruleml:Var key=":er1">er1</ruleml:Var>
              <ruleml:Var key=":er2">er2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1132">
              <ruleml:Rel iri="prOnto:riskFor" />
              <ruleml:Var keyref=":er1" />
              <ruleml:Var key=":ei3">ei3</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1133">
              <ruleml:Rel iri="prOnto:legitimateInterestOf" />
              <ruleml:Var keyref=":ei3" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1134">
              <ruleml:Rel iri="prOnto:riskFor" />
              <ruleml:Var keyref=":er2" />
              <ruleml:Var key=":erf">erf</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1135">
              <ruleml:Rel iri="prOnto:rightsAndFreedomsOf" />
              <ruleml:Var keyref=":erf" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:imply" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var keyref=":eor" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1136">
              <ruleml:Rel iri="prOnto:withdrawConsentFrom" />
              <ruleml:Var keyref=":ew" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:exceptionCha3Sec4Art21Par1" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
    <lrml:ConstitutiveStatement key="statements108Formula6">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :ei :ew :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:publicAuthority :k) & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:execute' :ee :k :et)
	 & (rioOnto:imply :ei :et :ep) & (prOnto:withdrawConsentFrom' :ew :w :ep),

	(rioOnto:exceptionCha3Sec4Art21Par1 :ep)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":ei">ei</ruleml:Var>
              <ruleml:Var key=":ew">ew</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1137">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:publicAuthority" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1138">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1139">
              <ruleml:Rel iri="prOnto:execute" />
              <ruleml:Var key=":ee">ee</ruleml:Var>
              <ruleml:Var keyref=":k" />
              <ruleml:Var key=":et">et</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:imply" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1140">
              <ruleml:Rel iri="prOnto:withdrawConsentFrom" />
              <ruleml:Var keyref=":ew" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:exceptionCha3Sec4Art21Par1" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
    <lrml:ConstitutiveStatement key="statements108Formula7">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :epe :eor1 :eh :ei :ew :eor2 :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:execute' :ee :y :et) & (rioOnto:Permitted' :epe :y :et :t1)
	 & (rioOnto:or :eor1 :er1 :er2) & (prOnto:relatedTo' :er1 :et :pi) & (prOnto:relatedTo' :er2 :et :pp)
	 & (prOnto:PublicInterest :pi) & (prOnto:publicPowers :pp) & (prOnto:hold' :eh :y :pp)
	 & (rioOnto:imply :ei :y :pp) & (rioOnto:or :eor2 :ert :ea) & (prOnto:relatedTo' :ert :k :ep)
	 & (prOnto:legalClaim :k) & (rioOnto:and :ea :eli :eov) & (prOnto:legitimateInterestOf' :eli :y)
	 & (prOnto:override' :eov :eli :erf) & (prOnto:rightsAndFreedomsOf' :erf :w),

	(rioOnto:exceptionCha3Sec4Art21Par1NW :ep)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":epe">epe</ruleml:Var>
              <ruleml:Var key=":eor1">eor1</ruleml:Var>
              <ruleml:Var key=":eh">eh</ruleml:Var>
              <ruleml:Var key=":ei">ei</ruleml:Var>
              <ruleml:Var key=":ew">ew</ruleml:Var>
              <ruleml:Var key=":eor2">eor2</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1141">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1142">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1143">
              <ruleml:Rel iri="prOnto:execute" />
              <ruleml:Var key=":ee">ee</ruleml:Var>
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":et">et</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1144">
              <ruleml:Rel iri="rioOnto:Permitted" />
              <ruleml:Var keyref=":epe" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":et">et</ruleml:Var>
              <ruleml:Var keyref=":t1" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eor1" />
              <ruleml:Var keyref=":er1" />
              <ruleml:Var keyref=":er2" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1145">
              <ruleml:Rel iri="prOnto:relatedTo" />
              <ruleml:Var keyref=":er1" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var key=":pi">pi</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1146">
              <ruleml:Rel iri="prOnto:relatedTo" />
              <ruleml:Var keyref=":er2" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var key=":pp">pp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PublicInterest" />
              <ruleml:Var keyref=":pi" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:publicPowers" />
              <ruleml:Var keyref=":pp" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1147">
              <ruleml:Rel iri="prOnto:hold" />
              <ruleml:Var keyref=":eh" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":pp" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:imply" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":pp" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eor2" />
              <ruleml:Var key=":ert">ert</ruleml:Var>
              <ruleml:Var key=":ea">ea</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1148">
              <ruleml:Rel iri="prOnto:relatedTo" />
              <ruleml:Var keyref=":ert" />
              <ruleml:Var key=":k">k</ruleml:Var>
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:legalClaim" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":ea" />
              <ruleml:Var key=":eli">eli</ruleml:Var>
              <ruleml:Var key=":eov">eov</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1149">
              <ruleml:Rel iri="prOnto:legitimateInterestOf" />
              <ruleml:Var keyref=":eli" />
              <ruleml:Var keyref=":y" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1150">
              <ruleml:Rel iri="prOnto:override" />
              <ruleml:Var keyref=":eov" />
              <ruleml:Var keyref=":eli" />
              <ruleml:Var keyref=":erf" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1151">
              <ruleml:Rel iri="prOnto:rightsAndFreedomsOf" />
              <ruleml:Var keyref=":erf" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:exceptionCha3Sec4Art21Par1NW" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
    <lrml:ConstitutiveStatement key="statements108Formula8">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :eor1 :en :ei :ew :eor2 :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:thirdParty :k) & (prOnto:PersonalDataProcessing' :ep :x :z) & (rioOnto:or :eor1 :ei1 :ei2)
	 & (prOnto:legitimateInterestOf' :ei1 :y) & (prOnto:legitimateInterestOf' :ei2 :k) & (rioOnto:not :en :ea)
	 & (rioOnto:and :ea :er1 :er2) & (prOnto:riskFor' :er1 :ei3) & (prOnto:legitimateInterestOf' :ei3 :w)
	 & (prOnto:riskFor' :er2 :erf) & (prOnto:rightsAndFreedomsOf' :erf :w) & (rioOnto:imply :ei :eor :ep)
	 & (rioOnto:or :eor2 :ert :eov) & (prOnto:relatedTo' :ert :k :ep) & (prOnto:legalClaim :k)
	 & (prOnto:override' :eov :ei1 :erf) & (prOnto:rightsAndFreedomsOf' :erf :w),

	(rioOnto:exceptionCha3Sec4Art21Par1NW :ep)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":eor1">eor1</ruleml:Var>
              <ruleml:Var key=":en">en</ruleml:Var>
              <ruleml:Var key=":ei">ei</ruleml:Var>
              <ruleml:Var key=":ew">ew</ruleml:Var>
              <ruleml:Var key=":eor2">eor2</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1152">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:thirdParty" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1153">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eor1" />
              <ruleml:Var key=":ei1">ei1</ruleml:Var>
              <ruleml:Var key=":ei2">ei2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1154">
              <ruleml:Rel iri="prOnto:legitimateInterestOf" />
              <ruleml:Var keyref=":ei1" />
              <ruleml:Var keyref=":y" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1155">
              <ruleml:Rel iri="prOnto:legitimateInterestOf" />
              <ruleml:Var keyref=":ei2" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en" />
              <ruleml:Var key=":ea">ea</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":ea" />
              <ruleml:Var key=":er1">er1</ruleml:Var>
              <ruleml:Var key=":er2">er2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1156">
              <ruleml:Rel iri="prOnto:riskFor" />
              <ruleml:Var keyref=":er1" />
              <ruleml:Var key=":ei3">ei3</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1157">
              <ruleml:Rel iri="prOnto:legitimateInterestOf" />
              <ruleml:Var keyref=":ei3" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1158">
              <ruleml:Rel iri="prOnto:riskFor" />
              <ruleml:Var keyref=":er2" />
              <ruleml:Var key=":erf">erf</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1159">
              <ruleml:Rel iri="prOnto:rightsAndFreedomsOf" />
              <ruleml:Var keyref=":erf" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:imply" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var keyref=":eor" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eor2" />
              <ruleml:Var key=":ert">ert</ruleml:Var>
              <ruleml:Var key=":eov">eov</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1160">
              <ruleml:Rel iri="prOnto:relatedTo" />
              <ruleml:Var keyref=":ert" />
              <ruleml:Var key=":k">k</ruleml:Var>
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:legalClaim" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1161">
              <ruleml:Rel iri="prOnto:override" />
              <ruleml:Var keyref=":eov" />
              <ruleml:Var keyref=":ei1" />
              <ruleml:Var keyref=":erf" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1162">
              <ruleml:Rel iri="prOnto:rightsAndFreedomsOf" />
              <ruleml:Var keyref=":erf" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:exceptionCha3Sec4Art21Par1NW" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
    <lrml:ConstitutiveStatement key="statements108Formula9">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :ei :ew :eor :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:publicAuthority :k) & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:execute' :ee :k :et)
	 & (rioOnto:imply :ei :et :ep) & (rioOnto:or :eor :ert :ea) & (prOnto:relatedTo' :ert :k :ep)
	 & (prOnto:legalClaim :k) & (rioOnto:and :ea :eli :eov) & (prOnto:legitimateInterestOf' :eli :y)
	 & (prOnto:override' :eov :eli :erf) & (prOnto:rightsAndFreedomsOf' :erf :w),

	(rioOnto:exceptionCha3Sec4Art21Par1NW :ep)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":ei">ei</ruleml:Var>
              <ruleml:Var key=":ew">ew</ruleml:Var>
              <ruleml:Var key=":eor">eor</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1163">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:publicAuthority" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1164">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1165">
              <ruleml:Rel iri="prOnto:execute" />
              <ruleml:Var key=":ee">ee</ruleml:Var>
              <ruleml:Var keyref=":k" />
              <ruleml:Var key=":et">et</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:imply" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eor" />
              <ruleml:Var key=":ert">ert</ruleml:Var>
              <ruleml:Var key=":ea">ea</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1166">
              <ruleml:Rel iri="prOnto:relatedTo" />
              <ruleml:Var keyref=":ert" />
              <ruleml:Var key=":k">k</ruleml:Var>
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:legalClaim" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":ea" />
              <ruleml:Var key=":eli">eli</ruleml:Var>
              <ruleml:Var key=":eov">eov</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1167">
              <ruleml:Rel iri="prOnto:legitimateInterestOf" />
              <ruleml:Var keyref=":eli" />
              <ruleml:Var keyref=":y" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1168">
              <ruleml:Rel iri="prOnto:override" />
              <ruleml:Var keyref=":eov" />
              <ruleml:Var keyref=":eli" />
              <ruleml:Var keyref=":erf" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1169">
              <ruleml:Rel iri="prOnto:rightsAndFreedomsOf" />
              <ruleml:Var keyref=":erf" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:exceptionCha3Sec4Art21Par1NW" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements109">
    <lrml:PrescriptiveStatement key="statements109Formula1">
      <!--
Permission:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:Marketing :epu) & (prOnto:isBasedOn :ep :epu)
	 & (rioOnto:exceptionCha3Sec1Art12Par2 :ep),

	(rioOnto:RexistAtTime :ew :t1) & (prOnto:withdrawConsentFrom' :ew :w :ep)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1170">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1171">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Marketing" />
              <ruleml:Var key=":epu">epu</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isBasedOn" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":epu" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec1Art12Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Permission iri="rioOnto:Permission">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":ew">ew</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1172">
                <ruleml:Rel iri="prOnto:withdrawConsentFrom" />
                <ruleml:Var keyref=":ew" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Permission>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements110">
    <lrml:PrescriptiveStatement key="statements110Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :ew :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:Marketing :epu) & (prOnto:isBasedOn :ep :epu)
	 & (prOnto:withdrawConsentFrom' :ew :w :ep) & (rioOnto:exceptionCha3Sec1Art12Par2 :ep),

	(rioOnto:RexistAtTime :enp :t2) & (rioOnto:>= :t2 :t1) & (rioOnto:not :enp :ep)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":ew">ew</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1173">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1174">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Marketing" />
              <ruleml:Var key=":epu">epu</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isBasedOn" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":epu" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1175">
              <ruleml:Rel iri="prOnto:withdrawConsentFrom" />
              <ruleml:Var keyref=":ew" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec1Art12Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":enp">enp</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:not" />
                <ruleml:Var keyref=":enp" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements111">
    <lrml:PrescriptiveStatement key="statements111Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :epe :eor :eh :ei :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:execute' :ee :y :et) & (rioOnto:Permitted' :epe :y :et :t1)
	 & (rioOnto:or :eor :er1 :er2) & (prOnto:relatedTo' :er1 :et :pi) & (prOnto:relatedTo' :er2 :et :pp)
	 & (prOnto:PublicInterest :pi) & (prOnto:publicPowers :pp) & (prOnto:hold' :eh :y :pp)
	 & (rioOnto:imply :ei :y :pp) & (rioOnto:exceptionCha3Sec1Art12Par2 :ep),

	(rioOnto:RexistAtTime :en :t1) & (prOnto:Communicate' :en :y :w :ew) & (prOnto:withdrawConsentFrom' :ew :w :ep)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":epe">epe</ruleml:Var>
              <ruleml:Var key=":eor">eor</ruleml:Var>
              <ruleml:Var key=":eh">eh</ruleml:Var>
              <ruleml:Var key=":ei">ei</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1176">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1177">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1178">
              <ruleml:Rel iri="prOnto:execute" />
              <ruleml:Var key=":ee">ee</ruleml:Var>
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":et">et</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1179">
              <ruleml:Rel iri="rioOnto:Permitted" />
              <ruleml:Var keyref=":epe" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":et">et</ruleml:Var>
              <ruleml:Var keyref=":t1" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eor" />
              <ruleml:Var keyref=":er1" />
              <ruleml:Var keyref=":er2" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1180">
              <ruleml:Rel iri="prOnto:relatedTo" />
              <ruleml:Var keyref=":er1" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var key=":pi">pi</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1181">
              <ruleml:Rel iri="prOnto:relatedTo" />
              <ruleml:Var keyref=":er2" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var key=":pp">pp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PublicInterest" />
              <ruleml:Var keyref=":pi" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:publicPowers" />
              <ruleml:Var keyref=":pp" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1182">
              <ruleml:Rel iri="prOnto:hold" />
              <ruleml:Var keyref=":eh" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":pp" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:imply" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":pp" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec1Art12Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":en">en</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1183">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var key=":ew">ew</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1184">
                <ruleml:Rel iri="prOnto:withdrawConsentFrom" />
                <ruleml:Var keyref=":ew" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements111Formula2">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :eor :en :ei :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:thirdParty :k) & (prOnto:PersonalDataProcessing' :ep :x :z) & (rioOnto:or :eor :ei1 :ei2)
	 & (prOnto:legitimateInterestOf' :ei1 :y) & (prOnto:legitimateInterestOf' :ei2 :k) & (rioOnto:not :en :ea)
	 & (rioOnto:and :ea :er1 :er2) & (prOnto:riskFor' :er1 :ei3) & (prOnto:legitimateInterestOf' :ei3 :w)
	 & (prOnto:riskFor' :er2 :erf) & (prOnto:rightsAndFreedomsOf' :erf :w) & (rioOnto:imply :ei :eor :ep)
	 & (rioOnto:exceptionCha3Sec1Art12Par2 :ep),

	(rioOnto:RexistAtTime :en :t1) & (prOnto:Communicate' :en :y :w :ew) & (prOnto:withdrawConsentFrom' :w :ew :ep)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":eor">eor</ruleml:Var>
              <ruleml:Var key=":en">en</ruleml:Var>
              <ruleml:Var key=":ei">ei</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1185">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:thirdParty" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1186">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eor" />
              <ruleml:Var key=":ei1">ei1</ruleml:Var>
              <ruleml:Var key=":ei2">ei2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1187">
              <ruleml:Rel iri="prOnto:legitimateInterestOf" />
              <ruleml:Var keyref=":ei1" />
              <ruleml:Var keyref=":y" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1188">
              <ruleml:Rel iri="prOnto:legitimateInterestOf" />
              <ruleml:Var keyref=":ei2" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en" />
              <ruleml:Var key=":ea">ea</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":ea" />
              <ruleml:Var key=":er1">er1</ruleml:Var>
              <ruleml:Var key=":er2">er2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1189">
              <ruleml:Rel iri="prOnto:riskFor" />
              <ruleml:Var keyref=":er1" />
              <ruleml:Var key=":ei3">ei3</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1190">
              <ruleml:Rel iri="prOnto:legitimateInterestOf" />
              <ruleml:Var keyref=":ei3" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1191">
              <ruleml:Rel iri="prOnto:riskFor" />
              <ruleml:Var keyref=":er2" />
              <ruleml:Var key=":erf">erf</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1192">
              <ruleml:Rel iri="prOnto:rightsAndFreedomsOf" />
              <ruleml:Var keyref=":erf" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:imply" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var keyref=":eor" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec1Art12Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":en">en</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1193">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var key=":ew">ew</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1194">
                <ruleml:Rel iri="prOnto:withdrawConsentFrom" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":ew" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements111Formula3">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :ei :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:publicAuthority :k) & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:execute' :ee :k :et)
	 & (rioOnto:imply :ei :et :ep) & (rioOnto:exceptionCha3Sec1Art12Par2 :ep),

	(rioOnto:RexistAtTime :en :t1) & (prOnto:Communicate' :en :y :w :ew) & (prOnto:withdrawConsentFrom' :ew :w :ep)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":ei">ei</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1195">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:publicAuthority" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1196">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1197">
              <ruleml:Rel iri="prOnto:execute" />
              <ruleml:Var key=":ee">ee</ruleml:Var>
              <ruleml:Var keyref=":k" />
              <ruleml:Var key=":et">et</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:imply" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec1Art12Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":en">en</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1198">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var key=":ew">ew</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1199">
                <ruleml:Rel iri="prOnto:withdrawConsentFrom" />
                <ruleml:Var keyref=":ew" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements111Formula4">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:Marketing :epu) & (prOnto:isBasedOn :ep :epu)
	 & (rioOnto:exceptionCha3Sec1Art12Par2 :ep),

	(rioOnto:RexistAtTime :en :t1) & (prOnto:Communicate' :en :y :w :ew) & (prOnto:withdrawConsentFrom' :ew :w :ep)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1200">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1201">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Marketing" />
              <ruleml:Var key=":epu">epu</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isBasedOn" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":epu" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec1Art12Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":en">en</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1202">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var key=":ew">ew</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1203">
                <ruleml:Rel iri="prOnto:withdrawConsentFrom" />
                <ruleml:Var keyref=":ew" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements112">
    <lrml:PrescriptiveStatement key="statements112Formula1">
      <!--
Permission:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:Marketing :epu) & (prOnto:isBasedOn :ep :epu)
	 & (rioOnto:exceptionCha3Sec1Art12Par2 :ep),

	(rioOnto:RexistAtTime :en :t1) & (prOnto:Communicate' :en :y :w :ew) & (prOnto:electronicForm :en) & (prOnto:withdrawConsentFrom' :ew :w :ep)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1204">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1205">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Marketing" />
              <ruleml:Var key=":epu">epu</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isBasedOn" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":epu" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec1Art12Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Permission iri="rioOnto:Permission">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":en">en</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1206">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var key=":ew">ew</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:electronicForm" />
                <ruleml:Var keyref=":en" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1207">
                <ruleml:Rel iri="prOnto:withdrawConsentFrom" />
                <ruleml:Var keyref=":ew" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Permission>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements113">
    <lrml:PrescriptiveStatement key="statements113Formula1">
      <!--
Permission:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :eor :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (rioOnto:or :eor :ebo1 :ebo2 :ebo3) & (prOnto:isBasedOn' :ebo1 :ep :epi)
	 & (prOnto:PublicInterest :epi) & (prOnto:isBasedOn' :ebo2 :ep :ers) & (prOnto:Research :ers)
	 & (prOnto:isBasedOn' :ebo3 :ep :est) & (prOnto:Statistic :est) & (rioOnto:exceptionCha3Sec1Art12Par2 :ep),

	(rioOnto:RexistAtTime :ea :t2) & (rioOnto:>= :t2 :t1) & (prOnto:ableTo' :ea :w :ew) & (prOnto:withdrawConsentFrom' :ew :w :epu)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":eor">eor</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1208">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1209">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eor" />
              <ruleml:Var key=":ebo1">ebo1</ruleml:Var>
              <ruleml:Var key=":ebo2">ebo2</ruleml:Var>
              <ruleml:Var key=":ebo3">ebo3</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1210">
              <ruleml:Rel iri="prOnto:isBasedOn" />
              <ruleml:Var keyref=":ebo1" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var key=":epi">epi</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PublicInterest" />
              <ruleml:Var keyref=":epi" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1211">
              <ruleml:Rel iri="prOnto:isBasedOn" />
              <ruleml:Var keyref=":ebo2" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var key=":ers">ers</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Research" />
              <ruleml:Var keyref=":ers" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1212">
              <ruleml:Rel iri="prOnto:isBasedOn" />
              <ruleml:Var keyref=":ebo3" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var key=":est">est</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Statistic" />
              <ruleml:Var keyref=":est" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec1Art12Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Permission iri="rioOnto:Permission">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":ea">ea</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1213">
                <ruleml:Rel iri="prOnto:ableTo" />
                <ruleml:Var keyref=":ea" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var key=":ew">ew</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1214">
                <ruleml:Rel iri="prOnto:withdrawConsentFrom" />
                <ruleml:Var keyref=":ew" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":epu" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Permission>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements114">
    <lrml:PrescriptiveStatement key="statements114Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ei :eor :er :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:relatedTo :ep :ei) & (prOnto:implement' :ei :y :em)
	 & (prOnto:automatedDecisionMaking :em) & (rioOnto:or :eor :eca1 :eca2) & (rioOnto:cause' :eca1 :ep :le)
	 & (prOnto:legalEffectOn :le :w) & (rioOnto:cause' :eca2 :ep :se) & (prOnto:significantEffectOn :se :w)
	 & (prOnto:request' :er :y :enp) & (rioOnto:not :enp :ep) & (rioOnto:exceptionCha3Sec4Art22Par2Point1 :ep)
	 & (rioOnto:exceptionCha3Sec4Art22Par2Point2 :ep) & (rioOnto:exceptionCha3Sec4Art22Par2Point3 :ep) & (rioOnto:exceptionCha3Sec4Art22Par4 :ep)
	 & (rioOnto:exceptionCha3Sec1Art12Par2 :ep),

	(rioOnto:RexistAtTime :enp :t2) & (rioOnto:>= :t2 :t1)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ei">ei</ruleml:Var>
              <ruleml:Var key=":eor">eor</ruleml:Var>
              <ruleml:Var key=":er">er</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1215">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1216">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:relatedTo" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":ei" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1217">
              <ruleml:Rel iri="prOnto:implement" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":em">em</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:automatedDecisionMaking" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eor" />
              <ruleml:Var key=":eca1">eca1</ruleml:Var>
              <ruleml:Var key=":eca2">eca2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1218">
              <ruleml:Rel iri="rioOnto:cause" />
              <ruleml:Var keyref=":eca1" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var key=":le">le</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:legalEffectOn" />
              <ruleml:Var keyref=":le" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1219">
              <ruleml:Rel iri="rioOnto:cause" />
              <ruleml:Var keyref=":eca2" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var key=":se">se</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:significantEffectOn" />
              <ruleml:Var keyref=":se" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1220">
              <ruleml:Rel iri="prOnto:request" />
              <ruleml:Var keyref=":er" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":enp">enp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":enp" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec4Art22Par2Point1" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec4Art22Par2Point2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec4Art22Par2Point3" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec4Art22Par4" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec1Art12Par2" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var keyref=":enp" />
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements115">
    <lrml:ConstitutiveStatement key="statements115Formula1">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ei :eim :epr :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:relatedTo :ep :ei) & (prOnto:implement' :ei :y :em)
	 & (prOnto:automatedDecisionMaking :em) & (rioOnto:imply :ei :eor :ep) & (rioOnto:or :eor :ea :er)
	 & (rioOnto:and :ea :ee :epa) & (prOnto:execute' :ee :c :c) & (prOnto:contract :c)
	 & (prOnto:partyOf' :epa :w :c) & (prOnto:requestToEnter' :er :w :c) & (prOnto:protect' :epr :y :erf)
	 & (prOnto:rightsAndFreedomsOf' :erf :w),

	(rioOnto:exceptionCha3Sec4Art22Par2Point1 :ep)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ei">ei</ruleml:Var>
              <ruleml:Var key=":eim">eim</ruleml:Var>
              <ruleml:Var key=":epr">epr</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1221">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1222">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:relatedTo" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":ei" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1223">
              <ruleml:Rel iri="prOnto:implement" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":em">em</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:automatedDecisionMaking" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:imply" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var key=":eor">eor</ruleml:Var>
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eor" />
              <ruleml:Var key=":ea">ea</ruleml:Var>
              <ruleml:Var key=":er">er</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":ea" />
              <ruleml:Var key=":ee">ee</ruleml:Var>
              <ruleml:Var key=":epa">epa</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1224">
              <ruleml:Rel iri="prOnto:execute" />
              <ruleml:Var keyref=":ee" />
              <ruleml:Var key=":c">k</ruleml:Var>
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:contract" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1225">
              <ruleml:Rel iri="prOnto:partyOf" />
              <ruleml:Var keyref=":epa" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1226">
              <ruleml:Rel iri="prOnto:requestToEnter" />
              <ruleml:Var keyref=":er" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1227">
              <ruleml:Rel iri="prOnto:protect" />
              <ruleml:Var keyref=":epr" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":erf">erf</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1228">
              <ruleml:Rel iri="prOnto:rightsAndFreedomsOf" />
              <ruleml:Var keyref=":erf" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:exceptionCha3Sec4Art22Par2Point1" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements116">
    <lrml:ConstitutiveStatement key="statements116Formula1">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ei :eor :epr1 :epr2 :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:relatedTo :ep :ei) & (prOnto:implement' :ei :y :em)
	 & (prOnto:automatedDecisionMaking :em) & (rioOnto:or :eor :ea1 :ea2) & (prOnto:authorizedBy' :ea1 :ep EuropeanUnion)
	 & (prOnto:authorizedBy' :ea2 :ep prOnto:MSof(:y)) & (prOnto:protect' :epr1 :y :erf) & (prOnto:rightsAndFreedomsOf' :erf :w)
	 & (prOnto:protect' :epr2 :y :eli) & (prOnto:legitimateInterestOf' :eli :w),

	(rioOnto:exceptionCha3Sec4Art22Par1Point2 :ep)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ei">ei</ruleml:Var>
              <ruleml:Var key=":eor">eor</ruleml:Var>
              <ruleml:Var key=":epr1">epr1</ruleml:Var>
              <ruleml:Var key=":epr2">epr2</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1229">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1230">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:relatedTo" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":ei" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1231">
              <ruleml:Rel iri="prOnto:implement" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":em">em</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:automatedDecisionMaking" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eor" />
              <ruleml:Var key=":ea1">ea1</ruleml:Var>
              <ruleml:Var key=":ea2">ea2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1232">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":ea1" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Ind>EuropeanUnion</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1233">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":ea2" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:MSof" />
                <ruleml:Var keyref=":y" />
              </ruleml:Expr>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1234">
              <ruleml:Rel iri="prOnto:protect" />
              <ruleml:Var keyref=":epr1" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":erf">erf</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1235">
              <ruleml:Rel iri="prOnto:rightsAndFreedomsOf" />
              <ruleml:Var keyref=":erf" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1236">
              <ruleml:Rel iri="prOnto:protect" />
              <ruleml:Var keyref=":epr2" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":eli">eli</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1237">
              <ruleml:Rel iri="prOnto:legitimateInterestOf" />
              <ruleml:Var keyref=":eli" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:exceptionCha3Sec4Art22Par1Point2" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements117">
    <lrml:ConstitutiveStatement key="statements117Formula1">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ei :ehc :eau :epr :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:relatedTo :ep :ei) & (prOnto:implement' :ei :y :em)
	 & (prOnto:automatedDecisionMaking :em) & (prOnto:Purpose :epu) & (prOnto:isBasedOn :ep :epu)
	 & (prOnto:consent :c) & (prOnto:hasConsented' :ehc :w :c) & (prOnto:authorizedBy' :eau :epu :c)
	 & (prOnto:protect' :epr :y :erf) & (prOnto:rightsAndFreedomsOf' :erf :w),

	(rioOnto:exceptionCha3Sec4Art22Par1Point3 :ep)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ei">ei</ruleml:Var>
              <ruleml:Var key=":ehc">ehc</ruleml:Var>
              <ruleml:Var key=":eau">eau</ruleml:Var>
              <ruleml:Var key=":epr">epr</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1238">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1239">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:relatedTo" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":ei" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1240">
              <ruleml:Rel iri="prOnto:implement" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":em">em</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:automatedDecisionMaking" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Purpose" />
              <ruleml:Var key=":epu">epu</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isBasedOn" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":epu" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:consent" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1241">
              <ruleml:Rel iri="prOnto:hasConsented" />
              <ruleml:Var keyref=":ehc" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1242">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":eau" />
              <ruleml:Var keyref=":epu" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1243">
              <ruleml:Rel iri="prOnto:protect" />
              <ruleml:Var keyref=":epr" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":erf">erf</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1244">
              <ruleml:Rel iri="prOnto:rightsAndFreedomsOf" />
              <ruleml:Var keyref=":erf" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:exceptionCha3Sec4Art22Par1Point3" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements118">
    <lrml:ConstitutiveStatement key="statements118Formula1">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ei :eng :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:relatedTo :ep :ei) & (prOnto:implement' :ei :y :em)
	 & (prOnto:automatedDecisionMaking :em) & (prOnto:Purpose :epu) & (prOnto:isBasedOn :ep :epu)
	 & (prOnto:racialOrEthic :z) & (rioOnto:not :eng :a2) & (rioOnto:and :a2 :ehc :eau)
	 & (prOnto:consent :c) & (prOnto:hasConsented' :ehc :w :c) & (prOnto:authorizedBy' :eau :epu :c)
	 & (rioOnto:exceptionCha2Art9Par2Point7 :en),

	(rioOnto:exceptionCha3Sec4Art22Par4 :ep)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ei">ei</ruleml:Var>
              <ruleml:Var key=":eng">eng</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1245">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1246">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:relatedTo" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":ei" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1247">
              <ruleml:Rel iri="prOnto:implement" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":em">em</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:automatedDecisionMaking" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Purpose" />
              <ruleml:Var key=":epu">epu</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isBasedOn" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":epu" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:racialOrEthic" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":eng" />
              <ruleml:Var key=":a2">a2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a2" />
              <ruleml:Var key=":ehc">ehc</ruleml:Var>
              <ruleml:Var key=":eau">eau</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:consent" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1248">
              <ruleml:Rel iri="prOnto:hasConsented" />
              <ruleml:Var keyref=":ehc" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1249">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":eau" />
              <ruleml:Var keyref=":epu" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha2Art9Par2Point7" />
                <ruleml:Var keyref=":en" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:exceptionCha3Sec4Art22Par4" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
    <lrml:ConstitutiveStatement key="statements118Formula2">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ei :eng :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:relatedTo :ep :ei) & (prOnto:implement' :ei :y :em)
	 & (prOnto:automatedDecisionMaking :em) & (prOnto:Purpose :epu) & (prOnto:isBasedOn :ep :epu)
	 & (prOnto:politicalOpinion :z) & (rioOnto:not :eng :a2) & (rioOnto:and :a2 :ehc :eau)
	 & (prOnto:consent :c) & (prOnto:hasConsented' :ehc :w :c) & (prOnto:authorizedBy' :eau :epu :c)
	 & (rioOnto:exceptionCha2Art9Par2Point7 :en),

	(rioOnto:exceptionCha3Sec4Art22Par4 :ep)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ei">ei</ruleml:Var>
              <ruleml:Var key=":eng">eng</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1250">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1251">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:relatedTo" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":ei" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1252">
              <ruleml:Rel iri="prOnto:implement" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":em">em</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:automatedDecisionMaking" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Purpose" />
              <ruleml:Var key=":epu">epu</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isBasedOn" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":epu" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:politicalOpinion" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":eng" />
              <ruleml:Var key=":a2">a2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a2" />
              <ruleml:Var key=":ehc">ehc</ruleml:Var>
              <ruleml:Var key=":eau">eau</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:consent" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1253">
              <ruleml:Rel iri="prOnto:hasConsented" />
              <ruleml:Var keyref=":ehc" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1254">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":eau" />
              <ruleml:Var keyref=":epu" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha2Art9Par2Point7" />
                <ruleml:Var keyref=":en" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:exceptionCha3Sec4Art22Par4" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
    <lrml:ConstitutiveStatement key="statements118Formula3">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ei :eng :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:relatedTo :ep :ei) & (prOnto:implement' :ei :y :em)
	 & (prOnto:automatedDecisionMaking :em) & (prOnto:Purpose :epu) & (prOnto:isBasedOn :ep :epu)
	 & (prOnto:relOrPhilBelief :z) & (rioOnto:not :eng :a2) & (rioOnto:and :a2 :ehc :eau)
	 & (prOnto:consent :c) & (prOnto:hasConsented' :ehc :w :c) & (prOnto:authorizedBy' :eau :epu :c)
	 & (rioOnto:exceptionCha2Art9Par2Point7 :en),

	(rioOnto:exceptionCha3Sec4Art22Par4 :ep)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ei">ei</ruleml:Var>
              <ruleml:Var key=":eng">eng</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1255">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1256">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:relatedTo" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":ei" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1257">
              <ruleml:Rel iri="prOnto:implement" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":em">em</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:automatedDecisionMaking" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Purpose" />
              <ruleml:Var key=":epu">epu</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isBasedOn" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":epu" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:relOrPhilBelief" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":eng" />
              <ruleml:Var key=":a2">a2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a2" />
              <ruleml:Var key=":ehc">ehc</ruleml:Var>
              <ruleml:Var key=":eau">eau</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:consent" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1258">
              <ruleml:Rel iri="prOnto:hasConsented" />
              <ruleml:Var keyref=":ehc" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1259">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":eau" />
              <ruleml:Var keyref=":epu" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha2Art9Par2Point7" />
                <ruleml:Var keyref=":en" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:exceptionCha3Sec4Art22Par4" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
    <lrml:ConstitutiveStatement key="statements118Formula4">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ei :eng :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:relatedTo :ep :ei) & (prOnto:implement' :ei :y :em)
	 & (prOnto:automatedDecisionMaking :em) & (prOnto:Purpose :epu) & (prOnto:isBasedOn :ep :epu)
	 & (prOnto:tradeUnionMembership :z) & (rioOnto:not :eng :a2) & (rioOnto:and :a2 :ehc :eau)
	 & (prOnto:consent :c) & (prOnto:hasConsented' :ehc :w :c) & (prOnto:authorizedBy' :eau :epu :c)
	 & (rioOnto:exceptionCha2Art9Par2Point7 :en),

	(rioOnto:exceptionCha3Sec4Art22Par4 :ep)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ei">ei</ruleml:Var>
              <ruleml:Var key=":eng">eng</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1260">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1261">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:relatedTo" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":ei" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1262">
              <ruleml:Rel iri="prOnto:implement" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":em">em</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:automatedDecisionMaking" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Purpose" />
              <ruleml:Var key=":epu">epu</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isBasedOn" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":epu" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:tradeUnionMembership" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":eng" />
              <ruleml:Var key=":a2">a2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a2" />
              <ruleml:Var key=":ehc">ehc</ruleml:Var>
              <ruleml:Var key=":eau">eau</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:consent" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1263">
              <ruleml:Rel iri="prOnto:hasConsented" />
              <ruleml:Var keyref=":ehc" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1264">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":eau" />
              <ruleml:Var keyref=":epu" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha2Art9Par2Point7" />
                <ruleml:Var keyref=":en" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:exceptionCha3Sec4Art22Par4" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
    <lrml:ConstitutiveStatement key="statements118Formula5">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ei :eng :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:relatedTo :ep :ei) & (prOnto:implement' :ei :y :em)
	 & (prOnto:automatedDecisionMaking :em) & (prOnto:Purpose :epu) & (prOnto:isBasedOn :ep :epu)
	 & (prOnto:geneticData :z) & (rioOnto:not :eng :a2) & (rioOnto:and :a2 :ehc :eau)
	 & (prOnto:consent :c) & (prOnto:hasConsented' :ehc :w :c) & (prOnto:authorizedBy' :eau :epu :c)
	 & (rioOnto:exceptionCha2Art9Par2Point7 :en),

	(rioOnto:exceptionCha3Sec4Art22Par4 :ep)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ei">ei</ruleml:Var>
              <ruleml:Var key=":eng">eng</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1265">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1266">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:relatedTo" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":ei" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1267">
              <ruleml:Rel iri="prOnto:implement" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":em">em</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:automatedDecisionMaking" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Purpose" />
              <ruleml:Var key=":epu">epu</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isBasedOn" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":epu" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:geneticData" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":eng" />
              <ruleml:Var key=":a2">a2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a2" />
              <ruleml:Var key=":ehc">ehc</ruleml:Var>
              <ruleml:Var key=":eau">eau</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:consent" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1268">
              <ruleml:Rel iri="prOnto:hasConsented" />
              <ruleml:Var keyref=":ehc" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1269">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":eau" />
              <ruleml:Var keyref=":epu" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha2Art9Par2Point7" />
                <ruleml:Var keyref=":en" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:exceptionCha3Sec4Art22Par4" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
    <lrml:ConstitutiveStatement key="statements118Formula6">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ei :eng :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:relatedTo :ep :ei) & (prOnto:implement' :ei :y :em)
	 & (prOnto:automatedDecisionMaking :em) & (prOnto:Purpose :epu) & (prOnto:isBasedOn :ep :epu)
	 & (prOnto:biometricData :z) & (rioOnto:not :eng :a2) & (rioOnto:and :a2 :ehc :eau)
	 & (prOnto:consent :c) & (prOnto:hasConsented' :ehc :w :c) & (prOnto:authorizedBy' :eau :epu :c)
	 & (rioOnto:exceptionCha2Art9Par2Point7 :en),

	(rioOnto:exceptionCha3Sec4Art22Par4 :ep)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ei">ei</ruleml:Var>
              <ruleml:Var key=":eng">eng</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1270">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1271">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:relatedTo" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":ei" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1272">
              <ruleml:Rel iri="prOnto:implement" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":em">em</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:automatedDecisionMaking" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Purpose" />
              <ruleml:Var key=":epu">epu</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isBasedOn" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":epu" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:biometricData" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":eng" />
              <ruleml:Var key=":a2">a2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a2" />
              <ruleml:Var key=":ehc">ehc</ruleml:Var>
              <ruleml:Var key=":eau">eau</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:consent" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1273">
              <ruleml:Rel iri="prOnto:hasConsented" />
              <ruleml:Var keyref=":ehc" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1274">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":eau" />
              <ruleml:Var keyref=":epu" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha2Art9Par2Point7" />
                <ruleml:Var keyref=":en" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:exceptionCha3Sec4Art22Par4" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
    <lrml:ConstitutiveStatement key="statements118Formula7">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ei :eng :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:relatedTo :ep :ei) & (prOnto:implement' :ei :y :em)
	 & (prOnto:automatedDecisionMaking :em) & (prOnto:Health :epu) & (prOnto:isBasedOn :ep :epu)
	 & (rioOnto:not :eng :a2) & (rioOnto:and :a2 :ehc :eau) & (prOnto:consent :c)
	 & (prOnto:hasConsented' :ehc :w :c) & (prOnto:authorizedBy' :eau :epu :c) & (rioOnto:exceptionCha2Art9Par2Point7 :en),

	(rioOnto:exceptionCha3Sec4Art22Par4 :ep)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ei">ei</ruleml:Var>
              <ruleml:Var key=":eng">eng</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1275">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1276">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:relatedTo" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":ei" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1277">
              <ruleml:Rel iri="prOnto:implement" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":em">em</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:automatedDecisionMaking" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Health" />
              <ruleml:Var key=":epu">epu</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isBasedOn" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":epu" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":eng" />
              <ruleml:Var key=":a2">a2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a2" />
              <ruleml:Var key=":ehc">ehc</ruleml:Var>
              <ruleml:Var key=":eau">eau</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:consent" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1278">
              <ruleml:Rel iri="prOnto:hasConsented" />
              <ruleml:Var keyref=":ehc" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1279">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":eau" />
              <ruleml:Var keyref=":epu" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha2Art9Par2Point7" />
                <ruleml:Var keyref=":en" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:exceptionCha3Sec4Art22Par4" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
    <lrml:ConstitutiveStatement key="statements118Formula8">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ei :eng :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:relatedTo :ep :ei) & (prOnto:implement' :ei :y :em)
	 & (prOnto:automatedDecisionMaking :em) & (prOnto:Purpose :epu) & (prOnto:isBasedOn :ep :epu)
	 & (prOnto:sexLifeData :z) & (rioOnto:not :eng :a2) & (rioOnto:and :a2 :ehc :eau)
	 & (prOnto:consent :c) & (prOnto:hasConsented' :ehc :w :c) & (prOnto:authorizedBy' :eau :epu :c)
	 & (rioOnto:exceptionCha2Art9Par2Point7 :en),

	(rioOnto:exceptionCha3Sec4Art22Par4 :ep)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ei">ei</ruleml:Var>
              <ruleml:Var key=":eng">eng</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1280">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1281">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:relatedTo" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":ei" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1282">
              <ruleml:Rel iri="prOnto:implement" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":em">em</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:automatedDecisionMaking" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Purpose" />
              <ruleml:Var key=":epu">epu</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isBasedOn" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":epu" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:sexLifeData" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":eng" />
              <ruleml:Var key=":a2">a2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a2" />
              <ruleml:Var key=":ehc">ehc</ruleml:Var>
              <ruleml:Var key=":eau">eau</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:consent" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1283">
              <ruleml:Rel iri="prOnto:hasConsented" />
              <ruleml:Var keyref=":ehc" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1284">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":eau" />
              <ruleml:Var keyref=":epu" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha2Art9Par2Point7" />
                <ruleml:Var keyref=":en" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:exceptionCha3Sec4Art22Par4" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
    <lrml:ConstitutiveStatement key="statements118Formula9">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ei :eng :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:relatedTo :ep :ei) & (prOnto:implement' :ei :y :em)
	 & (prOnto:automatedDecisionMaking :em) & (prOnto:Purpose :epu) & (prOnto:isBasedOn :ep :epu)
	 & (prOnto:sexualOrientation :z) & (rioOnto:not :eng :a2) & (rioOnto:and :a2 :ehc :eau)
	 & (prOnto:consent :c) & (prOnto:hasConsented' :ehc :w :c) & (prOnto:authorizedBy' :eau :epu :c)
	 & (rioOnto:exceptionCha2Art9Par2Point7 :en),

	(rioOnto:exceptionCha3Sec4Art22Par4 :ep)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ei">ei</ruleml:Var>
              <ruleml:Var key=":eng">eng</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1285">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1286">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:relatedTo" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":ei" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1287">
              <ruleml:Rel iri="prOnto:implement" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":em">em</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:automatedDecisionMaking" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Purpose" />
              <ruleml:Var key=":epu">epu</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isBasedOn" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":epu" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:sexualOrientation" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":eng" />
              <ruleml:Var key=":a2">a2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a2" />
              <ruleml:Var key=":ehc">ehc</ruleml:Var>
              <ruleml:Var key=":eau">eau</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:consent" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1288">
              <ruleml:Rel iri="prOnto:hasConsented" />
              <ruleml:Var keyref=":ehc" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1289">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":eau" />
              <ruleml:Var keyref=":epu" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha2Art9Par2Point7" />
                <ruleml:Var keyref=":en" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:exceptionCha3Sec4Art22Par4" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
    <lrml:ConstitutiveStatement key="statements118Formula10">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :ei :ert :epr :eor :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (rioOnto:imply :ei :pi :ep) & (prOnto:PublicInterest :pi)
	 & (prOnto:measure :em) & (prOnto:implement' :eim :y :em) & (prOnto:protect' :epr :em :erf)
	 & (prOnto:rightsAndFreedomsOf' :erf :w),

	(rioOnto:exceptionCha2Art9Par2Point7 :ep)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":ei">ei</ruleml:Var>
              <ruleml:Var key=":ert">ert</ruleml:Var>
              <ruleml:Var key=":epr">epr</ruleml:Var>
              <ruleml:Var key=":eor">eor</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1290">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1291">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:imply" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var key=":pi">pi</ruleml:Var>
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PublicInterest" />
              <ruleml:Var keyref=":pi" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:measure" />
              <ruleml:Var key=":em">em</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1292">
              <ruleml:Rel iri="prOnto:implement" />
              <ruleml:Var keyref=":eim" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1293">
              <ruleml:Rel iri="prOnto:protect" />
              <ruleml:Var keyref=":epr" />
              <ruleml:Var keyref=":em" />
              <ruleml:Var key=":erf">erf</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1294">
              <ruleml:Rel iri="prOnto:rightsAndFreedomsOf" />
              <ruleml:Var keyref=":erf" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:exceptionCha2Art9Par2Point7" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements119">
    <lrml:PrescriptiveStatement key="statements119Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z),

	(rioOnto:RexistAtTime :a2 :t1) & (rioOnto:and :a2 :ei :eca :ea) & (prOnto:implement' :ei :y :em) & (prOnto:measure :em)
	 & (rioOnto:cause' :eca :ei :eco) & (prOnto:complyWith' :eco :ep GDPR) & (prOnto:ableTo' :ea :y :ed)
	 & (prOnto:demonstrate' :ed :y :eco)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1295">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1296">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":a2">a2</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:and" />
                <ruleml:Var keyref=":a2" />
                <ruleml:Var key=":ei">ei</ruleml:Var>
                <ruleml:Var key=":eca">eca</ruleml:Var>
                <ruleml:Var key=":ea">ea</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1297">
                <ruleml:Rel iri="prOnto:implement" />
                <ruleml:Var keyref=":ei" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var key=":em">em</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:measure" />
                <ruleml:Var keyref=":em" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1298">
                <ruleml:Rel iri="rioOnto:cause" />
                <ruleml:Var keyref=":eca" />
                <ruleml:Var keyref=":ei" />
                <ruleml:Var key=":eco">eco</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1299">
                <ruleml:Rel iri="prOnto:complyWith" />
                <ruleml:Var keyref=":eco" />
                <ruleml:Var keyref=":ep" />
                <ruleml:Ind>GDPR</ruleml:Ind>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1300">
                <ruleml:Rel iri="prOnto:ableTo" />
                <ruleml:Var keyref=":ea" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var key=":ed">ed</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1301">
                <ruleml:Rel iri="prOnto:demonstrate" />
                <ruleml:Var keyref=":ed" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":eco" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements120">
    <lrml:PrescriptiveStatement key="statements120Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :er :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:reasonable' :er :ert) & (prOnto:relatedTo' :ert :dpp :ep)
	 & (prOnto:dataProtectionPolicies :dpp),

	(rioOnto:RexistAtTime :ei :t1) & (prOnto:implement' :ei :y :dpp)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":er">er</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1302">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1303">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1304">
              <ruleml:Rel iri="prOnto:reasonable" />
              <ruleml:Var keyref=":er" />
              <ruleml:Var key=":ert">ert</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1305">
              <ruleml:Rel iri="prOnto:relatedTo" />
              <ruleml:Var keyref=":ert" />
              <ruleml:Var key=":dpp">dpp</ruleml:Var>
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:dataProtectionPolicies" />
              <ruleml:Var keyref=":dpp" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":ei">ei</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1306">
                <ruleml:Rel iri="prOnto:implement" />
                <ruleml:Var keyref=":ei" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":dpp" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements121">
    <lrml:ConstitutiveStatement key="statements121Formula1">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :ead :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:adhereTo' :ead :y :cc) & (prOnto:codeOfConduct :cc),

	(rioOnto:RexistAtTime :ea :t1) & (prOnto:ableTo' :ea :y :ed) & (prOnto:demonstrate' :ed :y :eco) & (prOnto:complyWith' :eco :ep GDPR)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":ead">ead</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1307">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1308">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1309">
              <ruleml:Rel iri="prOnto:adhereTo" />
              <ruleml:Var keyref=":ead" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":cc">cc</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:codeOfConduct" />
              <ruleml:Var keyref=":cc" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":ea">ea</ruleml:Var>
              <ruleml:Var keyref=":t1" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1310">
              <ruleml:Rel iri="prOnto:ableTo" />
              <ruleml:Var keyref=":ea" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":ed">ed</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1311">
              <ruleml:Rel iri="prOnto:demonstrate" />
              <ruleml:Var keyref=":ed" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":eco">eco</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1312">
              <ruleml:Rel iri="prOnto:complyWith" />
              <ruleml:Var keyref=":eco" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Ind>GDPR</ruleml:Ind>
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
    <lrml:ConstitutiveStatement key="statements121Formula2">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :ead :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:adhereTo' :ead :y :acm) & (prOnto:approvedCertificationMechanism :acm),

	(rioOnto:RexistAtTime :ea :t1) & (prOnto:ableTo' :ea :y :ed) & (prOnto:demonstrate' :ed :y :eco) & (prOnto:complyWith' :eco :ep GDPR)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":ead">ead</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1313">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1314">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1315">
              <ruleml:Rel iri="prOnto:adhereTo" />
              <ruleml:Var keyref=":ead" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":acm">acm</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:approvedCertificationMechanism" />
              <ruleml:Var keyref=":acm" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":ea">ea</ruleml:Var>
              <ruleml:Var keyref=":t1" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1316">
              <ruleml:Rel iri="prOnto:ableTo" />
              <ruleml:Var keyref=":ea" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":ed">ed</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1317">
              <ruleml:Rel iri="prOnto:demonstrate" />
              <ruleml:Var keyref=":ed" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":eco">eco</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1318">
              <ruleml:Rel iri="prOnto:complyWith" />
              <ruleml:Var keyref=":eco" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Ind>GDPR</ruleml:Ind>
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements122">
    <lrml:PrescriptiveStatement key="statements122Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z),

	(rioOnto:RexistAtTime :a2 :t1) & (rioOnto:and :a2 :ei :enf) & (prOnto:measure :em) & (prOnto:implement' :ei :y :em)
	 & (prOnto:enforce' :enf :em :eco) & (prOnto:complyWith' :eco :ep GDPR)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1319">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1320">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":a2">a2</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:and" />
                <ruleml:Var keyref=":a2" />
                <ruleml:Var key=":ei">ei</ruleml:Var>
                <ruleml:Var key=":enf">enf</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:measure" />
                <ruleml:Var key=":em">em</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1321">
                <ruleml:Rel iri="prOnto:implement" />
                <ruleml:Var keyref=":ei" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":em" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1322">
                <ruleml:Rel iri="prOnto:enforce" />
                <ruleml:Var keyref=":enf" />
                <ruleml:Var keyref=":em" />
                <ruleml:Var key=":eco">eco</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1323">
                <ruleml:Rel iri="prOnto:complyWith" />
                <ruleml:Var keyref=":eco" />
                <ruleml:Var keyref=":ep" />
                <ruleml:Ind>GDPR</ruleml:Ind>
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements123">
    <lrml:PrescriptiveStatement key="statements123Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :eds :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:Purpose :epu) & (prOnto:isBasedOn :ep :epu)
	 & (prOnto:setToDefault' :eds :ep),

	(rioOnto:RexistAtTime :eim :t1) & (rioOnto:imply :eim :z :epu)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":eds">eds</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1324">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1325">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Purpose" />
              <ruleml:Var key=":epu">epu</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isBasedOn" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":epu" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1326">
              <ruleml:Rel iri="prOnto:setToDefault" />
              <ruleml:Var keyref=":eds" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":eim">eim</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:imply" />
                <ruleml:Var keyref=":eim" />
                <ruleml:Var keyref=":z" />
                <ruleml:Var keyref=":epu" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements124">
    <lrml:ConstitutiveStatement key="statements124Formula1">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ed1 :ed2) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y1 :z) & (prOnto:Controller :y2 :z) & (prOnto:PersonalDataProcessing' :ep :x :z)
	 & (prOnto:define' :ed1 :y1 :ep) & (prOnto:define' :ed2 :y2 :ep),

	(prOnto:jointDataController :y) & (rioOnto:partOf :y1 :y) & (rioOnto:partOf :y2 :y)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ed1">ed1</ruleml:Var>
              <ruleml:Var key=":ed2">ed2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y1">y1</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y2">y2</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1327">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":x">x</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1328">
              <ruleml:Rel iri="prOnto:define" />
              <ruleml:Var keyref=":ed1" />
              <ruleml:Var keyref=":y1" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1329">
              <ruleml:Rel iri="prOnto:define" />
              <ruleml:Var keyref=":ed2" />
              <ruleml:Var keyref=":y2" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:jointDataController" />
              <ruleml:Var key=":y">y</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:partOf" />
              <ruleml:Var keyref=":y1" />
              <ruleml:Var keyref=":y" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:partOf" />
              <ruleml:Var keyref=":y2" />
              <ruleml:Var keyref=":y" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
    <lrml:PrescriptiveStatement key="statements124Formula2">
      <!--
Obligation:
(
	(prOnto:DataSubject :w) & (prOnto:PersonalData :z :w) & (prOnto:Controller :y1 :z) & (prOnto:Controller :y2 :z)
	 & (prOnto:jointDataController :y) & (rioOnto:partOf :y1 :y) & (rioOnto:partOf :y2 :y)
	 & (rioOnto:exceptionCha4Sec1Art26Par1 :y),

	(rioOnto:RexistAtTime :a2 :t1) & (rioOnto:and :a2 :ep1 :ep2 :ed1 :ed2 :er1 :er2 :ecp) & (prOnto:contract :c) & (prOnto:public :c)
	 & (prOnto:partyOf' :ep1 :y1 :c) & (prOnto:partyOf' :ep2 :y2 :c) & (prOnto:define' :ed1 :c :er1)
	 & (prOnto:define' :ed2 :c :er2) & (prOnto:responsibleFor' :er1 :y1 :ec1) & (prOnto:complyWith' :ec1 :y1 GDPR)
	 & (prOnto:responsibleFor' :er2 :y2 :ec2) & (prOnto:complyWith' :ec2 :y2 GDPR) & (prOnto:define' :ecp :c :k)
	 & (prOnto:contactPointFor :k :w)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y1">y1</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y2">y2</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:jointDataController" />
              <ruleml:Var key=":y">y</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:partOf" />
              <ruleml:Var keyref=":y1" />
              <ruleml:Var keyref=":y" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:partOf" />
              <ruleml:Var keyref=":y2" />
              <ruleml:Var keyref=":y" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha4Sec1Art26Par1" />
                <ruleml:Var keyref=":y" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":a2">a2</ruleml:Var>
                <ruleml:Var key=":t1">t1</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:and" />
                <ruleml:Var keyref=":a2" />
                <ruleml:Var key=":ep1">ep1</ruleml:Var>
                <ruleml:Var key=":ep2">ep2</ruleml:Var>
                <ruleml:Var key=":ed1">ed1</ruleml:Var>
                <ruleml:Var key=":ed2">ed2</ruleml:Var>
                <ruleml:Var key=":er1">er1</ruleml:Var>
                <ruleml:Var key=":er2">er2</ruleml:Var>
                <ruleml:Var key=":ecp">ecp</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:contract" />
                <ruleml:Var key=":c">c</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:public" />
                <ruleml:Var keyref=":c" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1330">
                <ruleml:Rel iri="prOnto:partyOf" />
                <ruleml:Var keyref=":ep1" />
                <ruleml:Var keyref=":y1" />
                <ruleml:Var keyref=":c" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1331">
                <ruleml:Rel iri="prOnto:partyOf" />
                <ruleml:Var keyref=":ep2" />
                <ruleml:Var keyref=":y2" />
                <ruleml:Var keyref=":c" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1332">
                <ruleml:Rel iri="prOnto:define" />
                <ruleml:Var keyref=":ed1" />
                <ruleml:Var keyref=":c" />
                <ruleml:Var keyref=":er1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1333">
                <ruleml:Rel iri="prOnto:define" />
                <ruleml:Var keyref=":ed2" />
                <ruleml:Var keyref=":c" />
                <ruleml:Var keyref=":er2" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1334">
                <ruleml:Rel iri="prOnto:responsibleFor" />
                <ruleml:Var keyref=":er1" />
                <ruleml:Var keyref=":y1" />
                <ruleml:Var key=":ec1">ec1</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1335">
                <ruleml:Rel iri="prOnto:complyWith" />
                <ruleml:Var keyref=":ec1" />
                <ruleml:Var keyref=":y1" />
                <ruleml:Ind>GDPR</ruleml:Ind>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1336">
                <ruleml:Rel iri="prOnto:responsibleFor" />
                <ruleml:Var keyref=":er2" />
                <ruleml:Var keyref=":y2" />
                <ruleml:Var key=":ec2">ec2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1337">
                <ruleml:Rel iri="prOnto:complyWith" />
                <ruleml:Var keyref=":ec2" />
                <ruleml:Var keyref=":y2" />
                <ruleml:Ind>GDPR</ruleml:Ind>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1338">
                <ruleml:Rel iri="prOnto:define" />
                <ruleml:Var keyref=":ecp" />
                <ruleml:Var keyref=":c" />
                <ruleml:Var key=":k">k</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:contactPointFor" />
                <ruleml:Var keyref=":k" />
                <ruleml:Var keyref=":w" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:ConstitutiveStatement key="statements124Formula3">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :eor1 :eor2 :er1 :er2) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y1 :z) & (prOnto:Controller :y2 :z) & (prOnto:jointDataController :y)
	 & (rioOnto:partOf :y1 :y) & (rioOnto:partOf :y2 :y) & (rioOnto:or :eor1 :ed11 :ed12)
	 & (prOnto:define' :ed11 EuropeanUnion :er1) & (prOnto:define' :ed12 prOnto:MSof(:y) :er1) & (rioOnto:or :eor2 :ed21 :ed22)
	 & (prOnto:define' :ed21 EuropeanUnion :er2) & (prOnto:define' :ed22 prOnto:MSof(:y) :er2) & (prOnto:responsibleFor' :er1 :y1 :ec1)
	 & (prOnto:complyWith' :ec1 :y1 GDPR) & (prOnto:responsibleFor' :er2 :y2 :ec2) & (prOnto:complyWith' :ec2 :y2 GDPR),

	(rioOnto:exceptionCha4Sec1Art26Par1 :y)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":eor1">eor1</ruleml:Var>
              <ruleml:Var key=":eor2">eor2</ruleml:Var>
              <ruleml:Var key=":er1">er1</ruleml:Var>
              <ruleml:Var key=":er2">er2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y1">y1</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y2">y2</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:jointDataController" />
              <ruleml:Var key=":y">y</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:partOf" />
              <ruleml:Var keyref=":y1" />
              <ruleml:Var keyref=":y" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:partOf" />
              <ruleml:Var keyref=":y2" />
              <ruleml:Var keyref=":y" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eor1" />
              <ruleml:Var key=":ed11">ed11</ruleml:Var>
              <ruleml:Var key=":ed12">ed12</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1339">
              <ruleml:Rel iri="prOnto:define" />
              <ruleml:Var keyref=":ed11" />
              <ruleml:Ind>EuropeanUnion</ruleml:Ind>
              <ruleml:Var keyref=":er1" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1340">
              <ruleml:Rel iri="prOnto:define" />
              <ruleml:Var keyref=":ed12" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:MSof" />
                <ruleml:Var keyref=":y" />
              </ruleml:Expr>
              <ruleml:Var keyref=":er1" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eor2" />
              <ruleml:Var key=":ed21">ed21</ruleml:Var>
              <ruleml:Var key=":ed22">ed22</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1341">
              <ruleml:Rel iri="prOnto:define" />
              <ruleml:Var keyref=":ed21" />
              <ruleml:Ind>EuropeanUnion</ruleml:Ind>
              <ruleml:Var keyref=":er2" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1342">
              <ruleml:Rel iri="prOnto:define" />
              <ruleml:Var keyref=":ed22" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:MSof" />
                <ruleml:Var keyref=":y" />
              </ruleml:Expr>
              <ruleml:Var keyref=":er2" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1343">
              <ruleml:Rel iri="prOnto:responsibleFor" />
              <ruleml:Var keyref=":er1" />
              <ruleml:Var keyref=":y1" />
              <ruleml:Var key=":ec1">ec1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1344">
              <ruleml:Rel iri="prOnto:complyWith" />
              <ruleml:Var keyref=":ec1" />
              <ruleml:Var keyref=":y1" />
              <ruleml:Ind>GDPR</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1345">
              <ruleml:Rel iri="prOnto:responsibleFor" />
              <ruleml:Var keyref=":er2" />
              <ruleml:Var keyref=":y2" />
              <ruleml:Var key=":ec2">ec2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1346">
              <ruleml:Rel iri="prOnto:complyWith" />
              <ruleml:Var keyref=":ec2" />
              <ruleml:Var keyref=":y2" />
              <ruleml:Ind>GDPR</ruleml:Ind>
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:Atom>
            <ruleml:Rel iri="rioOnto:exceptionCha4Sec1Art26Par1" />
            <ruleml:Var keyref=":y" />
          </ruleml:Atom>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements125">
    <lrml:PrescriptiveStatement key="statements125Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep1 :ep2) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y1 :z) & (prOnto:Controller :y2 :z) & (prOnto:jointDataController :y)
	 & (rioOnto:partOf :y1 :y) & (rioOnto:partOf :y2 :y) & (prOnto:contract :c)
	 & (prOnto:public :c) & (prOnto:partyOf' :ep1 :y1 :c) & (prOnto:partyOf' :ep2 :y2 :c),

	(rioOnto:RexistAtTime :a2 :t1) & (rioOnto:and :a2 :ed1 :ed2 :er1 :er2 :eac) & (prOnto:define' :ed1 :c :er1) & (prOnto:define' :ed2 :c :er2)
	 & (prOnto:relatedTo' :er1 :y1 :w) & (prOnto:relatedTo' :er2 :y2 :w) & (prOnto:access' :eac :w :c)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep1">ep1</ruleml:Var>
              <ruleml:Var key=":ep2">ep2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y1">y1</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y2">y2</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:jointDataController" />
              <ruleml:Var key=":y">y</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:partOf" />
              <ruleml:Var keyref=":y1" />
              <ruleml:Var keyref=":y" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:partOf" />
              <ruleml:Var keyref=":y2" />
              <ruleml:Var keyref=":y" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:contract" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:public" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1347">
              <ruleml:Rel iri="prOnto:partyOf" />
              <ruleml:Var keyref=":ep1" />
              <ruleml:Var keyref=":y1" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1348">
              <ruleml:Rel iri="prOnto:partyOf" />
              <ruleml:Var keyref=":ep2" />
              <ruleml:Var keyref=":y2" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":a2">a2</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:and" />
                <ruleml:Var keyref=":a2" />
                <ruleml:Var key=":ed1">ed1</ruleml:Var>
                <ruleml:Var key=":ed2">ed2</ruleml:Var>
                <ruleml:Var key=":er1">er1</ruleml:Var>
                <ruleml:Var key=":er2">er2</ruleml:Var>
                <ruleml:Var key=":eac">eac</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1349">
                <ruleml:Rel iri="prOnto:define" />
                <ruleml:Var keyref=":ed1" />
                <ruleml:Var keyref=":c" />
                <ruleml:Var keyref=":er1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1350">
                <ruleml:Rel iri="prOnto:define" />
                <ruleml:Var keyref=":ed2" />
                <ruleml:Var keyref=":c" />
                <ruleml:Var keyref=":er2" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1351">
                <ruleml:Rel iri="prOnto:relatedTo" />
                <ruleml:Var keyref=":er1" />
                <ruleml:Var keyref=":y1" />
                <ruleml:Var keyref=":w" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1352">
                <ruleml:Rel iri="prOnto:relatedTo" />
                <ruleml:Var keyref=":er2" />
                <ruleml:Var keyref=":y2" />
                <ruleml:Var keyref=":w" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1353">
                <ruleml:Rel iri="prOnto:access" />
                <ruleml:Var keyref=":eac" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":c" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements126">
    <lrml:PrescriptiveStatement key="statements126Formula1">
      <!--
Permission:
(
	(prOnto:DataSubject :w) & (prOnto:PersonalData :z :w) & (prOnto:Controller :y1 :z) & (prOnto:Controller :y2 :z)
	 & (prOnto:jointDataController :y) & (rioOnto:partOf :y1 :y) & (rioOnto:partOf :y2 :y),

	(rioOnto:RexistAtTime :o2 :t1) & (rioOnto:or :o2 :er1 :er2) & (prOnto:request' :er1 :w :ef1) & (prOnto:enforce' :ef1 :y1 :erf)
	 & (prOnto:request' :er2 :w :ef2) & (prOnto:enforce' :ef2 :y2 :erf) & (prOnto:rightsAndFreedomsOf' :erf GDPR)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y1">y1</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y2">y2</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:jointDataController" />
              <ruleml:Var key=":y">y</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:partOf" />
              <ruleml:Var keyref=":y1" />
              <ruleml:Var keyref=":y" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:partOf" />
              <ruleml:Var keyref=":y2" />
              <ruleml:Var keyref=":y" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Permission iri="rioOnto:Permission">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":o2">o2</ruleml:Var>
                <ruleml:Var key=":t1">t1</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:or" />
                <ruleml:Var keyref=":o2" />
                <ruleml:Var key=":er1">er1</ruleml:Var>
                <ruleml:Var key=":er2">er2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1354">
                <ruleml:Rel iri="prOnto:request" />
                <ruleml:Var keyref=":er1" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var key=":ef1">ef1</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1355">
                <ruleml:Rel iri="prOnto:enforce" />
                <ruleml:Var keyref=":ef1" />
                <ruleml:Var keyref=":y1" />
                <ruleml:Var key=":erf">erf</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1356">
                <ruleml:Rel iri="prOnto:request" />
                <ruleml:Var keyref=":er2" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var key=":ef2">ef2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1357">
                <ruleml:Rel iri="prOnto:enforce" />
                <ruleml:Var keyref=":ef2" />
                <ruleml:Var keyref=":y2" />
                <ruleml:Var keyref=":erf" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1358">
                <ruleml:Rel iri="prOnto:rightsAndFreedomsOf" />
                <ruleml:Var keyref=":erf" />
                <ruleml:Ind>GDPR</ruleml:Ind>
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Permission>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements127">
    <lrml:PrescriptiveStatement key="statements127Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :eor :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:countryOf :w :cw) & (rioOnto:partOf :cw EuropeanUnion)
	 & (prOnto:countryOf :y :cy) & (rioOnto:partOf :cy EuropeanUnion) & (rioOnto:or :eor :eof :emo)
	 & (prOnto:offer' :eof :y :k) & (prOnto:goodsOrServices :k) & (prOnto:monitor' :emo :y :w)
	 & (rioOnto:exceptionCha4Sec1Art27Par2Point1 :z) & (rioOnto:exceptionCha4Sec1Art27Par2Point2 :z),

	(rioOnto:RexistAtTime :erb :t2) & (rioOnto:>= :t2 :t1) & (prOnto:isRepresentedBy' :erb :y :k) & (prOnto:Representative :k)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":eor">eor</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1359">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1360">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:countryOf" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var key=":cw">cw</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:partOf" />
              <ruleml:Var keyref=":cw" />
              <ruleml:Ind>EuropeanUnion</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:countryOf" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":cy">cy</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:partOf" />
              <ruleml:Var keyref=":cy" />
              <ruleml:Ind>EuropeanUnion</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eor" />
              <ruleml:Var key=":eof">eof</ruleml:Var>
              <ruleml:Var key=":emo">emo</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1361">
              <ruleml:Rel iri="prOnto:offer" />
              <ruleml:Var keyref=":eof" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:goodsOrServices" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1362">
              <ruleml:Rel iri="prOnto:monitor" />
              <ruleml:Var keyref=":emo" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha4Sec1Art27Par2Point1" />
                <ruleml:Var keyref=":z" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha4Sec1Art27Par2Point2" />
                <ruleml:Var keyref=":z" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":erb">erb</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1363">
                <ruleml:Rel iri="prOnto:isRepresentedBy" />
                <ruleml:Var keyref=":erb" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var key=":k">k</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:Representative" />
                <ruleml:Var keyref=":k" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements127Formula2">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :eor :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:countryOf :w :cw) & (rioOnto:partOf :cw EuropeanUnion)
	 & (prOnto:countryOf :x :cx) & (rioOnto:partOf :cx EuropeanUnion) & (rioOnto:or :eor :eof :emo)
	 & (prOnto:offer' :eof :x :k) & (prOnto:goodsOrServices :k) & (prOnto:monitor' :emo :x :w)
	 & (rioOnto:exceptionCha4Sec1Art27Par2Point1 :z) & (rioOnto:exceptionCha4Sec1Art27Par2Point2 :z),

	(rioOnto:RexistAtTime :erb :t2) & (rioOnto:>= :t2 :t1) & (prOnto:isRepresentedBy' :erb :x :k) & (prOnto:Representative :k)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":eor">eor</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1364">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1365">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:countryOf" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var key=":cw">cw</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:partOf" />
              <ruleml:Var keyref=":cw" />
              <ruleml:Ind>EuropeanUnion</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:countryOf" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var key=":cx">cx</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:partOf" />
              <ruleml:Var keyref=":cx" />
              <ruleml:Ind>EuropeanUnion</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eor" />
              <ruleml:Var key=":eof">eof</ruleml:Var>
              <ruleml:Var key=":emo">emo</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1366">
              <ruleml:Rel iri="prOnto:offer" />
              <ruleml:Var keyref=":eof" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:goodsOrServices" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1367">
              <ruleml:Rel iri="prOnto:monitor" />
              <ruleml:Var keyref=":emo" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha4Sec1Art27Par2Point1" />
                <ruleml:Var keyref=":z" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha4Sec1Art27Par2Point2" />
                <ruleml:Var keyref=":z" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":erb">erb</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1368">
                <ruleml:Rel iri="prOnto:isRepresentedBy" />
                <ruleml:Var keyref=":erb" />
                <ruleml:Var keyref=":x" />
                <ruleml:Var key=":k">k</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:Representative" />
                <ruleml:Var keyref=":k" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements128">
    <lrml:ConstitutiveStatement key="statements128Formula1">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :eoc :en :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:occasional' :eoc :ep) & (rioOnto:not :en :el)
	 & (prOnto:likely' :el :eca) & (rioOnto:cause' :eca :ep :er) & (prOnto:riskFor' :er :erf)
	 & (prOnto:rightsAndFreedomsOf' :erf :w) & (rioOnto:exceptionCha4Sec1Art27Par2Point1A9P1orA10 :z),

	(rioOnto:exceptionCha4Sec1Art27Par2Point1 :ep)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":eoc">eoc</ruleml:Var>
              <ruleml:Var key=":en">en</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1369">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1370">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1371">
              <ruleml:Rel iri="prOnto:occasional" />
              <ruleml:Var keyref=":eoc" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en" />
              <ruleml:Var key=":el">el</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1372">
              <ruleml:Rel iri="prOnto:likely" />
              <ruleml:Var keyref=":el" />
              <ruleml:Var key=":eca">eca</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1373">
              <ruleml:Rel iri="rioOnto:cause" />
              <ruleml:Var keyref=":eca" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var key=":er">er</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1374">
              <ruleml:Rel iri="prOnto:riskFor" />
              <ruleml:Var keyref=":er" />
              <ruleml:Var key=":erf">erf</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1375">
              <ruleml:Rel iri="prOnto:rightsAndFreedomsOf" />
              <ruleml:Var keyref=":erf" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha4Sec1Art27Par2Point1A9P1orA10" />
                <ruleml:Var keyref=":z" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:exceptionCha4Sec1Art27Par2Point1" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
    <lrml:ConstitutiveStatement key="statements128Formula2">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:racialOrEthic :z),

	(rioOnto:exceptionCha4Sec1Art27Par2Point1A9P1orA10 :z)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1376">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1377">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:racialOrEthic" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:exceptionCha4Sec1Art27Par2Point1A9P1orA10" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
    <lrml:ConstitutiveStatement key="statements128Formula3">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:politicalOpinion :z),

	(rioOnto:exceptionCha4Sec1Art27Par2Point1A9P1orA10 :z)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1378">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1379">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:politicalOpinion" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:exceptionCha4Sec1Art27Par2Point1A9P1orA10" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
    <lrml:ConstitutiveStatement key="statements128Formula4">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:relOrPhilBelief :z),

	(rioOnto:exceptionCha4Sec1Art27Par2Point1A9P1orA10 :z)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1380">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1381">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:relOrPhilBelief" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:exceptionCha4Sec1Art27Par2Point1A9P1orA10" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
    <lrml:ConstitutiveStatement key="statements128Formula5">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:tradeUnionMembership :z),

	(rioOnto:exceptionCha4Sec1Art27Par2Point1A9P1orA10 :z)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1382">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1383">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:tradeUnionMembership" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:exceptionCha4Sec1Art27Par2Point1A9P1orA10" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
    <lrml:ConstitutiveStatement key="statements128Formula6">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:geneticData :z),

	(rioOnto:exceptionCha4Sec1Art27Par2Point1A9P1orA10 :z)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1384">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1385">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:geneticData" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:exceptionCha4Sec1Art27Par2Point1A9P1orA10" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
    <lrml:ConstitutiveStatement key="statements128Formula7">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:biometricData :z),

	(rioOnto:exceptionCha4Sec1Art27Par2Point1A9P1orA10 :z)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1386">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1387">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:biometricData" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:exceptionCha4Sec1Art27Par2Point1A9P1orA10" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
    <lrml:ConstitutiveStatement key="statements128Formula8">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:Health :epu) & (prOnto:isBasedOn :ep :epu),

	(rioOnto:exceptionCha4Sec1Art27Par2Point1A9P1orA10 :z)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1388">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1389">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Health" />
              <ruleml:Var key=":epu">epu</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isBasedOn" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":epu" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:exceptionCha4Sec1Art27Par2Point1A9P1orA10" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
    <lrml:ConstitutiveStatement key="statements128Formula9">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:sexLifeData :z),

	(rioOnto:exceptionCha4Sec1Art27Par2Point1A9P1orA10 :z)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1390">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1391">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:sexLifeData" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:exceptionCha4Sec1Art27Par2Point1A9P1orA10" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
    <lrml:ConstitutiveStatement key="statements128Formula10">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:sexualOrientation :z),

	(rioOnto:exceptionCha4Sec1Art27Par2Point1A9P1orA10 :z)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1392">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1393">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:sexualOrientation" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:exceptionCha4Sec1Art27Par2Point1A9P1orA10" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
    <lrml:ConstitutiveStatement key="statements128Formula11">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:Judicial :epu) & (prOnto:isBasedOn :ep :epu),

	(rioOnto:exceptionCha4Sec1Art27Par2Point1A9P1orA10 :z)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1394">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1395">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Judicial" />
              <ruleml:Var key=":epu">epu</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isBasedOn" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":epu" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:exceptionCha4Sec1Art27Par2Point1A9P1orA10" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements129">
    <lrml:ConstitutiveStatement key="statements129Formula1">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :eoc :en :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:publicAuthority :y),

	(rioOnto:exceptionCha4Sec1Art27Par2Point2 :z)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":eoc">eoc</ruleml:Var>
              <ruleml:Var key=":en">en</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1396">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1397">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:publicAuthority" />
              <ruleml:Var keyref=":y" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:exceptionCha4Sec1Art27Par2Point2" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
    <lrml:ConstitutiveStatement key="statements129Formula2">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :eoc :en :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:publicAuthority :x),

	(rioOnto:exceptionCha4Sec1Art27Par2Point2 :z)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":eoc">eoc</ruleml:Var>
              <ruleml:Var key=":en">en</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1398">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1399">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:publicAuthority" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:exceptionCha4Sec1Art27Par2Point2" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements130">
    <lrml:ConstitutiveStatement key="statements130Formula1">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:isRepresentedBy :y :k) & (prOnto:Representative :k),

	(prOnto:contactPointFor :k :w) & (prOnto:contactPointFor :k prOnto:supAuth(prOnto:MSof(:y)))
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1400">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1401">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isRepresentedBy" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Representative" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:contactPointFor" />
              <ruleml:Var keyref=":k" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:contactPointFor" />
              <ruleml:Var keyref=":k" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:supAuth" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:MSof" />
                  <ruleml:Var keyref=":y" />
                </ruleml:Expr>
              </ruleml:Expr>
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
    <lrml:ConstitutiveStatement key="statements130Formula2">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:isRepresentedBy :x :k) & (prOnto:Representative :k),

	(prOnto:contactPointFor :k :w) & (prOnto:contactPointFor :k prOnto:supAuth(prOnto:MSof(:y)))
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1402">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1403">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isRepresentedBy" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Representative" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:contactPointFor" />
              <ruleml:Var keyref=":k" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:contactPointFor" />
              <ruleml:Var keyref=":k" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:supAuth" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:MSof" />
                  <ruleml:Var keyref=":y" />
                </ruleml:Expr>
              </ruleml:Expr>
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements131">
    <lrml:PrescriptiveStatement key="statements131Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :eor :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:isRepresentedBy :y :k) & (prOnto:Representative :k)
	 & (prOnto:legalClaim :lc) & (rioOnto:or :eor :ery :erx) & (prOnto:relatedTo' :ery :lc :y)
	 & (prOnto:relatedTo' :erx :lc :x),

	(rioOnto:RexistAtTime :enr :t1) & (rioOnto:not :enr :err) & (prOnto:relatedTo' :err :lc :k)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":eor">eor</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1404">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1405">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isRepresentedBy" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Representative" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:legalClaim" />
              <ruleml:Var key=":lc">lc</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eor" />
              <ruleml:Var key=":ery">ery</ruleml:Var>
              <ruleml:Var key=":erx">erx</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1406">
              <ruleml:Rel iri="prOnto:relatedTo" />
              <ruleml:Var keyref=":ery" />
              <ruleml:Var keyref=":lc" />
              <ruleml:Var keyref=":y" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1407">
              <ruleml:Rel iri="prOnto:relatedTo" />
              <ruleml:Var keyref=":erx" />
              <ruleml:Var keyref=":lc" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":enr">enr</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:not" />
                <ruleml:Var keyref=":enr" />
                <ruleml:Var key=":err">err</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1408">
                <ruleml:Rel iri="prOnto:relatedTo" />
                <ruleml:Var keyref=":err" />
                <ruleml:Var keyref=":lc" />
                <ruleml:Var keyref=":k" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements131Formula2">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :eor :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:isRepresentedBy :x :k) & (prOnto:Representative :k)
	 & (prOnto:legalClaim :lc) & (rioOnto:or :eor :ery :erx) & (prOnto:relatedTo' :ery :lc :y)
	 & (prOnto:relatedTo' :erx :lc :x),

	(rioOnto:RexistAtTime :enr :t1) & (rioOnto:not :enr :err) & (prOnto:relatedTo' :err :lc :k)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":eor">eor</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1409">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1410">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isRepresentedBy" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Representative" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:legalClaim" />
              <ruleml:Var key=":lc">lc</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eor" />
              <ruleml:Var key=":ery">ery</ruleml:Var>
              <ruleml:Var key=":erx">erx</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1411">
              <ruleml:Rel iri="prOnto:relatedTo" />
              <ruleml:Var keyref=":ery" />
              <ruleml:Var keyref=":lc" />
              <ruleml:Var keyref=":y" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1412">
              <ruleml:Rel iri="prOnto:relatedTo" />
              <ruleml:Var keyref=":erx" />
              <ruleml:Var keyref=":lc" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":enr">enr</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:not" />
                <ruleml:Var keyref=":enr" />
                <ruleml:Var key=":err">err</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1413">
                <ruleml:Rel iri="prOnto:relatedTo" />
                <ruleml:Var keyref=":err" />
                <ruleml:Var keyref=":lc" />
                <ruleml:Var keyref=":k" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements132">
    <lrml:PrescriptiveStatement key="statements132Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z),

	(rioOnto:RexistAtTime :a2 :t1) & (rioOnto:and :a2 :ed1 :ed2 :ei) & (prOnto:demonstrate' :ed1 :x :ec1) & (prOnto:demonstrate' :ed2 :x :ec2)
	 & (prOnto:implement' :ei :x :em) & (prOnto:measure :em) & (rioOnto:cause' :ec1 :ei :ecw)
	 & (prOnto:complyWith' :ecw :ep GDPR) & (rioOnto:cause' :ec2 :ei :ef) & (prOnto:enforce' :ef :em :erf)
	 & (prOnto:rightsAndFreedomsOf' :erf :w)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1414">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1415">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":a2">a2</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:and" />
                <ruleml:Var keyref=":a2" />
                <ruleml:Var key=":ed1">ed1</ruleml:Var>
                <ruleml:Var key=":ed2">ed2</ruleml:Var>
                <ruleml:Var key=":ei">ei</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1416">
                <ruleml:Rel iri="prOnto:demonstrate" />
                <ruleml:Var keyref=":ed1" />
                <ruleml:Var keyref=":x" />
                <ruleml:Var key=":ec1">ec1</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1417">
                <ruleml:Rel iri="prOnto:demonstrate" />
                <ruleml:Var keyref=":ed2" />
                <ruleml:Var keyref=":x" />
                <ruleml:Var key=":ec2">ec2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1418">
                <ruleml:Rel iri="prOnto:implement" />
                <ruleml:Var keyref=":ei" />
                <ruleml:Var keyref=":x" />
                <ruleml:Var key=":em">em</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:measure" />
                <ruleml:Var keyref=":em" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1419">
                <ruleml:Rel iri="rioOnto:cause" />
                <ruleml:Var keyref=":ec1" />
                <ruleml:Var keyref=":ei" />
                <ruleml:Var key=":ecw">ecw</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1420">
                <ruleml:Rel iri="prOnto:complyWith" />
                <ruleml:Var keyref=":ecw" />
                <ruleml:Var keyref=":ep" />
                <ruleml:Ind>GDPR</ruleml:Ind>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1421">
                <ruleml:Rel iri="rioOnto:cause" />
                <ruleml:Var keyref=":ec2" />
                <ruleml:Var keyref=":ei" />
                <ruleml:Var key=":ef">ef</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1422">
                <ruleml:Rel iri="prOnto:enforce" />
                <ruleml:Var keyref=":ef" />
                <ruleml:Var keyref=":em" />
                <ruleml:Var key=":erf">erf</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1423">
                <ruleml:Rel iri="prOnto:rightsAndFreedomsOf" />
                <ruleml:Var keyref=":erf" />
                <ruleml:Var keyref=":w" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements133">
    <lrml:PrescriptiveStatement key="statements133Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep1 :ep2 :edpx :edpk) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:Processor :k)
	 & (prOnto:nominates' :edpx :y :x) & (prOnto:nominates' :edpk :y :k) & (prOnto:PersonalDataProcessing' :ep1 :x :z)
	 & (prOnto:PersonalDataProcessing' :ep2 :k :z),

	(rioOnto:RexistAtTime :a2 :t2) & (rioOnto:>= :t1 :t2) & (rioOnto:and :a2 :ea :ew :epa1 :epa2) & (prOnto:authorizedBy' :ea :ep2 :c)
	 & (prOnto:contract :c) & (prOnto:writtenForm' :ew :c) & (prOnto:partyOf' :epa1 :y :c)
	 & (prOnto:partyOf' :epa2 :x :c)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep1">ep1</ruleml:Var>
              <ruleml:Var key=":ep2">ep2</ruleml:Var>
              <ruleml:Var key=":edpx">edpx</ruleml:Var>
              <ruleml:Var key=":edpk">edpk</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1424">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edpx" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1425">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edpk" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1426">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep1" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1427">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep2" />
              <ruleml:Var keyref=":k" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":a2">a2</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t1" />
                <ruleml:Var keyref=":t2" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:and" />
                <ruleml:Var keyref=":a2" />
                <ruleml:Var key=":ea">ea</ruleml:Var>
                <ruleml:Var key=":ew">ew</ruleml:Var>
                <ruleml:Var key=":epa1">epa1</ruleml:Var>
                <ruleml:Var key=":epa2">epa2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1428">
                <ruleml:Rel iri="prOnto:authorizedBy" />
                <ruleml:Var keyref=":ea" />
                <ruleml:Var keyref=":ep2" />
                <ruleml:Var key=":c">c</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:contract" />
                <ruleml:Var keyref=":c" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1429">
                <ruleml:Rel iri="prOnto:writtenForm" />
                <ruleml:Var keyref=":ew" />
                <ruleml:Var keyref=":c" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1430">
                <ruleml:Rel iri="prOnto:partyOf" />
                <ruleml:Var keyref=":epa1" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":c" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1431">
                <ruleml:Rel iri="prOnto:partyOf" />
                <ruleml:Var keyref=":epa2" />
                <ruleml:Var keyref=":x" />
                <ruleml:Var keyref=":c" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements133Formula2">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep1 :ep2 :edpx :edpk) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:Processor :k)
	 & (prOnto:PersonalDataProcessing' :ep1 :x :z) & (prOnto:PersonalDataProcessing' :ep2 :k :z) & (prOnto:nominates' :edpx :y :x)
	 & (prOnto:nominates' :edpk :y :k) & (rioOnto:RexistAtTime :ea :t2) & (rioOnto:>= :t1 :t2)
	 & (prOnto:awareOf' :ea :y :ep2),

	(rioOnto:RexistAtTime :en :t2) & (prOnto:Communicate' :en :x :y :ep2)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep1">ep1</ruleml:Var>
              <ruleml:Var key=":ep2">ep2</ruleml:Var>
              <ruleml:Var key=":edpx">edpx</ruleml:Var>
              <ruleml:Var key=":edpk">edpk</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1432">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep1" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1433">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep2" />
              <ruleml:Var keyref=":k" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1434">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edpx" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1435">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edpk" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":ea">ea</ruleml:Var>
              <ruleml:Var key=":t2">t2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:&gt;=" />
              <ruleml:Var keyref=":t1" />
              <ruleml:Var keyref=":t2" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1436">
              <ruleml:Rel iri="prOnto:awareOf" />
              <ruleml:Var keyref=":ea" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":ep2" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":en">en</ruleml:Var>
                <ruleml:Var keyref=":t2" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1437">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en" />
                <ruleml:Var keyref=":x" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":ep2" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements134">
    <lrml:PrescriptiveStatement key="statements134Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:Purpose :epu) & (prOnto:isBasedOn :ep :epu),

	(rioOnto:RexistAtTime :a2 :t2) & (rioOnto:>= :t1 :t2) & (rioOnto:and :a2 :ea :ew :epa1 :epa2 :eor :ed1 :ed2 :ed3 :ed4) & (prOnto:authorizedBy' :ea :ep :c)
	 & (prOnto:contract :c) & (prOnto:partyOf' :epa1 :y :c) & (prOnto:partyOf' :epa2 :x :c)
	 & (rioOnto:or :eor :ec1 :ec2) & (prOnto:complyWith' :ec1 :c EuropeanUnion) & (prOnto:complyWith' :ec2 :c prOnto:MSof(:y))
	 & (prOnto:describe' :ed1 :c :epu) & (prOnto:describe' :ed2 :c :eti) & (rioOnto:timeOf :eti :ep)
	 & (prOnto:describe' :ed3 :c :cw) & (prOnto:categoryOf :cw :w) & (prOnto:describe' :ed4 :c :cz)
	 & (prOnto:categoryOf :cz :z)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1438">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1439">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Purpose" />
              <ruleml:Var key=":epu">epu</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isBasedOn" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":epu" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":a2">a2</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t1" />
                <ruleml:Var keyref=":t2" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:and" />
                <ruleml:Var keyref=":a2" />
                <ruleml:Var key=":ea">ea</ruleml:Var>
                <ruleml:Var key=":ew">ew</ruleml:Var>
                <ruleml:Var key=":epa1">epa1</ruleml:Var>
                <ruleml:Var key=":epa2">epa2</ruleml:Var>
                <ruleml:Var key=":eor">eor</ruleml:Var>
                <ruleml:Var key=":ed1">ed1</ruleml:Var>
                <ruleml:Var key=":ed2">ed2</ruleml:Var>
                <ruleml:Var key=":ed3">ed3</ruleml:Var>
                <ruleml:Var key=":ed4">ed4</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1440">
                <ruleml:Rel iri="prOnto:authorizedBy" />
                <ruleml:Var keyref=":ea" />
                <ruleml:Var keyref=":ep" />
                <ruleml:Var key=":c">c</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:contract" />
                <ruleml:Var keyref=":c" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1441">
                <ruleml:Rel iri="prOnto:partyOf" />
                <ruleml:Var keyref=":epa1" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":c" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1442">
                <ruleml:Rel iri="prOnto:partyOf" />
                <ruleml:Var keyref=":epa2" />
                <ruleml:Var keyref=":x" />
                <ruleml:Var keyref=":c" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:or" />
                <ruleml:Var keyref=":eor" />
                <ruleml:Var key=":ec1">ec1</ruleml:Var>
                <ruleml:Var key=":ec2">ec2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1443">
                <ruleml:Rel iri="prOnto:complyWith" />
                <ruleml:Var keyref=":ec1" />
                <ruleml:Var keyref=":c" />
                <ruleml:Ind>EuropeanUnion</ruleml:Ind>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1444">
                <ruleml:Rel iri="prOnto:complyWith" />
                <ruleml:Var keyref=":ec2" />
                <ruleml:Var keyref=":c" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:MSof" />
                  <ruleml:Var keyref=":y" />
                </ruleml:Expr>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1445">
                <ruleml:Rel iri="prOnto:describe" />
                <ruleml:Var keyref=":ed1" />
                <ruleml:Var keyref=":c" />
                <ruleml:Var keyref=":epu" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1446">
                <ruleml:Rel iri="prOnto:describe" />
                <ruleml:Var keyref=":ed2" />
                <ruleml:Var keyref=":c" />
                <ruleml:Var key=":eti">eti</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:timeOf" />
                <ruleml:Var keyref=":eti" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1447">
                <ruleml:Rel iri="prOnto:describe" />
                <ruleml:Var keyref=":ed3" />
                <ruleml:Var keyref=":c" />
                <ruleml:Var key=":cw">cw</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:categoryOf" />
                <ruleml:Var keyref=":cw" />
                <ruleml:Var keyref=":w" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1448">
                <ruleml:Rel iri="prOnto:describe" />
                <ruleml:Var keyref=":ed4" />
                <ruleml:Var keyref=":c" />
                <ruleml:Var key=":cz">cz</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:categoryOf" />
                <ruleml:Var keyref=":cz" />
                <ruleml:Var keyref=":z" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements135">
    <lrml:PrescriptiveStatement key="statements135Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (rioOnto:exceptionCha4Sec1Art28Par3Point1AuthByEU :ep),

	(rioOnto:RexistAtTime :a2 :t2) & (rioOnto:>= :t1 :t2) & (rioOnto:and :a2 :en :ea :ed) & (prOnto:Communicate' :en :y :x :ea)
	 & (prOnto:authorizedBy' :ea :ep :y) & (prOnto:describe' :ed :en :ep)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1449">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1450">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha4Sec1Art28Par3Point1AuthByEU" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":a2">a2</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t1" />
                <ruleml:Var keyref=":t2" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:and" />
                <ruleml:Var keyref=":a2" />
                <ruleml:Var key=":en">en</ruleml:Var>
                <ruleml:Var key=":ea">ea</ruleml:Var>
                <ruleml:Var key=":ed">ed</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1451">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":x" />
                <ruleml:Var keyref=":ea" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1452">
                <ruleml:Rel iri="prOnto:authorizedBy" />
                <ruleml:Var keyref=":ea" />
                <ruleml:Var keyref=":ep" />
                <ruleml:Var keyref=":y" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1453">
                <ruleml:Rel iri="prOnto:describe" />
                <ruleml:Var keyref=":ed" />
                <ruleml:Var keyref=":en" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:ConstitutiveStatement key="statements135Formula2">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :eor :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (rioOnto:or :eor :ea1 :ea2) & (prOnto:authorizedBy' :ea1 :ep EuropeanUnion)
	 & (prOnto:authorizedBy' :ea2 :ep prOnto:MSof(:y)),

	(rioOnto:exceptionCha4Sec1Art28Par3Point1AuthByEU :ep)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":eor">eor</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1454">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1455">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eor" />
              <ruleml:Var key=":ea1">ea1</ruleml:Var>
              <ruleml:Var key=":ea2">ea2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1456">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":ea1" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Ind>EuropeanUnion</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1457">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":ea2" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:MSof" />
                <ruleml:Var keyref=":y" />
              </ruleml:Expr>
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:exceptionCha4Sec1Art28Par3Point1AuthByEU" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
    <lrml:PrescriptiveStatement key="statements135Formula3">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :eor :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (rioOnto:or :eor :ea1 :ea2) & (prOnto:authorizedBy' :ea1 :ep EuropeanUnion)
	 & (prOnto:authorizedBy' :ea2 :ep prOnto:MSof(:y)) & (rioOnto:exceptionCha4Sec1Art28Par3Point1PublicGround :ep),

	(rioOnto:RexistAtTime :en :t2) & (rioOnto:>= :t1 :t2) & (prOnto:Communicate' :en :x :y :eor)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":eor">eor</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1458">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1459">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eor" />
              <ruleml:Var key=":ea1">ea1</ruleml:Var>
              <ruleml:Var key=":ea2">ea2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1460">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":ea1" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Ind>EuropeanUnion</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1461">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":ea2" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:MSof" />
                <ruleml:Var keyref=":y" />
              </ruleml:Expr>
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha4Sec1Art28Par3Point1PublicGround" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":en">en</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t1" />
                <ruleml:Var keyref=":t2" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1462">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en" />
                <ruleml:Var key=":x">x</ruleml:Var>
                <ruleml:Var key=":y">y</ruleml:Var>
                <ruleml:Var key=":eor">eor</ruleml:Var>
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:ConstitutiveStatement key="statements135Formula4">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :eor :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (rioOnto:or :eor :ea1 :ea2) & (prOnto:authorizedBy' :ea1 :ep EuropeanUnion)
	 & (prOnto:authorizedBy' :ea2 :ep prOnto:MSof(:y)) & (prOnto:PublicInterest :p) & (rioOnto:cause :p :enn)
	 & (rioOnto:not :enn :en) & (prOnto:Communicate' :en :x :y :eor),

	(rioOnto:exceptionCha4Sec1Art28Par3Point1PublicGround :ep)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":eor">eor</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1463">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1464">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eor" />
              <ruleml:Var key=":ea1">ea1</ruleml:Var>
              <ruleml:Var key=":ea2">ea2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1465">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":ea1" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Ind>EuropeanUnion</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1466">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":ea2" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:MSof" />
                <ruleml:Var keyref=":y" />
              </ruleml:Expr>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PublicInterest" />
              <ruleml:Var key=":p">p</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:cause" />
              <ruleml:Var keyref=":p" />
              <ruleml:Var key=":enn">enn</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":enn" />
              <ruleml:Var key=":en">en</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1467">
              <ruleml:Rel iri="prOnto:Communicate" />
              <ruleml:Var keyref=":en" />
              <ruleml:Var key=":x">x</ruleml:Var>
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var key=":eor">eor</ruleml:Var>
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:exceptionCha4Sec1Art28Par3Point1PublicGround" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements136">
    <lrml:PrescriptiveStatement key="statements136Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:workIn :p :x) & (prOnto:relatedTo :p :ep),

	(rioOnto:RexistAtTime :ecn :t1) & (prOnto:confidentialWrt' :ecn :p :z)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1468">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1469">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var key=":z">z</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:workIn" />
              <ruleml:Var key=":p">p</ruleml:Var>
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:relatedTo" />
              <ruleml:Var keyref=":p" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":ecn">ecn</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1470">
                <ruleml:Rel iri="prOnto:confidentialWrt" />
                <ruleml:Var keyref=":ecn" />
                <ruleml:Var keyref=":p" />
                <ruleml:Var keyref=":z" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements137">
    <lrml:PrescriptiveStatement key="statements137Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :eob :er :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (rioOnto:Obliged' :eob :y :e :t1) & (prOnto:relatedTo :eob GDPRChapter3)
	 & (prOnto:reasonable' :er :eas) & (prOnto:assistFor' :eas :x :y :eob),

	(rioOnto:RexistAtTime :eas :t2) & (rioOnto:>= :t2 :t1)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":eob">eob</ruleml:Var>
              <ruleml:Var key=":er">er</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1471">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1472">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1473">
              <ruleml:Rel iri="rioOnto:Obliged" />
              <ruleml:Var keyref=":eob" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":e">e</ruleml:Var>
              <ruleml:Var keyref=":t1" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:relatedTo" />
              <ruleml:Var keyref=":eob" />
              <ruleml:Ind>GDPRChapter3</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1474">
              <ruleml:Rel iri="prOnto:reasonable" />
              <ruleml:Var keyref=":er" />
              <ruleml:Var key=":eas">eas</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1475">
              <ruleml:Rel iri="prOnto:assistFor" />
              <ruleml:Var keyref=":eas" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":eob" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var keyref=":eas" />
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements138">
    <lrml:PrescriptiveStatement key="statements138Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :eob :eor :er :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (rioOnto:Obliged' :eob :y :e :t1) & (rioOnto:or :eor :er1 :er2 :er3 :er4 :er5)
	 & (prOnto:relatedTo' :er1 :eob GDPRArt32) & (prOnto:relatedTo' :er2 :eob GDPRArt33) & (prOnto:relatedTo' :er3 :eob GDPRArt34)
	 & (prOnto:relatedTo' :er4 :eob GDPRArt35) & (prOnto:relatedTo' :er5 :eob GDPRArt36) & (prOnto:reasonable' :er :eas)
	 & (prOnto:assistFor' :eas :x :y :eob),

	(rioOnto:RexistAtTime :eas :t2) & (rioOnto:>= :t2 :t1)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":eob">eob</ruleml:Var>
              <ruleml:Var key=":eor">eor</ruleml:Var>
              <ruleml:Var key=":er">er</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1476">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1477">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1478">
              <ruleml:Rel iri="rioOnto:Obliged" />
              <ruleml:Var keyref=":eob" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":e">e</ruleml:Var>
              <ruleml:Var keyref=":t1" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eor" />
              <ruleml:Var key=":er1">er1</ruleml:Var>
              <ruleml:Var key=":er2">er2</ruleml:Var>
              <ruleml:Var key=":er3">er3</ruleml:Var>
              <ruleml:Var key=":er4">er4</ruleml:Var>
              <ruleml:Var key=":er5">er5</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1479">
              <ruleml:Rel iri="prOnto:relatedTo" />
              <ruleml:Var keyref=":er1" />
              <ruleml:Var keyref=":eob" />
              <ruleml:Ind>GDPRArt32</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1480">
              <ruleml:Rel iri="prOnto:relatedTo" />
              <ruleml:Var keyref=":er2" />
              <ruleml:Var keyref=":eob" />
              <ruleml:Ind>GDPRArt33</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1481">
              <ruleml:Rel iri="prOnto:relatedTo" />
              <ruleml:Var keyref=":er3" />
              <ruleml:Var keyref=":eob" />
              <ruleml:Ind>GDPRArt34</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1482">
              <ruleml:Rel iri="prOnto:relatedTo" />
              <ruleml:Var keyref=":er4" />
              <ruleml:Var keyref=":eob" />
              <ruleml:Ind>GDPRArt35</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1483">
              <ruleml:Rel iri="prOnto:relatedTo" />
              <ruleml:Var keyref=":er5" />
              <ruleml:Var keyref=":eob" />
              <ruleml:Ind>GDPRArt36</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1484">
              <ruleml:Rel iri="prOnto:reasonable" />
              <ruleml:Var keyref=":er" />
              <ruleml:Var key=":eas">eas</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1485">
              <ruleml:Rel iri="prOnto:assistFor" />
              <ruleml:Var keyref=":eas" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":eob" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var keyref=":eas" />
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements139">
    <lrml:PrescriptiveStatement key="statements139Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :er :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (rioOnto:RexistAtTime :enp :t2) & (rioOnto:>= :t2 :t1)
	 & (rioOnto:not :enp :ep) & (prOnto:request' :er :y :eca) & (prOnto:erase' :eca :x :z),

	(rioOnto:RexistAtTime :eca :t2)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":er">er</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1486">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1487">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":enp">enp</ruleml:Var>
              <ruleml:Var key=":t2">t2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:&gt;=" />
              <ruleml:Var keyref=":t2" />
              <ruleml:Var keyref=":t1" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":enp" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1488">
              <ruleml:Rel iri="prOnto:request" />
              <ruleml:Var keyref=":er" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":eca">eca</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1489">
              <ruleml:Rel iri="prOnto:erase" />
              <ruleml:Var keyref=":eca" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var keyref=":eca" />
              <ruleml:Var keyref=":t2" />
            </ruleml:Atom>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements139Formula2">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :er :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (rioOnto:RexistAtTime :enp :t2) & (rioOnto:>= :t2 :t1)
	 & (rioOnto:not :enp :ep) & (prOnto:request' :er :y :ere) & (prOnto:return' :ere :x :z),

	(rioOnto:RexistAtTime :ere :t2)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":er">er</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1490">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1491">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":enp">enp</ruleml:Var>
              <ruleml:Var key=":t2">t2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:&gt;=" />
              <ruleml:Var keyref=":t2" />
              <ruleml:Var keyref=":t1" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":enp" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1492">
              <ruleml:Rel iri="prOnto:request" />
              <ruleml:Var keyref=":er" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":ere">ere</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1493">
              <ruleml:Rel iri="prOnto:return" />
              <ruleml:Var keyref=":ere" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var keyref=":ere" />
              <ruleml:Var key=":t2">t2</ruleml:Var>
            </ruleml:Atom>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements139Formula3">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :eor :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (rioOnto:RexistAtTime :enp :t2) & (rioOnto:>= :t2 :t1)
	 & (rioOnto:not :enp :ep) & (rioOnto:or :eor :en1 :en2) & (rioOnto:not :en1 :er1)
	 & (prOnto:request' :er1 EuropeanUnion :eca) & (rioOnto:not :en2 :er2) & (prOnto:request' :er2 prOnto:MSof(:y) :eca)
	 & (prOnto:erase' :eca :x prOnto:copyOf(:z)),

	(rioOnto:RexistAtTime :eca :t2)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":eor">eor</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1494">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1495">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":enp">enp</ruleml:Var>
              <ruleml:Var key=":t2">t2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:&gt;=" />
              <ruleml:Var keyref=":t2" />
              <ruleml:Var keyref=":t1" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":enp" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eor" />
              <ruleml:Var key=":en1">en1</ruleml:Var>
              <ruleml:Var key=":en2">en2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en1" />
              <ruleml:Var key=":er1">er1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1496">
              <ruleml:Rel iri="prOnto:request" />
              <ruleml:Var keyref=":er1" />
              <ruleml:Ind>EuropeanUnion</ruleml:Ind>
              <ruleml:Var key=":eca">eca</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en2" />
              <ruleml:Var key=":er2">er2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1497">
              <ruleml:Rel iri="prOnto:request" />
              <ruleml:Var keyref=":er2" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:MSof" />
                <ruleml:Var keyref=":y" />
              </ruleml:Expr>
              <ruleml:Var keyref=":eca" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1498">
              <ruleml:Rel iri="prOnto:erase" />
              <ruleml:Var keyref=":eca" />
              <ruleml:Var keyref=":x" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:copyOf" />
                <ruleml:Var keyref=":z" />
              </ruleml:Expr>
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var keyref=":eca" />
              <ruleml:Var keyref=":t2" />
            </ruleml:Atom>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements140">
    <lrml:PrescriptiveStatement key="statements140Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :er :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:demonstrate' :ed :e :eco) & (prOnto:complyWith' :eco :ep GDPR),

	(rioOnto:RexistAtTime :en :t2) & (rioOnto:>= :t2 :t1) & (prOnto:Communicate' :en :x :y :e)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":er">er</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1499">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1500">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1501">
              <ruleml:Rel iri="prOnto:demonstrate" />
              <ruleml:Var key=":ed">ed</ruleml:Var>
              <ruleml:Var key=":e">e</ruleml:Var>
              <ruleml:Var key=":eco">eco</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1502">
              <ruleml:Rel iri="prOnto:complyWith" />
              <ruleml:Var keyref=":eco" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Ind>GDPR</ruleml:Ind>
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":en">en</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1503">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en" />
                <ruleml:Var keyref=":x" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":e" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements141">
    <lrml:ConstitutiveStatement key="statements141Formula1">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep1 :ep2 :epa1 :epa2 :eo1 :edpx :edpk) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:Processor :k)
	 & (prOnto:PersonalDataProcessing' :ep1 :x :z) & (prOnto:PersonalDataProcessing' :ep2 :k :z) & (prOnto:nominates' :edpx :y :x)
	 & (prOnto:nominates' :edpk :y :k) & (prOnto:contract :c) & (prOnto:partyOf' :epa1 :y :c)
	 & (prOnto:partyOf' :epa2 :x :c) & (rioOnto:Obliged' :eo1 :x :e :t1) & (rioOnto:partOf :e :c),

	(rioOnto:RexistAtTime :eo2 :t1) & (rioOnto:Obliged' :eo2 :k :e :t1)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep1">ep1</ruleml:Var>
              <ruleml:Var key=":ep2">ep2</ruleml:Var>
              <ruleml:Var key=":epa1">epa1</ruleml:Var>
              <ruleml:Var key=":epa2">epa2</ruleml:Var>
              <ruleml:Var key=":eo1">eo1</ruleml:Var>
              <ruleml:Var key=":edpx">edpx</ruleml:Var>
              <ruleml:Var key=":edpk">edpk</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1504">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep1" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1505">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep2" />
              <ruleml:Var keyref=":k" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1506">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edpx" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1507">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edpk" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:contract" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1508">
              <ruleml:Rel iri="prOnto:partyOf" />
              <ruleml:Var keyref=":epa1" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1509">
              <ruleml:Rel iri="prOnto:partyOf" />
              <ruleml:Var keyref=":epa2" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1510">
              <ruleml:Rel iri="rioOnto:Obliged" />
              <ruleml:Var keyref=":eo1" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var key=":e">e</ruleml:Var>
              <ruleml:Var keyref=":t1" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:partOf" />
              <ruleml:Var keyref=":e" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":eo2">eo2</ruleml:Var>
              <ruleml:Var keyref=":t1" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1511">
              <ruleml:Rel iri="rioOnto:Obliged" />
              <ruleml:Var keyref=":eo2" />
              <ruleml:Var keyref=":k" />
              <ruleml:Var keyref=":e" />
              <ruleml:Var keyref=":t1" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
    <lrml:ConstitutiveStatement key="statements141Formula2">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep1 :ep2 :epa1 :epa2 :eo1 :eo2 :ev2 :edpx :edpk) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:Processor :k)
	 & (prOnto:PersonalDataProcessing' :ep1 :x :z) & (prOnto:PersonalDataProcessing' :ep2 :k :z) & (prOnto:nominates' :edpx :y :x)
	 & (prOnto:nominates' :edpk :y :k) & (prOnto:contract :c) & (prOnto:partyOf' :epa1 :y :c)
	 & (prOnto:partyOf' :epa2 :x :c) & (rioOnto:Obliged' :eo1 :x :e :t1) & (rioOnto:partOf :e :c)
	 & (rioOnto:Obliged' :eo2 :k :e :t1) & (prOnto:violationOf' :ev2 :eo2),

	(rioOnto:RexistAtTime :ev1 :t1) & (prOnto:violationOf' :ev1 :eo1)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep1">ep1</ruleml:Var>
              <ruleml:Var key=":ep2">ep2</ruleml:Var>
              <ruleml:Var key=":epa1">epa1</ruleml:Var>
              <ruleml:Var key=":epa2">epa2</ruleml:Var>
              <ruleml:Var key=":eo1">eo1</ruleml:Var>
              <ruleml:Var key=":eo2">eo2</ruleml:Var>
              <ruleml:Var key=":ev2">ev2</ruleml:Var>
              <ruleml:Var key=":edpx">edpx</ruleml:Var>
              <ruleml:Var key=":edpk">edpk</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1512">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep1" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1513">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep2" />
              <ruleml:Var keyref=":k" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1514">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edpx" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1515">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edpk" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:contract" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1516">
              <ruleml:Rel iri="prOnto:partyOf" />
              <ruleml:Var keyref=":epa1" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1517">
              <ruleml:Rel iri="prOnto:partyOf" />
              <ruleml:Var keyref=":epa2" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1518">
              <ruleml:Rel iri="rioOnto:Obliged" />
              <ruleml:Var keyref=":eo1" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var key=":e">e</ruleml:Var>
              <ruleml:Var keyref=":t1" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:partOf" />
              <ruleml:Var keyref=":e" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1519">
              <ruleml:Rel iri="rioOnto:Obliged" />
              <ruleml:Var keyref=":eo2" />
              <ruleml:Var keyref=":k" />
              <ruleml:Var key=":e">e</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1520">
              <ruleml:Rel iri="prOnto:violationOf" />
              <ruleml:Var keyref=":ev2" />
              <ruleml:Var keyref=":eo2" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":ev1">ev1</ruleml:Var>
              <ruleml:Var keyref=":t1" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1521">
              <ruleml:Rel iri="prOnto:violationOf" />
              <ruleml:Var keyref=":ev1" />
              <ruleml:Var key=":eo1">eo1</ruleml:Var>
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements142">
    <lrml:ConstitutiveStatement key="statements142Formula1">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :eor :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (rioOnto:or :eor :ea1 :ea2) & (prOnto:adhereTo' :ea1 :x :cc)
	 & (prOnto:codeOfConduct :cc) & (prOnto:adhereTo' :ea2 :x :acm) & (prOnto:approvedCertificationMechanism :acm),

	(rioOnto:RexistAtTime :a2 :t1) & (rioOnto:and :a2 :ed1 :ed2 :ei) & (prOnto:demonstrate' :ed1 :x :ec1) & (prOnto:demonstrate' :ed2 :x :ec2)
	 & (prOnto:implement' :ei :x :em) & (prOnto:measure :em) & (rioOnto:cause' :ec1 :ei :ecw)
	 & (prOnto:complyWith' :ecw :ep GDPR) & (rioOnto:cause' :ec2 :ei :ef) & (prOnto:enforce' :ef :em :erf)
	 & (prOnto:rightsAndFreedomsOf' :erf :w)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":eor">eor</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1522">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1523">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eor" />
              <ruleml:Var key=":ea1">ea1</ruleml:Var>
              <ruleml:Var key=":ea2">ea2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1524">
              <ruleml:Rel iri="prOnto:adhereTo" />
              <ruleml:Var keyref=":ea1" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var key=":cc">cc</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:codeOfConduct" />
              <ruleml:Var keyref=":cc" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1525">
              <ruleml:Rel iri="prOnto:adhereTo" />
              <ruleml:Var keyref=":ea2" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var key=":acm">acm</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:approvedCertificationMechanism" />
              <ruleml:Var keyref=":acm" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a2">a2</ruleml:Var>
              <ruleml:Var keyref=":t1" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a2" />
              <ruleml:Var key=":ed1">ed1</ruleml:Var>
              <ruleml:Var key=":ed2">ed2</ruleml:Var>
              <ruleml:Var key=":ei">ei</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1526">
              <ruleml:Rel iri="prOnto:demonstrate" />
              <ruleml:Var keyref=":ed1" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var key=":ec1">ec1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1527">
              <ruleml:Rel iri="prOnto:demonstrate" />
              <ruleml:Var keyref=":ed2" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var key=":ec2">ec2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1528">
              <ruleml:Rel iri="prOnto:implement" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var key=":em">em</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:measure" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1529">
              <ruleml:Rel iri="rioOnto:cause" />
              <ruleml:Var keyref=":ec1" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var key=":ecw">ecw</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1530">
              <ruleml:Rel iri="prOnto:complyWith" />
              <ruleml:Var keyref=":ecw" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Ind>GDPR</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1531">
              <ruleml:Rel iri="rioOnto:cause" />
              <ruleml:Var keyref=":ec2" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var key=":ef">ef</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1532">
              <ruleml:Rel iri="prOnto:enforce" />
              <ruleml:Var keyref=":ef" />
              <ruleml:Var keyref=":em" />
              <ruleml:Var key=":erf">erf</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1533">
              <ruleml:Rel iri="prOnto:rightsAndFreedomsOf" />
              <ruleml:Var keyref=":erf" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
    <lrml:ConstitutiveStatement key="statements142Formula2">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep1 :ep2 :ea1 :edpx :edpk) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:Processor :k)
	 & (prOnto:nominates' :edpx :y :x) & (prOnto:nominates' :edpk :y :k) & (prOnto:PersonalDataProcessing' :ep1 :x :z)
	 & (prOnto:PersonalDataProcessing' :ep2 :k :z) & (prOnto:adhereTo' :ea1 :x :cc) & (prOnto:codeOfConduct :cc)
	 & (rioOnto:Obliged' :eo1 :x :e :t1),

	(rioOnto:RexistAtTime :eo2 :t1) & (rioOnto:Obliged' :eo2 :k :e :t1)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep1">ep1</ruleml:Var>
              <ruleml:Var key=":ep2">ep2</ruleml:Var>
              <ruleml:Var key=":ea1">ea1</ruleml:Var>
              <ruleml:Var key=":edpx">edpx</ruleml:Var>
              <ruleml:Var key=":edpk">edpk</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1534">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edpx" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1535">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edpk" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1536">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep1" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1537">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep2" />
              <ruleml:Var keyref=":k" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1538">
              <ruleml:Rel iri="prOnto:adhereTo" />
              <ruleml:Var keyref=":ea1" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var key=":cc">cc</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:codeOfConduct" />
              <ruleml:Var keyref=":cc" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1539">
              <ruleml:Rel iri="rioOnto:Obliged" />
              <ruleml:Var keyref=":eo1" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var key=":e">e</ruleml:Var>
              <ruleml:Var keyref=":t1" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":eo2">eo2</ruleml:Var>
              <ruleml:Var keyref=":t1" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1540">
              <ruleml:Rel iri="rioOnto:Obliged" />
              <ruleml:Var keyref=":eo2" />
              <ruleml:Var keyref=":k" />
              <ruleml:Var keyref=":e" />
              <ruleml:Var keyref=":t1" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
    <lrml:ConstitutiveStatement key="statements142Formula3">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep1 :ep2 :ea1 :edpx :edpk) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:Processor :k)
	 & (prOnto:nominates' :edpx :y :x) & (prOnto:nominates' :edpk :y :k) & (prOnto:PersonalDataProcessing' :ep1 :x :z)
	 & (prOnto:PersonalDataProcessing' :ep2 :k :z) & (prOnto:adhereTo' :ea1 :x :acm) & (prOnto:approvedCertificationMechanism :acm)
	 & (rioOnto:Obliged' :eo1 :x :e :t1),

	(rioOnto:RexistAtTime :eo2 :t1) & (rioOnto:Obliged' :eo2 :k :e :t1)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep1">ep1</ruleml:Var>
              <ruleml:Var key=":ep2">ep2</ruleml:Var>
              <ruleml:Var key=":ea1">ea1</ruleml:Var>
              <ruleml:Var key=":edpx">edpx</ruleml:Var>
              <ruleml:Var key=":edpk">edpk</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1541">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edpx" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1542">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edpk" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1543">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep1" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1544">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep2" />
              <ruleml:Var keyref=":k" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1545">
              <ruleml:Rel iri="prOnto:adhereTo" />
              <ruleml:Var keyref=":ea1" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var key=":acm">acm</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:approvedCertificationMechanism" />
              <ruleml:Var keyref=":acm" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1546">
              <ruleml:Rel iri="rioOnto:Obliged" />
              <ruleml:Var keyref=":eo1" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var key=":e">e</ruleml:Var>
              <ruleml:Var keyref=":t1" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":eo2">eo2</ruleml:Var>
              <ruleml:Var keyref=":t1" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1547">
              <ruleml:Rel iri="rioOnto:Obliged" />
              <ruleml:Var keyref=":eo2" />
              <ruleml:Var keyref=":k" />
              <ruleml:Var keyref=":e" />
              <ruleml:Var keyref=":t1" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements143">
    <lrml:PrescriptiveStatement key="statements143Formula1">
      <!--
Permission:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep1 :ep2 :epa1 :epa2 :edpx :edpk) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:Processor :k)
	 & (prOnto:nominates' :edpx :y :x) & (prOnto:nominates' :edpk :y :k) & (prOnto:PersonalDataProcessing' :ep1 :x :z)
	 & (prOnto:PersonalDataProcessing' :ep2 :k :z) & (prOnto:contract :c) & (prOnto:partyOf' :epa1 :y :c)
	 & (prOnto:partyOf' :epa2 :x :c) & (prOnto:standardContractualClause :scc),

	(rioOnto:RexistAtTime :epo :t1) & (rioOnto:partOf' :epo :scc :c)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep1">ep1</ruleml:Var>
              <ruleml:Var key=":ep2">ep2</ruleml:Var>
              <ruleml:Var key=":epa1">epa1</ruleml:Var>
              <ruleml:Var key=":epa2">epa2</ruleml:Var>
              <ruleml:Var key=":edpx">edpx</ruleml:Var>
              <ruleml:Var key=":edpk">edpk</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1548">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edpx" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1549">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edpk" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1550">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep1" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1551">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep2" />
              <ruleml:Var keyref=":k" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:contract" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1552">
              <ruleml:Rel iri="prOnto:partyOf" />
              <ruleml:Var keyref=":epa1" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1553">
              <ruleml:Rel iri="prOnto:partyOf" />
              <ruleml:Var keyref=":epa2" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:standardContractualClause" />
              <ruleml:Var key=":scc">scc</ruleml:Var>
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Permission iri="rioOnto:Permission">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":epo">epo</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1554">
                <ruleml:Rel iri="rioOnto:partOf" />
                <ruleml:Var keyref=":epo" />
                <ruleml:Var keyref=":scc" />
                <ruleml:Var keyref=":c" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Permission>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements144">
    <lrml:PrescriptiveStatement key="statements144Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep1 :ep2 :epa1 :epa2 :edpx :edpk) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:Processor :k)
	 & (prOnto:nominates' :edpx :y :x) & (prOnto:nominates' :edpk :y :k) & (prOnto:PersonalDataProcessing' :ep1 :x :z)
	 & (prOnto:PersonalDataProcessing' :ep2 :k :z) & (prOnto:contract :c) & (prOnto:partyOf' :epa1 :y :c)
	 & (prOnto:partyOf' :epa2 :x :c),

	(rioOnto:RexistAtTime :ewf :t1) & (prOnto:writtenForm' :ewf :c)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep1">ep1</ruleml:Var>
              <ruleml:Var key=":ep2">ep2</ruleml:Var>
              <ruleml:Var key=":epa1">epa1</ruleml:Var>
              <ruleml:Var key=":epa2">epa2</ruleml:Var>
              <ruleml:Var key=":edpx">edpx</ruleml:Var>
              <ruleml:Var key=":edpk">edpk</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1555">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edpx" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1556">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edpk" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1557">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep1" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1558">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep2" />
              <ruleml:Var keyref=":k" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:contract" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1559">
              <ruleml:Rel iri="prOnto:partyOf" />
              <ruleml:Var keyref=":epa1" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1560">
              <ruleml:Rel iri="prOnto:partyOf" />
              <ruleml:Var keyref=":epa2" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":ewf">ewf</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1561">
                <ruleml:Rel iri="prOnto:writtenForm" />
                <ruleml:Var keyref=":ewf" />
                <ruleml:Var keyref=":c" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements145">
    <lrml:ConstitutiveStatement key="statements145Formula1">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :ed1 :ed2 :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:Purpose :epu) & (prOnto:isBasedOn :ep :epu)
	 & (prOnto:define' :ed1 :x :epu) & (prOnto:define' :ed2 :x :ep),

	(prOnto:Controller :x)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":ed1">ed1</ruleml:Var>
              <ruleml:Var key=":ed2">ed2</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1562">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1563">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Purpose" />
              <ruleml:Var key=":epu">epu</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isBasedOn" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":epu" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1564">
              <ruleml:Rel iri="prOnto:define" />
              <ruleml:Var keyref=":ed1" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":epu" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1565">
              <ruleml:Rel iri="prOnto:define" />
              <ruleml:Var keyref=":ed2" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:Atom>
            <ruleml:Rel iri="prOnto:Controller" />
            <ruleml:Var keyref=":x" />
          </ruleml:Atom>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements146">
    <lrml:PrescriptiveStatement key="statements146Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :ea :ee :en1 :en2 :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:access' :ea :p :z) & (prOnto:naturalPerson :p)
	 & (prOnto:execute' :ee :p :et) & (prOnto:relatedTo :et :z) & (rioOnto:not :en1 :eau1)
	 & (prOnto:authorizedBy' :eau1 :et EuropeanUnion) & (rioOnto:not :en2 :eau2) & (prOnto:authorizedBy' :eau2 :et prOnto:MSof(:y)),

	(rioOnto:RexistAtTime :eau3 :t1) & (prOnto:authorizedBy' :eau3 :et :y)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":ea">ea</ruleml:Var>
              <ruleml:Var key=":ee">ee</ruleml:Var>
              <ruleml:Var key=":en1">en1</ruleml:Var>
              <ruleml:Var key=":en2">en2</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1566">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1567">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1568">
              <ruleml:Rel iri="prOnto:access" />
              <ruleml:Var keyref=":ea" />
              <ruleml:Var key=":p">p</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:naturalPerson" />
              <ruleml:Var keyref=":p" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1569">
              <ruleml:Rel iri="prOnto:execute" />
              <ruleml:Var keyref=":ee" />
              <ruleml:Var keyref=":p" />
              <ruleml:Var key=":et">et</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:relatedTo" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en1" />
              <ruleml:Var key=":eau1">eau1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1570">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":eau1" />
              <ruleml:Var keyref=":et" />
              <ruleml:Ind>EuropeanUnion</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en2" />
              <ruleml:Var key=":eau2">eau2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1571">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":eau2" />
              <ruleml:Var keyref=":et" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:MSof" />
                <ruleml:Var keyref=":y" />
              </ruleml:Expr>
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":eau3">eau3</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1572">
                <ruleml:Rel iri="prOnto:authorizedBy" />
                <ruleml:Var keyref=":eau3" />
                <ruleml:Var keyref=":et" />
                <ruleml:Var keyref=":y" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements147">
    <lrml:PrescriptiveStatement key="statements147Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (rioOnto:exceptionCha4Sec1Art30Par5),

	(rioOnto:RexistAtTime :a2 :t1) & (rioOnto:and :a2 :eo1 :eo2) & (prOnto:register :r) & (rioOnto:or :eo1 :ew1 :ew2)
	 & (prOnto:writeIn' :ew1 :y :r :ep) & (prOnto:isRepresentedBy :y :k) & (prOnto:Representative :k)
	 & (prOnto:writeIn' :ew2 :k :r :ep) & (rioOnto:or :eo2 :er1 :er2) & (prOnto:responsibleFor' :er1 :y :r)
	 & (prOnto:responsibleFor' :er2 :k :r)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1573">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1574">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha4Sec1Art30Par5" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":a2">a2</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:and" />
                <ruleml:Var keyref=":a2" />
                <ruleml:Var key=":eo1">eo1</ruleml:Var>
                <ruleml:Var key=":eo2">eo2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:register" />
                <ruleml:Var key=":r">r</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:or" />
                <ruleml:Var keyref=":eo1" />
                <ruleml:Var key=":ew1">ew1</ruleml:Var>
                <ruleml:Var key=":ew2">ew2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1575">
                <ruleml:Rel iri="prOnto:writeIn" />
                <ruleml:Var keyref=":ew1" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":r" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:isRepresentedBy" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var key=":k">k</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:Representative" />
                <ruleml:Var keyref=":k" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1576">
                <ruleml:Rel iri="prOnto:writeIn" />
                <ruleml:Var keyref=":ew2" />
                <ruleml:Var keyref=":k" />
                <ruleml:Var keyref=":r" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:or" />
                <ruleml:Var keyref=":eo2" />
                <ruleml:Var key=":er1">er1</ruleml:Var>
                <ruleml:Var key=":er2">er2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1577">
                <ruleml:Rel iri="prOnto:responsibleFor" />
                <ruleml:Var keyref=":er1" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":r" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1578">
                <ruleml:Rel iri="prOnto:responsibleFor" />
                <ruleml:Var keyref=":er2" />
                <ruleml:Var keyref=":k" />
                <ruleml:Var keyref=":r" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements148">
    <lrml:PrescriptiveStatement key="statements148Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :o1 :t1) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w) & (prOnto:Controller :y :z)
	 & (prOnto:register :r) & (rioOnto:or :o1 :er1 :er2) & (prOnto:responsibleFor' :er1 :y :r)
	 & (prOnto:isRepresentedBy :y :k) & (prOnto:Representative :k) & (prOnto:responsibleFor' :er2 :k :r)
	 & (rioOnto:exceptionCha4Sec1Art30Par5),

	(rioOnto:RexistAtTime :o2 :t1) & (rioOnto:or :o2 :ec1 :ec2) & (prOnto:contain' :ec1 :r prOnto:contactDetails(:y)) & (prOnto:contain' :ec2 :r prOnto:contactDetails(:k))
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":o1">o1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:register" />
              <ruleml:Var key=":r">r</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":o1" />
              <ruleml:Var key=":er1">er1</ruleml:Var>
              <ruleml:Var key=":er2">er2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1579">
              <ruleml:Rel iri="prOnto:responsibleFor" />
              <ruleml:Var keyref=":er1" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":r" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isRepresentedBy" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Representative" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1580">
              <ruleml:Rel iri="prOnto:responsibleFor" />
              <ruleml:Var keyref=":er2" />
              <ruleml:Var keyref=":k" />
              <ruleml:Var keyref=":r" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha4Sec1Art30Par5" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":o2">o2</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:or" />
                <ruleml:Var keyref=":o2" />
                <ruleml:Var key=":ec1">ec1</ruleml:Var>
                <ruleml:Var key=":ec2">ec2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1581">
                <ruleml:Rel iri="prOnto:contain" />
                <ruleml:Var keyref=":ec1" />
                <ruleml:Var keyref=":r" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:contactDetails" />
                  <ruleml:Var keyref=":y" />
                </ruleml:Expr>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1582">
                <ruleml:Rel iri="prOnto:contain" />
                <ruleml:Var keyref=":ec2" />
                <ruleml:Var keyref=":r" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:contactDetails" />
                  <ruleml:Var keyref=":k" />
                </ruleml:Expr>
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements148Formula2">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :o1) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y2 :z) & (prOnto:Controller :y1 :z) & (prOnto:jointDataController :y)
	 & (rioOnto:partOf :y1 :y) & (rioOnto:partOf :y2 :y) & (prOnto:register :r)
	 & (rioOnto:or :o1 :er1 :er2) & (prOnto:responsibleFor' :er1 :y :r) & (prOnto:isRepresentedBy :y :k)
	 & (prOnto:Representative :k) & (prOnto:responsibleFor' :er2 :k :r) & (rioOnto:exceptionCha4Sec1Art30Par5),

	(rioOnto:RexistAtTime :a2 :t1) & (rioOnto:and :a2 :eco1 :eco2) & (prOnto:contain' :eco1 :r prOnto:contactDetails(:y1)) & (prOnto:contain' :eco2 :r prOnto:contactDetails(:y2))
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":o1">o1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y2">y2</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y1">y1</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:jointDataController" />
              <ruleml:Var key=":y">y</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:partOf" />
              <ruleml:Var keyref=":y1" />
              <ruleml:Var keyref=":y" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:partOf" />
              <ruleml:Var keyref=":y2" />
              <ruleml:Var keyref=":y" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:register" />
              <ruleml:Var key=":r">r</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":o1" />
              <ruleml:Var key=":er1">er1</ruleml:Var>
              <ruleml:Var key=":er2">er2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1583">
              <ruleml:Rel iri="prOnto:responsibleFor" />
              <ruleml:Var keyref=":er1" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":r" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isRepresentedBy" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Representative" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1584">
              <ruleml:Rel iri="prOnto:responsibleFor" />
              <ruleml:Var keyref=":er2" />
              <ruleml:Var keyref=":k" />
              <ruleml:Var keyref=":r" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha4Sec1Art30Par5" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":a2">a2</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:and" />
                <ruleml:Var keyref=":a2" />
                <ruleml:Var key=":eco1">eco1</ruleml:Var>
                <ruleml:Var key=":eco2">eco2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1585">
                <ruleml:Rel iri="prOnto:contain" />
                <ruleml:Var keyref=":eco1" />
                <ruleml:Var keyref=":r" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:contactDetails" />
                  <ruleml:Var keyref=":y1" />
                </ruleml:Expr>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1586">
                <ruleml:Rel iri="prOnto:contain" />
                <ruleml:Var keyref=":eco2" />
                <ruleml:Var keyref=":r" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:contactDetails" />
                  <ruleml:Var keyref=":y2" />
                </ruleml:Expr>
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements148Formula3">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :eo1) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:DPO :x) & (prOnto:register :r)
	 & (rioOnto:or :o1 :er1 :er2) & (prOnto:responsibleFor' :er1 :y :r) & (prOnto:isRepresentedBy :y :k)
	 & (prOnto:Representative :k) & (prOnto:responsibleFor' :er2 :k :r) & (rioOnto:exceptionCha4Sec1Art30Par5),

	(rioOnto:RexistAtTime :eco :t1) & (prOnto:contain' :eco :r prOnto:contactDetails(:x))
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":eo1">eo1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DPO" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:register" />
              <ruleml:Var key=":r">r</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":o1" />
              <ruleml:Var key=":er1">er1</ruleml:Var>
              <ruleml:Var key=":er2">er2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1587">
              <ruleml:Rel iri="prOnto:responsibleFor" />
              <ruleml:Var keyref=":er1" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":r" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isRepresentedBy" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Representative" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1588">
              <ruleml:Rel iri="prOnto:responsibleFor" />
              <ruleml:Var keyref=":er2" />
              <ruleml:Var keyref=":k" />
              <ruleml:Var keyref=":r" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha4Sec1Art30Par5" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":eco">eco</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1589">
                <ruleml:Rel iri="prOnto:contain" />
                <ruleml:Var keyref=":eco" />
                <ruleml:Var keyref=":r" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:contactDetails" />
                  <ruleml:Var keyref=":x" />
                </ruleml:Expr>
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements149">
    <lrml:PrescriptiveStatement key="statements149Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :eo1 :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:Purpose :epu) & (prOnto:isBasedOn :ep :epu)
	 & (prOnto:register :r) & (rioOnto:or :eo1 :er1 :er2) & (prOnto:responsibleFor' :er1 :y :r)
	 & (prOnto:isRepresentedBy :y :k) & (prOnto:Representative :k) & (prOnto:responsibleFor' :er2 :k :r)
	 & (rioOnto:exceptionCha4Sec1Art30Par5),

	(rioOnto:RexistAtTime :eco :t1) & (prOnto:contain' :eco :r :epu)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":eo1">eo1</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1590">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1591">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Purpose" />
              <ruleml:Var key=":epu">epu</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isBasedOn" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":epu" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:register" />
              <ruleml:Var key=":r">r</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eo1" />
              <ruleml:Var key=":er1">er1</ruleml:Var>
              <ruleml:Var key=":er2">er2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1592">
              <ruleml:Rel iri="prOnto:responsibleFor" />
              <ruleml:Var keyref=":er1" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":r" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isRepresentedBy" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Representative" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1593">
              <ruleml:Rel iri="prOnto:responsibleFor" />
              <ruleml:Var keyref=":er2" />
              <ruleml:Var keyref=":k" />
              <ruleml:Var keyref=":r" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha4Sec1Art30Par5" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":eco">eco</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1594">
                <ruleml:Rel iri="prOnto:contain" />
                <ruleml:Var keyref=":eco" />
                <ruleml:Var keyref=":r" />
                <ruleml:Var keyref=":epu" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements150">
    <lrml:PrescriptiveStatement key="statements150Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :eo1 :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:register :r) & (rioOnto:or :eo1 :er1 :er2)
	 & (prOnto:responsibleFor' :er1 :y :r) & (prOnto:isRepresentedBy :y :k) & (prOnto:Representative :k)
	 & (prOnto:responsibleFor' :er2 :k :r) & (rioOnto:exceptionCha4Sec1Art30Par5),

	(rioOnto:RexistAtTime :a2 :t1) & (rioOnto:and :a2 :ec1 :ec2) & (prOnto:contain' :ec1 :r :cz) & (prOnto:contain' :ec2 :r :cw)
	 & (prOnto:categoryOf :cz :z) & (prOnto:categoryOf :cw :w)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":eo1">eo1</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1595">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1596">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:register" />
              <ruleml:Var key=":r">r</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eo1" />
              <ruleml:Var key=":er1">er1</ruleml:Var>
              <ruleml:Var key=":er2">er2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1597">
              <ruleml:Rel iri="prOnto:responsibleFor" />
              <ruleml:Var keyref=":er1" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":r" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isRepresentedBy" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Representative" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1598">
              <ruleml:Rel iri="prOnto:responsibleFor" />
              <ruleml:Var keyref=":er2" />
              <ruleml:Var keyref=":k" />
              <ruleml:Var keyref=":r" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha4Sec1Art30Par5" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":a2">a2</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:and" />
                <ruleml:Var keyref=":a2" />
                <ruleml:Var key=":ec1">ec1</ruleml:Var>
                <ruleml:Var key=":ec2">ec2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1599">
                <ruleml:Rel iri="prOnto:contain" />
                <ruleml:Var keyref=":ec1" />
                <ruleml:Var keyref=":r" />
                <ruleml:Var key=":cz">cz</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1600">
                <ruleml:Rel iri="prOnto:contain" />
                <ruleml:Var keyref=":ec2" />
                <ruleml:Var keyref=":r" />
                <ruleml:Var key=":cw">cw</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:categoryOf" />
                <ruleml:Var keyref=":cz" />
                <ruleml:Var keyref=":z" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:categoryOf" />
                <ruleml:Var keyref=":cw" />
                <ruleml:Var keyref=":w" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements151">
    <lrml:PrescriptiveStatement key="statements151Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :eo1) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:recipientOf :x :z) & (prOnto:register :r)
	 & (rioOnto:or :eo1 :er1 :er2) & (prOnto:responsibleFor' :er1 :y :r) & (prOnto:isRepresentedBy :y :k)
	 & (prOnto:Representative :k) & (prOnto:responsibleFor' :er2 :k :r) & (rioOnto:exceptionCha4Sec1Art30Par5),

	(rioOnto:RexistAtTime :eco :t1) & (prOnto:contain' :eco :r prOnto:contactDetails(:x))
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":eo1">eo1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:recipientOf" />
              <ruleml:Var key=":x">x</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:register" />
              <ruleml:Var key=":r">r</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eo1" />
              <ruleml:Var key=":er1">er1</ruleml:Var>
              <ruleml:Var key=":er2">er2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1601">
              <ruleml:Rel iri="prOnto:responsibleFor" />
              <ruleml:Var keyref=":er1" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":r" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isRepresentedBy" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Representative" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1602">
              <ruleml:Rel iri="prOnto:responsibleFor" />
              <ruleml:Var keyref=":er2" />
              <ruleml:Var keyref=":k" />
              <ruleml:Var keyref=":r" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha4Sec1Art30Par5" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":eco">eco</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1603">
                <ruleml:Rel iri="prOnto:contain" />
                <ruleml:Var keyref=":eco" />
                <ruleml:Var keyref=":r" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:contactDetails" />
                  <ruleml:Var keyref=":x" />
                </ruleml:Expr>
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements152">
    <lrml:PrescriptiveStatement key="statements152Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :eo1 :et) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y1 :z) & (prOnto:Controller :y2 :z) & (prOnto:Processor :x)
	 & (prOnto:nominates' :edp :y2 :x) & (prOnto:register :r) & (rioOnto:or :eo1 :er1 :er2)
	 & (prOnto:responsibleFor' :er1 :y2 :r) & (prOnto:isRepresentedBy :y2 :k) & (prOnto:Representative :k)
	 & (prOnto:responsibleFor' :er2 :k :r) & (prOnto:Transmit' :et :x :z :y1) & (prOnto:countryOf :y1 :c)
	 & (prOnto:thirdCountry :c) & (rioOnto:exceptionCha4Sec1Art30Par5),

	(rioOnto:RexistAtTime :a2 :t1) & (rioOnto:and :a2 :ec1 :ec2) & (prOnto:contain' :ec1 :r :et) & (prOnto:contain' :ec2 :r prOnto:contactDetails(:y1))
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":eo1">eo1</ruleml:Var>
              <ruleml:Var key=":et">et</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y1">y1</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y2">y2</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1604">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y2" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:register" />
              <ruleml:Var key=":r">r</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eo1" />
              <ruleml:Var key=":er1">er1</ruleml:Var>
              <ruleml:Var key=":er2">er2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1605">
              <ruleml:Rel iri="prOnto:responsibleFor" />
              <ruleml:Var keyref=":er1" />
              <ruleml:Var keyref=":y2" />
              <ruleml:Var keyref=":r" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isRepresentedBy" />
              <ruleml:Var keyref=":y2" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Representative" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1606">
              <ruleml:Rel iri="prOnto:responsibleFor" />
              <ruleml:Var keyref=":er2" />
              <ruleml:Var keyref=":k" />
              <ruleml:Var keyref=":r" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1607">
              <ruleml:Rel iri="prOnto:Transmit" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":y1" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:countryOf" />
              <ruleml:Var keyref=":y1" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:thirdCountry" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha4Sec1Art30Par5" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":a2">a2</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:and" />
                <ruleml:Var keyref=":a2" />
                <ruleml:Var key=":ec1">ec1</ruleml:Var>
                <ruleml:Var key=":ec2">ec2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1608">
                <ruleml:Rel iri="prOnto:contain" />
                <ruleml:Var keyref=":ec1" />
                <ruleml:Var keyref=":r" />
                <ruleml:Var keyref=":et" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1609">
                <ruleml:Rel iri="prOnto:contain" />
                <ruleml:Var keyref=":ec2" />
                <ruleml:Var keyref=":r" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:contactDetails" />
                  <ruleml:Var keyref=":y1" />
                </ruleml:Expr>
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements152Formula2">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :eo1 :et) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:register :r) & (rioOnto:or :eo1 :er1 :er2) & (prOnto:responsibleFor' :er1 :y :r)
	 & (prOnto:isRepresentedBy :y :k) & (prOnto:Representative :k) & (prOnto:responsibleFor' :er2 :k :r)
	 & (prOnto:Transmit' :et :x :z :c) & (prOnto:internationalOrganization :c) & (rioOnto:exceptionCha4Sec1Art30Par5),

	(rioOnto:RexistAtTime :a2 :t1) & (rioOnto:and :a2 :ec1 :ec2) & (prOnto:contain' :ec1 :r :et) & (prOnto:contain' :ec2 :r prOnto:contactDetails(:c))
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":eo1">eo1</ruleml:Var>
              <ruleml:Var key=":et">et</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1610">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:register" />
              <ruleml:Var key=":r">r</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eo1" />
              <ruleml:Var key=":er1">er1</ruleml:Var>
              <ruleml:Var key=":er2">er2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1611">
              <ruleml:Rel iri="prOnto:responsibleFor" />
              <ruleml:Var keyref=":er1" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":r" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isRepresentedBy" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Representative" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1612">
              <ruleml:Rel iri="prOnto:responsibleFor" />
              <ruleml:Var keyref=":er2" />
              <ruleml:Var keyref=":k" />
              <ruleml:Var keyref=":r" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1613">
              <ruleml:Rel iri="prOnto:Transmit" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:internationalOrganization" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha4Sec1Art30Par5" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":a2">a2</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:and" />
                <ruleml:Var keyref=":a2" />
                <ruleml:Var key=":ec1">ec1</ruleml:Var>
                <ruleml:Var key=":ec2">ec2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1614">
                <ruleml:Rel iri="prOnto:contain" />
                <ruleml:Var keyref=":ec1" />
                <ruleml:Var keyref=":r" />
                <ruleml:Var keyref=":et" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1615">
                <ruleml:Rel iri="prOnto:contain" />
                <ruleml:Var keyref=":ec2" />
                <ruleml:Var keyref=":r" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:contactDetails" />
                  <ruleml:Var keyref=":c" />
                </ruleml:Expr>
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements152Formula3">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :eo1 :et :en1 :en2 :elf :ecw :eim :er) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :x :z) & (prOnto:Controller :y :z) & (prOnto:register :r)
	 & (rioOnto:or :eo1 :er1 :er2) & (prOnto:responsibleFor' :er1 :y :r) & (prOnto:isRepresentedBy :y :k)
	 & (prOnto:Representative :k) & (prOnto:responsibleFor' :er2 :k :r) & (prOnto:Transmit' :et :x :z :x)
	 & (prOnto:countryOf :x :c) & (prOnto:thirdCountry :c) & (rioOnto:not :en1 :ea)
	 & (prOnto:authorizedBy' :ea :et EuropeanUnion) & (rioOnto:not :en2 :ei) & (prOnto:implement' :ei :y :em)
	 & (prOnto:measure :em) & (prOnto:appropriate :em) & (prOnto:legitimateInterestOf' :elf :y)
	 & (prOnto:complyWith' :ecw :et :erf) & (prOnto:rightsAndFreedomsOf' :erf :w) & (prOnto:implement' :eim :y :em1)
	 & (prOnto:measure :em1) & (prOnto:enforce' :er :em1 :eco) & (prOnto:complyWith' :eco :et GDPR)
	 & (rioOnto:exceptionCha5ArtA49Par1FromPoint1ToPoint6 :et) & (rioOnto:exceptionCha4Sec1Art30Par5),

	(rioOnto:RexistAtTime :ecn :t1) & (prOnto:contain' :ecn :r :eim)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":eo1">eo1</ruleml:Var>
              <ruleml:Var key=":et">et</ruleml:Var>
              <ruleml:Var key=":en1">en1</ruleml:Var>
              <ruleml:Var key=":en2">en2</ruleml:Var>
              <ruleml:Var key=":elf">elf</ruleml:Var>
              <ruleml:Var key=":ecw">ecw</ruleml:Var>
              <ruleml:Var key=":eim">eim</ruleml:Var>
              <ruleml:Var key=":er">er</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":x">x</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:register" />
              <ruleml:Var key=":r">r</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eo1" />
              <ruleml:Var key=":er1">er1</ruleml:Var>
              <ruleml:Var key=":er2">er2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1616">
              <ruleml:Rel iri="prOnto:responsibleFor" />
              <ruleml:Var keyref=":er1" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":r" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isRepresentedBy" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Representative" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1617">
              <ruleml:Rel iri="prOnto:responsibleFor" />
              <ruleml:Var keyref=":er2" />
              <ruleml:Var keyref=":k" />
              <ruleml:Var keyref=":r" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1618">
              <ruleml:Rel iri="prOnto:Transmit" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:countryOf" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:thirdCountry" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en1" />
              <ruleml:Var key=":ea">ea</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1619">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":ea" />
              <ruleml:Var key=":et">et</ruleml:Var>
              <ruleml:Ind>EuropeanUnion</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en2" />
              <ruleml:Var key=":ei">ei</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1620">
              <ruleml:Rel iri="prOnto:implement" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":em">em</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:measure" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:appropriate" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha5ArtA49Par1FromPoint1ToPoint6" />
                <ruleml:Var keyref=":et" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Atom keyref=":A1621">
              <ruleml:Rel iri="prOnto:legitimateInterestOf" />
              <ruleml:Var keyref=":elf" />
              <ruleml:Var keyref=":y" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1622">
              <ruleml:Rel iri="prOnto:complyWith" />
              <ruleml:Var keyref=":ecw" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var key=":erf">erf</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1623">
              <ruleml:Rel iri="prOnto:rightsAndFreedomsOf" />
              <ruleml:Var keyref=":erf" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1624">
              <ruleml:Rel iri="prOnto:implement" />
              <ruleml:Var keyref=":eim" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":em1">em1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:measure" />
              <ruleml:Var keyref=":em1" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1625">
              <ruleml:Rel iri="prOnto:enforce" />
              <ruleml:Var keyref=":er" />
              <ruleml:Var keyref=":em1" />
              <ruleml:Var key=":eco">eco</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1626">
              <ruleml:Rel iri="prOnto:complyWith" />
              <ruleml:Var keyref=":eco" />
              <ruleml:Var keyref=":et" />
              <ruleml:Ind>GDPR</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha4Sec1Art30Par5" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":ecn">ecn</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1627">
                <ruleml:Rel iri="prOnto:contain" />
                <ruleml:Var keyref=":ecn" />
                <ruleml:Var keyref=":r" />
                <ruleml:Var keyref=":eim" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements152Formula4">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :eo1 :et :en1 :en2 :elf :ecw :eim :er) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:register :r) & (rioOnto:or :eo1 :er1 :er2) & (prOnto:responsibleFor' :er1 :y :r)
	 & (prOnto:isRepresentedBy :y :k) & (prOnto:Representative :k) & (prOnto:responsibleFor' :er2 :k :r)
	 & (prOnto:Transmit' :et :x :z :c) & (prOnto:internationalOrganization :c) & (rioOnto:not :en1 :ea)
	 & (prOnto:authorizedBy' :ea :et EuropeanUnion) & (rioOnto:not :en2 :ei) & (prOnto:implement' :ei :y :em)
	 & (prOnto:measure :em) & (prOnto:appropriate :em) & (prOnto:legitimateInterestOf' :elf :y)
	 & (prOnto:complyWith' :ecw :et :erf) & (prOnto:rightsAndFreedomsOf' :erf :w) & (prOnto:implement' :eim :y :em1)
	 & (prOnto:measure :em1) & (prOnto:enforce' :er :em1 :eco) & (prOnto:complyWith' :eco :et GDPR)
	 & (rioOnto:exceptionCha5Art49Par1FromPoint1ToPoint6 :et) & (rioOnto:exceptionCha4Sec1Art30Par5),

	(rioOnto:RexistAtTime :ecn :t1) & (prOnto:contain' :ecn :r :eim)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":eo1">eo1</ruleml:Var>
              <ruleml:Var key=":et">et</ruleml:Var>
              <ruleml:Var key=":en1">en1</ruleml:Var>
              <ruleml:Var key=":en2">en2</ruleml:Var>
              <ruleml:Var key=":elf">elf</ruleml:Var>
              <ruleml:Var key=":ecw">ecw</ruleml:Var>
              <ruleml:Var key=":eim">eim</ruleml:Var>
              <ruleml:Var key=":er">er</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1628">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:register" />
              <ruleml:Var key=":r">r</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eo1" />
              <ruleml:Var key=":er1">er1</ruleml:Var>
              <ruleml:Var key=":er2">er2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1629">
              <ruleml:Rel iri="prOnto:responsibleFor" />
              <ruleml:Var keyref=":er1" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":r" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isRepresentedBy" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Representative" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1630">
              <ruleml:Rel iri="prOnto:responsibleFor" />
              <ruleml:Var keyref=":er2" />
              <ruleml:Var keyref=":k" />
              <ruleml:Var keyref=":r" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1631">
              <ruleml:Rel iri="prOnto:Transmit" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:internationalOrganization" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en1" />
              <ruleml:Var key=":ea">ea</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1632">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":ea" />
              <ruleml:Var key=":et">et</ruleml:Var>
              <ruleml:Ind>EuropeanUnion</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en2" />
              <ruleml:Var key=":ei">ei</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1633">
              <ruleml:Rel iri="prOnto:implement" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":em">em</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:measure" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:appropriate" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha5Art49Par1FromPoint1ToPoint6" />
                <ruleml:Var keyref=":et" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Atom keyref=":A1634">
              <ruleml:Rel iri="prOnto:legitimateInterestOf" />
              <ruleml:Var keyref=":elf" />
              <ruleml:Var keyref=":y" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1635">
              <ruleml:Rel iri="prOnto:complyWith" />
              <ruleml:Var keyref=":ecw" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var key=":erf">erf</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1636">
              <ruleml:Rel iri="prOnto:rightsAndFreedomsOf" />
              <ruleml:Var keyref=":erf" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1637">
              <ruleml:Rel iri="prOnto:implement" />
              <ruleml:Var keyref=":eim" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":em1">em1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:measure" />
              <ruleml:Var keyref=":em1" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1638">
              <ruleml:Rel iri="prOnto:enforce" />
              <ruleml:Var keyref=":er" />
              <ruleml:Var keyref=":em1" />
              <ruleml:Var key=":eco">eco</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1639">
              <ruleml:Rel iri="prOnto:complyWith" />
              <ruleml:Var keyref=":eco" />
              <ruleml:Var keyref=":et" />
              <ruleml:Ind>GDPR</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha4Sec1Art30Par5" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":ecn">ecn</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1640">
                <ruleml:Rel iri="prOnto:contain" />
                <ruleml:Var keyref=":ecn" />
                <ruleml:Var keyref=":r" />
                <ruleml:Var keyref=":eim" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements153">
    <lrml:PrescriptiveStatement key="statements153Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :eo1 :ep) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:categoryOf :x :z) & (prOnto:register :r)
	 & (rioOnto:or :eo1 :er1 :er2) & (prOnto:responsibleFor' :er1 :y :r) & (prOnto:isRepresentedBy :y :k)
	 & (prOnto:Representative :k) & (prOnto:responsibleFor' :er2 :k :r) & (rioOnto:possible' :ep :eco)
	 & (prOnto:contain' :eco :r :eti) & (rioOnto:timeOf :eti :eca) & (prOnto:erase' :eca :y :x)
	 & (rioOnto:exceptionCha4Sec1Art30Par5),

	(rioOnto:RexistAtTime :eco :t1)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":eo1">eo1</ruleml:Var>
              <ruleml:Var key=":ep">ep</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:categoryOf" />
              <ruleml:Var key=":x">x</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:register" />
              <ruleml:Var key=":r">r</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eo1" />
              <ruleml:Var key=":er1">er1</ruleml:Var>
              <ruleml:Var key=":er2">er2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1641">
              <ruleml:Rel iri="prOnto:responsibleFor" />
              <ruleml:Var keyref=":er1" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":r" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isRepresentedBy" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Representative" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1642">
              <ruleml:Rel iri="prOnto:responsibleFor" />
              <ruleml:Var keyref=":er2" />
              <ruleml:Var keyref=":k" />
              <ruleml:Var keyref=":r" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1643">
              <ruleml:Rel iri="rioOnto:possible" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var key=":eco">eco</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1644">
              <ruleml:Rel iri="prOnto:contain" />
              <ruleml:Var keyref=":eco" />
              <ruleml:Var keyref=":r" />
              <ruleml:Var key=":eti">eti</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:timeOf" />
              <ruleml:Var keyref=":eti" />
              <ruleml:Var key=":eca">eca</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1645">
              <ruleml:Rel iri="prOnto:erase" />
              <ruleml:Var keyref=":eca" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha4Sec1Art30Par5" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var keyref=":eco" />
              <ruleml:Var keyref=":t1" />
            </ruleml:Atom>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements154">
    <lrml:PrescriptiveStatement key="statements154Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :eo1 :epo :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:register :r) & (rioOnto:or :eo1 :er1 :er2)
	 & (prOnto:responsibleFor' :er1 :y :r) & (prOnto:isRepresentedBy :y :k) & (prOnto:Representative :k)
	 & (prOnto:responsibleFor' :er2 :k :r) & (rioOnto:possible' :epo :eco) & (prOnto:contain' :eco :r :ei)
	 & (prOnto:implement' :ei :y :em) & (prOnto:measure :em) & (rioOnto:cause :em :ese)
	 & (prOnto:secure' :ese :ep) & (rioOnto:exceptionCha4Sec1Art30Par5),

	(rioOnto:RexistAtTime :eco :t1)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":eo1">eo1</ruleml:Var>
              <ruleml:Var key=":epo">epo</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1646">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1647">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:register" />
              <ruleml:Var key=":r">r</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eo1" />
              <ruleml:Var key=":er1">er1</ruleml:Var>
              <ruleml:Var key=":er2">er2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1648">
              <ruleml:Rel iri="prOnto:responsibleFor" />
              <ruleml:Var keyref=":er1" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":r" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isRepresentedBy" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Representative" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1649">
              <ruleml:Rel iri="prOnto:responsibleFor" />
              <ruleml:Var keyref=":er2" />
              <ruleml:Var keyref=":k" />
              <ruleml:Var keyref=":r" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1650">
              <ruleml:Rel iri="rioOnto:possible" />
              <ruleml:Var keyref=":epo" />
              <ruleml:Var key=":eco">eco</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1651">
              <ruleml:Rel iri="prOnto:contain" />
              <ruleml:Var keyref=":eco" />
              <ruleml:Var keyref=":r" />
              <ruleml:Var key=":ei">ei</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1652">
              <ruleml:Rel iri="prOnto:implement" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":em">em</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:measure" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:cause" />
              <ruleml:Var keyref=":em" />
              <ruleml:Var key=":ese">ese</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1653">
              <ruleml:Rel iri="prOnto:secure" />
              <ruleml:Var keyref=":ese" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha4Sec1Art30Par5" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var keyref=":eco" />
              <ruleml:Var keyref=":t1" />
            </ruleml:Atom>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements155">
    <lrml:PrescriptiveStatement key="statements155Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (rioOnto:exceptionCha4Sec1Art30Par5),

	(rioOnto:RexistAtTime :a2 :t1) & (rioOnto:and :a2 :eo1 :eo2) & (prOnto:register :r) & (rioOnto:or :eo1 :ew1 :ew2)
	 & (prOnto:writeIn' :ew1 :x :r :ep) & (prOnto:isRepresentedBy :x :k) & (prOnto:Representative :k)
	 & (prOnto:writeIn' :ew2 :k :r :ep) & (rioOnto:or :eo2 :er1 :er2) & (prOnto:responsibleFor' :er1 :x :r)
	 & (prOnto:responsibleFor' :er2 :k :r)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1654">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1655">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha4Sec1Art30Par5" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":a2">a2</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:and" />
                <ruleml:Var keyref=":a2" />
                <ruleml:Var key=":eo1">eo1</ruleml:Var>
                <ruleml:Var key=":eo2">eo2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:register" />
                <ruleml:Var key=":r">r</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:or" />
                <ruleml:Var keyref=":eo1" />
                <ruleml:Var key=":ew1">ew1</ruleml:Var>
                <ruleml:Var key=":ew2">ew2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1656">
                <ruleml:Rel iri="prOnto:writeIn" />
                <ruleml:Var keyref=":ew1" />
                <ruleml:Var keyref=":x" />
                <ruleml:Var keyref=":r" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:isRepresentedBy" />
                <ruleml:Var keyref=":x" />
                <ruleml:Var key=":k">k</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:Representative" />
                <ruleml:Var keyref=":k" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1657">
                <ruleml:Rel iri="prOnto:writeIn" />
                <ruleml:Var keyref=":ew2" />
                <ruleml:Var keyref=":k" />
                <ruleml:Var keyref=":r" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:or" />
                <ruleml:Var keyref=":eo2" />
                <ruleml:Var key=":er1">er1</ruleml:Var>
                <ruleml:Var key=":er2">er2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1658">
                <ruleml:Rel iri="prOnto:responsibleFor" />
                <ruleml:Var keyref=":er1" />
                <ruleml:Var keyref=":x" />
                <ruleml:Var keyref=":r" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1659">
                <ruleml:Rel iri="prOnto:responsibleFor" />
                <ruleml:Var keyref=":er2" />
                <ruleml:Var keyref=":k" />
                <ruleml:Var keyref=":r" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements156">
    <lrml:PrescriptiveStatement key="statements156Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :o1 :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:register :r) & (rioOnto:or :o1 :er1 :er2)
	 & (prOnto:responsibleFor' :er1 :x :r) & (prOnto:isRepresentedBy :x :k) & (prOnto:Representative :k)
	 & (prOnto:responsibleFor' :er2 :k :r) & (rioOnto:exceptionCha4Sec1Art30Par5),

	(rioOnto:RexistAtTime :a2 :t1) & (rioOnto:and :a2 :o2 :o3) & (rioOnto:or :o2 :ec1 :ec2) & (prOnto:contain' :ec1 :r prOnto:contactDetails(:y))
	 & (prOnto:contain' :ec2 :r prOnto:contactDetails(:k)) & (rioOnto:or :o3 :ec3 :ec4) & (prOnto:contain' :ec3 :r prOnto:contactDetails(:x))
	 & (prOnto:contain' :ec4 :r prOnto:contactDetails(:k))
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":o1">o1</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1660">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1661">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:register" />
              <ruleml:Var key=":r">r</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":o1" />
              <ruleml:Var key=":er1">er1</ruleml:Var>
              <ruleml:Var key=":er2">er2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1662">
              <ruleml:Rel iri="prOnto:responsibleFor" />
              <ruleml:Var keyref=":er1" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":r" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isRepresentedBy" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Representative" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1663">
              <ruleml:Rel iri="prOnto:responsibleFor" />
              <ruleml:Var keyref=":er2" />
              <ruleml:Var keyref=":k" />
              <ruleml:Var keyref=":r" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha4Sec1Art30Par5" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":a2">a2</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:and" />
                <ruleml:Var keyref=":a2" />
                <ruleml:Var key=":o2">o2</ruleml:Var>
                <ruleml:Var key=":o3">o3</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:or" />
                <ruleml:Var keyref=":o2" />
                <ruleml:Var key=":ec1">ec1</ruleml:Var>
                <ruleml:Var key=":ec2">ec2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1664">
                <ruleml:Rel iri="prOnto:contain" />
                <ruleml:Var keyref=":ec1" />
                <ruleml:Var keyref=":r" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:contactDetails" />
                  <ruleml:Var keyref=":y" />
                </ruleml:Expr>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1665">
                <ruleml:Rel iri="prOnto:contain" />
                <ruleml:Var keyref=":ec2" />
                <ruleml:Var keyref=":r" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:contactDetails" />
                  <ruleml:Var keyref=":k" />
                </ruleml:Expr>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:or" />
                <ruleml:Var keyref=":o3" />
                <ruleml:Var key=":ec3">ec3</ruleml:Var>
                <ruleml:Var key=":ec4">ec4</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1666">
                <ruleml:Rel iri="prOnto:contain" />
                <ruleml:Var keyref=":ec3" />
                <ruleml:Var keyref=":r" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:contactDetails" />
                  <ruleml:Var keyref=":x" />
                </ruleml:Expr>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1667">
                <ruleml:Rel iri="prOnto:contain" />
                <ruleml:Var keyref=":ec4" />
                <ruleml:Var keyref=":r" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:contactDetails" />
                  <ruleml:Var keyref=":k" />
                </ruleml:Expr>
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements156Formula2">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :eo1 :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:DPO :k) & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:register :r)
	 & (rioOnto:or :o1 :er1 :er2) & (prOnto:responsibleFor' :er1 :y :r) & (prOnto:isRepresentedBy :y :k)
	 & (prOnto:Representative :k) & (prOnto:responsibleFor' :er2 :k :r) & (rioOnto:exceptionCha4Sec1Art30Par5),

	(rioOnto:RexistAtTime :eco :t1) & (prOnto:contain' :eco :r prOnto:contactDetails(:k))
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":eo1">eo1</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1668">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DPO" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1669">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:register" />
              <ruleml:Var key=":r">r</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":o1" />
              <ruleml:Var key=":er1">er1</ruleml:Var>
              <ruleml:Var key=":er2">er2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1670">
              <ruleml:Rel iri="prOnto:responsibleFor" />
              <ruleml:Var keyref=":er1" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":r" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isRepresentedBy" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Representative" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1671">
              <ruleml:Rel iri="prOnto:responsibleFor" />
              <ruleml:Var keyref=":er2" />
              <ruleml:Var keyref=":k" />
              <ruleml:Var keyref=":r" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha4Sec1Art30Par5" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":eco">eco</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1672">
                <ruleml:Rel iri="prOnto:contain" />
                <ruleml:Var keyref=":eco" />
                <ruleml:Var keyref=":r" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:contactDetails" />
                  <ruleml:Var keyref=":k" />
                </ruleml:Expr>
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements157">
    <lrml:PrescriptiveStatement key="statements157Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :eo1 :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:categoryOf :k :z) & (prOnto:register :r)
	 & (rioOnto:or :eo1 :er1 :er2) & (prOnto:responsibleFor' :er1 :x :r) & (prOnto:isRepresentedBy :x :k)
	 & (prOnto:Representative :k) & (prOnto:responsibleFor' :er2 :k :r) & (rioOnto:exceptionCha4Sec1Art30Par5),

	(rioOnto:RexistAtTime :eco :t1) & (prOnto:contain' :eco :r :k)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":eo1">eo1</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1673">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1674">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:categoryOf" />
              <ruleml:Var key=":k">k</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:register" />
              <ruleml:Var key=":r">r</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eo1" />
              <ruleml:Var key=":er1">er1</ruleml:Var>
              <ruleml:Var key=":er2">er2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1675">
              <ruleml:Rel iri="prOnto:responsibleFor" />
              <ruleml:Var keyref=":er1" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":r" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isRepresentedBy" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Representative" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1676">
              <ruleml:Rel iri="prOnto:responsibleFor" />
              <ruleml:Var keyref=":er2" />
              <ruleml:Var keyref=":k" />
              <ruleml:Var keyref=":r" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha4Sec1Art30Par5" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":eco">eco</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1677">
                <ruleml:Rel iri="prOnto:contain" />
                <ruleml:Var keyref=":eco" />
                <ruleml:Var keyref=":r" />
                <ruleml:Var keyref=":k" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements158">
    <lrml:PrescriptiveStatement key="statements158Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :eo1 :et :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :k :z) & (prOnto:Controller :y :z) & (prOnto:Processor :x)
	 & (prOnto:nominates' :edp :y :x) & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:register :r)
	 & (rioOnto:or :eo1 :er1 :er2) & (prOnto:responsibleFor' :er1 :x :r) & (prOnto:isRepresentedBy :x :k)
	 & (prOnto:Representative :k) & (prOnto:responsibleFor' :er2 :k :r) & (prOnto:Transmit' :et :x :z :k)
	 & (prOnto:countryOf :k :c) & (prOnto:thirdCountry :c) & (rioOnto:exceptionCha4Sec1Art30Par5),

	(rioOnto:RexistAtTime :a2 :t1) & (rioOnto:and :a2 :ec1 :ec2) & (prOnto:contain' :ec1 :r :et) & (prOnto:contain' :ec2 :r prOnto:contactDetails(:k))
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":eo1">eo1</ruleml:Var>
              <ruleml:Var key=":et">et</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":k">k</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1678">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1679">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:register" />
              <ruleml:Var key=":r">r</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eo1" />
              <ruleml:Var key=":er1">er1</ruleml:Var>
              <ruleml:Var key=":er2">er2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1680">
              <ruleml:Rel iri="prOnto:responsibleFor" />
              <ruleml:Var keyref=":er1" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":r" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isRepresentedBy" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Representative" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1681">
              <ruleml:Rel iri="prOnto:responsibleFor" />
              <ruleml:Var keyref=":er2" />
              <ruleml:Var keyref=":k" />
              <ruleml:Var keyref=":r" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1682">
              <ruleml:Rel iri="prOnto:Transmit" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:countryOf" />
              <ruleml:Var keyref=":k" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:thirdCountry" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha4Sec1Art30Par5" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":a2">a2</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:and" />
                <ruleml:Var keyref=":a2" />
                <ruleml:Var key=":ec1">ec1</ruleml:Var>
                <ruleml:Var key=":ec2">ec2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1683">
                <ruleml:Rel iri="prOnto:contain" />
                <ruleml:Var keyref=":ec1" />
                <ruleml:Var keyref=":r" />
                <ruleml:Var keyref=":et" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1684">
                <ruleml:Rel iri="prOnto:contain" />
                <ruleml:Var keyref=":ec2" />
                <ruleml:Var keyref=":r" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:contactDetails" />
                  <ruleml:Var keyref=":k" />
                </ruleml:Expr>
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements158Formula2">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :eo1 :et :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:register :r) & (rioOnto:or :eo1 :er1 :er2)
	 & (prOnto:responsibleFor' :er1 :x :r) & (prOnto:isRepresentedBy :y :k) & (prOnto:Representative :k)
	 & (prOnto:responsibleFor' :er2 :k :r) & (prOnto:Transmit' :et :x :z :c) & (prOnto:internationalOrganization :c)
	 & (rioOnto:exceptionCha4Sec1Art30Par5),

	(rioOnto:RexistAtTime :a2 :t1) & (rioOnto:and :a2 :ec1 :ec2) & (prOnto:contain' :ec1 :r :et) & (prOnto:contain' :ec2 :r prOnto:contactDetails(:c))
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":eo1">eo1</ruleml:Var>
              <ruleml:Var key=":et">et</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1685">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1686">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:register" />
              <ruleml:Var key=":r">r</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eo1" />
              <ruleml:Var key=":er1">er1</ruleml:Var>
              <ruleml:Var key=":er2">er2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1687">
              <ruleml:Rel iri="prOnto:responsibleFor" />
              <ruleml:Var keyref=":er1" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":r" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isRepresentedBy" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Representative" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1688">
              <ruleml:Rel iri="prOnto:responsibleFor" />
              <ruleml:Var keyref=":er2" />
              <ruleml:Var keyref=":k" />
              <ruleml:Var keyref=":r" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1689">
              <ruleml:Rel iri="prOnto:Transmit" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:internationalOrganization" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha4Sec1Art30Par5" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":a2">a2</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:and" />
                <ruleml:Var keyref=":a2" />
                <ruleml:Var key=":ec1">ec1</ruleml:Var>
                <ruleml:Var key=":ec2">ec2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1690">
                <ruleml:Rel iri="prOnto:contain" />
                <ruleml:Var keyref=":ec1" />
                <ruleml:Var keyref=":r" />
                <ruleml:Var keyref=":et" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1691">
                <ruleml:Rel iri="prOnto:contain" />
                <ruleml:Var keyref=":ec2" />
                <ruleml:Var keyref=":r" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:contactDetails" />
                  <ruleml:Var keyref=":c" />
                </ruleml:Expr>
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements158Formula3">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :eo1 :et :en1 :en2 :elf :ecw :eim :er :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :k :z) & (prOnto:Controller :y :z) & (prOnto:Processor :x)
	 & (prOnto:nominates' :edp :y :x) & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:register :r)
	 & (rioOnto:or :eo1 :er1 :er2) & (prOnto:responsibleFor' :er1 :x :r) & (prOnto:isRepresentedBy :x :k)
	 & (prOnto:Representative :k) & (prOnto:responsibleFor' :er2 :k :r) & (prOnto:Transmit' :et :x :z :k)
	 & (prOnto:countryOf :k :c) & (prOnto:thirdCountry :c) & (rioOnto:not :en1 :ea)
	 & (prOnto:authorizedBy' :ea :et EuropeanUnion) & (rioOnto:not :en2 :ei) & (prOnto:implement' :ei :y :em)
	 & (prOnto:measure :em) & (prOnto:appropriate :em) & (prOnto:legitimateInterestOf' :elf :y)
	 & (prOnto:complyWith' :ecw :et :erf) & (prOnto:rightsAndFreedomsOf' :erf :w) & (prOnto:implement' :eim :y :em1)
	 & (prOnto:measure :em1) & (prOnto:enforce' :er :em1 :eco) & (prOnto:complyWith' :eco :et GDPR)
	 & (rioOnto:exceptionCha5Art49Par1FromPoint1ToPoint6 :et) & (rioOnto:exceptionCha4Sec1Art30Par5),

	(rioOnto:RexistAtTime :ecn :t1) & (prOnto:contain' :ecn :r :eim)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":eo1">eo1</ruleml:Var>
              <ruleml:Var key=":et">et</ruleml:Var>
              <ruleml:Var key=":en1">en1</ruleml:Var>
              <ruleml:Var key=":en2">en2</ruleml:Var>
              <ruleml:Var key=":elf">elf</ruleml:Var>
              <ruleml:Var key=":ecw">ecw</ruleml:Var>
              <ruleml:Var key=":eim">eim</ruleml:Var>
              <ruleml:Var key=":er">er</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":k">k</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1692">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1693">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:register" />
              <ruleml:Var key=":r">r</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eo1" />
              <ruleml:Var key=":er1">er1</ruleml:Var>
              <ruleml:Var key=":er2">er2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1694">
              <ruleml:Rel iri="prOnto:responsibleFor" />
              <ruleml:Var keyref=":er1" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":r" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isRepresentedBy" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Representative" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1695">
              <ruleml:Rel iri="prOnto:responsibleFor" />
              <ruleml:Var keyref=":er2" />
              <ruleml:Var keyref=":k" />
              <ruleml:Var keyref=":r" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1696">
              <ruleml:Rel iri="prOnto:Transmit" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:countryOf" />
              <ruleml:Var keyref=":k" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:thirdCountry" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en1" />
              <ruleml:Var key=":ea">ea</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1697">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":ea" />
              <ruleml:Var key=":et">et</ruleml:Var>
              <ruleml:Ind>EuropeanUnion</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en2" />
              <ruleml:Var key=":ei">ei</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1698">
              <ruleml:Rel iri="prOnto:implement" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":em">em</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:measure" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:appropriate" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha5Art49Par1FromPoint1ToPoint6" />
                <ruleml:Var keyref=":et" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Atom keyref=":A1699">
              <ruleml:Rel iri="prOnto:legitimateInterestOf" />
              <ruleml:Var keyref=":elf" />
              <ruleml:Var keyref=":y" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1700">
              <ruleml:Rel iri="prOnto:complyWith" />
              <ruleml:Var keyref=":ecw" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var key=":erf">erf</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1701">
              <ruleml:Rel iri="prOnto:rightsAndFreedomsOf" />
              <ruleml:Var keyref=":erf" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1702">
              <ruleml:Rel iri="prOnto:implement" />
              <ruleml:Var keyref=":eim" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":em1">em1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:measure" />
              <ruleml:Var keyref=":em1" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1703">
              <ruleml:Rel iri="prOnto:enforce" />
              <ruleml:Var keyref=":er" />
              <ruleml:Var keyref=":em1" />
              <ruleml:Var key=":eco">eco</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1704">
              <ruleml:Rel iri="prOnto:complyWith" />
              <ruleml:Var keyref=":eco" />
              <ruleml:Var keyref=":et" />
              <ruleml:Ind>GDPR</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha4Sec1Art30Par5" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":ecn">ecn</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1705">
                <ruleml:Rel iri="prOnto:contain" />
                <ruleml:Var keyref=":ecn" />
                <ruleml:Var keyref=":r" />
                <ruleml:Var keyref=":eim" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements158Formula4">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :eo1 :et :en1 :en2 :elf :ecw :eim :er :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:register :r) & (rioOnto:or :eo1 :er1 :er2)
	 & (prOnto:responsibleFor' :er1 :x :r) & (prOnto:isRepresentedBy :x :k) & (prOnto:Representative :k)
	 & (prOnto:responsibleFor' :er2 :k :r) & (prOnto:Transmit' :et :x :z :c) & (prOnto:internationalOrganization :c)
	 & (rioOnto:not :en1 :ea) & (prOnto:authorizedBy' :ea :et EuropeanUnion) & (rioOnto:not :en2 :ei)
	 & (prOnto:implement' :ei :y :em) & (prOnto:measure :em) & (prOnto:appropriate :em)
	 & (prOnto:legitimateInterestOf' :elf :y) & (prOnto:complyWith' :ecw :et :erf) & (prOnto:rightsAndFreedomsOf' :erf :w)
	 & (prOnto:implement' :eim :y :em1) & (prOnto:measure :em1) & (prOnto:enforce' :er :em1 :eco)
	 & (prOnto:complyWith' :eco :et GDPR) & (rioOnto:exceptionCha5Art49Par1FromPoint1ToPoint6 :et) & (rioOnto:exceptionCha4Sec1Art30Par5),

	(rioOnto:RexistAtTime :ecn :t1) & (prOnto:contain' :ecn :r :eim)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":eo1">eo1</ruleml:Var>
              <ruleml:Var key=":et">et</ruleml:Var>
              <ruleml:Var key=":en1">en1</ruleml:Var>
              <ruleml:Var key=":en2">en2</ruleml:Var>
              <ruleml:Var key=":elf">elf</ruleml:Var>
              <ruleml:Var key=":ecw">ecw</ruleml:Var>
              <ruleml:Var key=":eim">eim</ruleml:Var>
              <ruleml:Var key=":er">er</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1706">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1707">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:register" />
              <ruleml:Var key=":r">r</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eo1" />
              <ruleml:Var key=":er1">er1</ruleml:Var>
              <ruleml:Var key=":er2">er2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1708">
              <ruleml:Rel iri="prOnto:responsibleFor" />
              <ruleml:Var keyref=":er1" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":r" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isRepresentedBy" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Representative" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1709">
              <ruleml:Rel iri="prOnto:responsibleFor" />
              <ruleml:Var keyref=":er2" />
              <ruleml:Var keyref=":k" />
              <ruleml:Var keyref=":r" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1710">
              <ruleml:Rel iri="prOnto:Transmit" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:internationalOrganization" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en1" />
              <ruleml:Var key=":ea">ea</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1711">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":ea" />
              <ruleml:Var key=":et">et</ruleml:Var>
              <ruleml:Ind>EuropeanUnion</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en2" />
              <ruleml:Var key=":ei">ei</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1712">
              <ruleml:Rel iri="prOnto:implement" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":em">em</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:measure" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:appropriate" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha5Art49Par1FromPoint1ToPoint6" />
                <ruleml:Var keyref=":et" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Atom keyref=":A1713">
              <ruleml:Rel iri="prOnto:legitimateInterestOf" />
              <ruleml:Var keyref=":elf" />
              <ruleml:Var keyref=":y" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1714">
              <ruleml:Rel iri="prOnto:complyWith" />
              <ruleml:Var keyref=":ecw" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var key=":erf">erf</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1715">
              <ruleml:Rel iri="prOnto:rightsAndFreedomsOf" />
              <ruleml:Var keyref=":erf" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1716">
              <ruleml:Rel iri="prOnto:implement" />
              <ruleml:Var keyref=":eim" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":em1">em1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:measure" />
              <ruleml:Var keyref=":em1" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1717">
              <ruleml:Rel iri="prOnto:enforce" />
              <ruleml:Var keyref=":er" />
              <ruleml:Var keyref=":em1" />
              <ruleml:Var key=":eco">eco</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1718">
              <ruleml:Rel iri="prOnto:complyWith" />
              <ruleml:Var keyref=":eco" />
              <ruleml:Var keyref=":et" />
              <ruleml:Ind>GDPR</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha4Sec1Art30Par5" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":ecn">ecn</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1719">
                <ruleml:Rel iri="prOnto:contain" />
                <ruleml:Var keyref=":ecn" />
                <ruleml:Var keyref=":r" />
                <ruleml:Var keyref=":eim" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements159">
    <lrml:PrescriptiveStatement key="statements159Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :eo1 :epo :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:register :r) & (rioOnto:or :eo1 :er1 :er2)
	 & (prOnto:responsibleFor' :er1 :x :r) & (prOnto:isRepresentedBy :x :k) & (prOnto:Representative :k)
	 & (prOnto:responsibleFor' :er2 :k :r) & (rioOnto:possible' :epo :eco) & (prOnto:contain' :eco :r :ei)
	 & (prOnto:implement' :ei :y :em) & (prOnto:measure :em) & (rioOnto:cause :em :ese)
	 & (prOnto:secure' :ese :ep) & (rioOnto:exceptionCha4Sec1Art30Par5),

	(rioOnto:RexistAtTime :eco :t1)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":eo1">eo1</ruleml:Var>
              <ruleml:Var key=":epo">epo</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1720">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1721">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:register" />
              <ruleml:Var key=":r">r</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eo1" />
              <ruleml:Var key=":er1">er1</ruleml:Var>
              <ruleml:Var key=":er2">er2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1722">
              <ruleml:Rel iri="prOnto:responsibleFor" />
              <ruleml:Var keyref=":er1" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":r" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isRepresentedBy" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Representative" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1723">
              <ruleml:Rel iri="prOnto:responsibleFor" />
              <ruleml:Var keyref=":er2" />
              <ruleml:Var keyref=":k" />
              <ruleml:Var keyref=":r" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1724">
              <ruleml:Rel iri="rioOnto:possible" />
              <ruleml:Var keyref=":epo" />
              <ruleml:Var key=":eco">eco</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1725">
              <ruleml:Rel iri="prOnto:contain" />
              <ruleml:Var keyref=":eco" />
              <ruleml:Var keyref=":r" />
              <ruleml:Var key=":ei">ei</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1726">
              <ruleml:Rel iri="prOnto:implement" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":em">em</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:measure" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:cause" />
              <ruleml:Var keyref=":em" />
              <ruleml:Var key=":ese">ese</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1727">
              <ruleml:Rel iri="prOnto:secure" />
              <ruleml:Var keyref=":ese" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha4Sec1Art30Par5" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var keyref=":eco" />
              <ruleml:Var keyref=":t1" />
            </ruleml:Atom>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements160">
    <lrml:PrescriptiveStatement key="statements160Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :eo) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:register :r) & (rioOnto:or :eo :er1 :er2)
	 & (prOnto:responsibleFor' :er1 :y :r) & (prOnto:isRepresentedBy :y :k) & (prOnto:Representative :k)
	 & (prOnto:responsibleFor' :er2 :k :r),

	(rioOnto:RexistAtTime :ew :t1) & (prOnto:writtenForm' :ew :r)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":eo">eo</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:register" />
              <ruleml:Var key=":r">r</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eo" />
              <ruleml:Var key=":er1">er1</ruleml:Var>
              <ruleml:Var key=":er2">er2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1728">
              <ruleml:Rel iri="prOnto:responsibleFor" />
              <ruleml:Var keyref=":er1" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":r" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isRepresentedBy" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Representative" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1729">
              <ruleml:Rel iri="prOnto:responsibleFor" />
              <ruleml:Var keyref=":er2" />
              <ruleml:Var keyref=":k" />
              <ruleml:Var keyref=":r" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":ew">ew</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1730">
                <ruleml:Rel iri="prOnto:writtenForm" />
                <ruleml:Var keyref=":ew" />
                <ruleml:Var keyref=":r" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements160Formula2">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :eo :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:register :r) & (rioOnto:or :eo :er1 :er2)
	 & (prOnto:responsibleFor' :er1 :x :r) & (prOnto:isRepresentedBy :x :k) & (prOnto:Representative :k)
	 & (prOnto:responsibleFor' :er2 :k :r),

	(rioOnto:RexistAtTime :ew :t1) & (prOnto:writtenForm' :ew :r)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":eo">eo</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1731">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1732">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:register" />
              <ruleml:Var key=":r">r</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eo" />
              <ruleml:Var key=":er1">er1</ruleml:Var>
              <ruleml:Var key=":er2">er2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1733">
              <ruleml:Rel iri="prOnto:responsibleFor" />
              <ruleml:Var keyref=":er1" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":r" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isRepresentedBy" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Representative" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1734">
              <ruleml:Rel iri="prOnto:responsibleFor" />
              <ruleml:Var keyref=":er2" />
              <ruleml:Var keyref=":k" />
              <ruleml:Var keyref=":r" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":ew">ew</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1735">
                <ruleml:Rel iri="prOnto:writtenForm" />
                <ruleml:Var keyref=":ew" />
                <ruleml:Var keyref=":r" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements161">
    <lrml:PrescriptiveStatement key="statements161Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :eo :er) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:register :r) & (rioOnto:or :eo :er1 :er2 :er3 :er4)
	 & (prOnto:responsibleFor' :er1 :y :r) & (prOnto:isRepresentedBy :y :ky) & (prOnto:Representative :ky)
	 & (prOnto:responsibleFor' :er2 :ky :r) & (prOnto:responsibleFor' :er3 :x :r) & (prOnto:isRepresentedBy :x :kx)
	 & (prOnto:Representative :kx) & (prOnto:responsibleFor' :er4 :kx :r) & (prOnto:request' :er prOnto:supAuth(prOnto:MSof(:y)) :r),

	(rioOnto:RexistAtTime :eat :t2) & (rioOnto:>= :t2 :t1) & (prOnto:ableTo' :eat prOnto:supAuth(prOnto:MSof(:y)) :ecc) & (prOnto:access' :ecc prOnto:supAuth(prOnto:MSof(:y)) :r)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":eo">eo</ruleml:Var>
              <ruleml:Var key=":er">er</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:register" />
              <ruleml:Var key=":r">r</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eo" />
              <ruleml:Var key=":er1">er1</ruleml:Var>
              <ruleml:Var key=":er2">er2</ruleml:Var>
              <ruleml:Var key=":er3">er3</ruleml:Var>
              <ruleml:Var key=":er4">er4</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1736">
              <ruleml:Rel iri="prOnto:responsibleFor" />
              <ruleml:Var keyref=":er1" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":r" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isRepresentedBy" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":ky">ky</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Representative" />
              <ruleml:Var keyref=":ky" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1737">
              <ruleml:Rel iri="prOnto:responsibleFor" />
              <ruleml:Var keyref=":er2" />
              <ruleml:Var keyref=":ky" />
              <ruleml:Var keyref=":r" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1738">
              <ruleml:Rel iri="prOnto:responsibleFor" />
              <ruleml:Var keyref=":er3" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":r" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isRepresentedBy" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var key=":kx">kx</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Representative" />
              <ruleml:Var keyref=":kx" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1739">
              <ruleml:Rel iri="prOnto:responsibleFor" />
              <ruleml:Var keyref=":er4" />
              <ruleml:Var keyref=":kx" />
              <ruleml:Var keyref=":r" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1740">
              <ruleml:Rel iri="prOnto:request" />
              <ruleml:Var keyref=":er" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:supAuth" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:MSof" />
                  <ruleml:Var keyref=":y" />
                </ruleml:Expr>
              </ruleml:Expr>
              <ruleml:Var keyref=":r" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":eat">eat</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1741">
                <ruleml:Rel iri="prOnto:ableTo" />
                <ruleml:Var keyref=":eat" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:supAuth" />
                  <ruleml:Expr>
                    <ruleml:Fun iri="prOnto:MSof" />
                    <ruleml:Var keyref=":y" />
                  </ruleml:Expr>
                </ruleml:Expr>
                <ruleml:Var key=":ecc">ecc</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1742">
                <ruleml:Rel iri="prOnto:access" />
                <ruleml:Var keyref=":ecc" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:supAuth" />
                  <ruleml:Expr>
                    <ruleml:Fun iri="prOnto:MSof" />
                    <ruleml:Var keyref=":y" />
                  </ruleml:Expr>
                </ruleml:Expr>
                <ruleml:Var keyref=":r" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements162">
    <lrml:ConstitutiveStatement key="statements162Formula1">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :en1 :en2 :en3 :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (rioOnto:<= :w :250) & (rioOnto:not :en1 :el)
	 & (prOnto:likely' :el :eca) & (rioOnto:cause' :eca :ep :er) & (prOnto:riskFor' :er :erf)
	 & (prOnto:rightsAndFreedomsOf' :erf :w) & (rioOnto:not :en2 :eoc) & (prOnto:occasional' :eoc :ep)
	 & (rioOnto:not :en3 :ert) & (prOnto:Judicial :epu) & (prOnto:isBasedOn :ep :epu)
	 & (rioOnto:exceptionCha4Sec1Art30Par5_sub :z),

	(rioOnto:exceptionCha4Sec1Art30Par5)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":en1">en1</ruleml:Var>
              <ruleml:Var key=":en2">en2</ruleml:Var>
              <ruleml:Var key=":en3">en3</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1743">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1744">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:&lt;=" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var key=":250">250</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en1" />
              <ruleml:Var key=":el">el</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1745">
              <ruleml:Rel iri="prOnto:likely" />
              <ruleml:Var keyref=":el" />
              <ruleml:Var key=":eca">eca</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1746">
              <ruleml:Rel iri="rioOnto:cause" />
              <ruleml:Var keyref=":eca" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var key=":er">er</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1747">
              <ruleml:Rel iri="prOnto:riskFor" />
              <ruleml:Var keyref=":er" />
              <ruleml:Var key=":erf">erf</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1748">
              <ruleml:Rel iri="prOnto:rightsAndFreedomsOf" />
              <ruleml:Var keyref=":erf" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en2" />
              <ruleml:Var key=":eoc">eoc</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1749">
              <ruleml:Rel iri="prOnto:occasional" />
              <ruleml:Var keyref=":eoc" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha4Sec1Art30Par5_sub" />
                <ruleml:Var keyref=":z" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en3" />
              <ruleml:Var key=":ert">ert</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Judicial" />
              <ruleml:Var key=":epu">epu</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isBasedOn" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":epu" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:exceptionCha4Sec1Art30Par5" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
    <lrml:ConstitutiveStatement key="statements162Formula2">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:racialOrEthic :z),

	(rioOnto:exceptionCha4Sec1Art30Par5_sub :z)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1750">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1751">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:racialOrEthic" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:exceptionCha4Sec1Art30Par5_sub" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
    <lrml:ConstitutiveStatement key="statements162Formula3">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:politicalOpinion :z),

	(rioOnto:exceptionCha4Sec1Art30Par5_sub :z)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1752">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1753">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:politicalOpinion" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:exceptionCha4Sec1Art30Par5_sub" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
    <lrml:ConstitutiveStatement key="statements162Formula4">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:relOrPhilBelief :z),

	(rioOnto:exceptionCha4Sec1Art30Par5_sub :z)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1754">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1755">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:relOrPhilBelief" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:exceptionCha4Sec1Art30Par5_sub" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
    <lrml:ConstitutiveStatement key="statements162Formula5">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:tradeUnionMembership :z),

	(rioOnto:exceptionCha4Sec1Art30Par5_sub :z)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1756">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1757">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:tradeUnionMembership" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:exceptionCha4Sec1Art30Par5_sub" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
    <lrml:ConstitutiveStatement key="statements162Formula6">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:geneticData :z),

	(rioOnto:exceptionCha4Sec1Art30Par5_sub :z)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1758">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1759">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:geneticData" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:exceptionCha4Sec1Art30Par5_sub" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
    <lrml:ConstitutiveStatement key="statements162Formula7">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:biometricData :z),

	(rioOnto:exceptionCha4Sec1Art30Par5_sub :z)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1760">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1761">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:biometricData" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:exceptionCha4Sec1Art30Par5_sub" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
    <lrml:ConstitutiveStatement key="statements162Formula8">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:Health :epu) & (prOnto:isBasedOn :ep :epu),

	(rioOnto:exceptionCha4Sec1Art30Par5_sub :z)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1762">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1763">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Health" />
              <ruleml:Var key=":epu">epu</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isBasedOn" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":epu" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:exceptionCha4Sec1Art30Par5_sub" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
    <lrml:ConstitutiveStatement key="statements162Formula9">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:sexLifeData :z),

	(rioOnto:exceptionCha4Sec1Art30Par5_sub :z)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1764">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1765">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:sexLifeData" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:exceptionCha4Sec1Art30Par5_sub" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
    <lrml:ConstitutiveStatement key="statements162Formula10">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:sexualOrientation :z),

	(rioOnto:exceptionCha4Sec1Art30Par5_sub :z)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1766">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1767">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:sexualOrientation" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:exceptionCha4Sec1Art30Par5_sub" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements163">
    <lrml:PrescriptiveStatement key="statements163Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :er :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:request' :er prOnto:supAuth(prOnto:MSof(:y)) :eas) & (prOnto:assistFor' :eas :x prOnto:supAuth(prOnto:MSof(:y)) :et),

	(rioOnto:RexistAtTime :eas :t2) & (rioOnto:>= :t2 :t1)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":er">er</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1768">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1769">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1770">
              <ruleml:Rel iri="prOnto:request" />
              <ruleml:Var keyref=":er" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:supAuth" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:MSof" />
                  <ruleml:Var keyref=":y" />
                </ruleml:Expr>
              </ruleml:Expr>
              <ruleml:Var key=":eas">eas</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1771">
              <ruleml:Rel iri="prOnto:assistFor" />
              <ruleml:Var keyref=":eas" />
              <ruleml:Var keyref=":x" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:supAuth" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:MSof" />
                  <ruleml:Var keyref=":y" />
                </ruleml:Expr>
              </ruleml:Expr>
              <ruleml:Var key=":et">et</ruleml:Var>
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var keyref=":eas" />
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements163Formula2">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :er :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:request' :er prOnto:supAuth(prOnto:MSof(:y)) :eas) & (prOnto:assistFor' :eas :y prOnto:supAuth(prOnto:MSof(:y)) :et),

	(rioOnto:RexistAtTime :eas :t2) & (rioOnto:>= :t2 :t1)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":er">er</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1772">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1773">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1774">
              <ruleml:Rel iri="prOnto:request" />
              <ruleml:Var keyref=":er" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:supAuth" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:MSof" />
                  <ruleml:Var keyref=":y" />
                </ruleml:Expr>
              </ruleml:Expr>
              <ruleml:Var key=":eas">eas</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1775">
              <ruleml:Rel iri="prOnto:assistFor" />
              <ruleml:Var keyref=":eas" />
              <ruleml:Var keyref=":y" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:supAuth" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:MSof" />
                  <ruleml:Var keyref=":y" />
                </ruleml:Expr>
              </ruleml:Expr>
              <ruleml:Var key=":et">et</ruleml:Var>
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var keyref=":eas" />
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements163Formula3">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :er :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:request' :er prOnto:supAuth(prOnto:MSof(:y)) :eas) & (prOnto:isRepresentedBy :y :k)
	 & (prOnto:Representative :k) & (prOnto:assistFor' :eas :k prOnto:supAuth(prOnto:MSof(:y)) :et),

	(rioOnto:RexistAtTime :eas :t2) & (rioOnto:>= :t2 :t1)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":er">er</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1776">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1777">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1778">
              <ruleml:Rel iri="prOnto:request" />
              <ruleml:Var keyref=":er" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:supAuth" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:MSof" />
                  <ruleml:Var keyref=":y" />
                </ruleml:Expr>
              </ruleml:Expr>
              <ruleml:Var key=":eas">eas</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isRepresentedBy" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Representative" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1779">
              <ruleml:Rel iri="prOnto:assistFor" />
              <ruleml:Var keyref=":eas" />
              <ruleml:Var keyref=":k" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:supAuth" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:MSof" />
                  <ruleml:Var keyref=":y" />
                </ruleml:Expr>
              </ruleml:Expr>
              <ruleml:Var key=":et">et</ruleml:Var>
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var keyref=":eas" />
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements163Formula4">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :er :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:request' :er prOnto:supAuth(prOnto:MSof(:y)) :eas) & (prOnto:isRepresentedBy :y :k)
	 & (prOnto:Representative :k) & (prOnto:assistFor' :eas :k prOnto:supAuth(prOnto:MSof(:y)) :et),

	(rioOnto:RexistAtTime :eas :t2) & (rioOnto:>= :t2 :t1)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":er">er</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1780">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1781">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1782">
              <ruleml:Rel iri="prOnto:request" />
              <ruleml:Var keyref=":er" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:supAuth" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:MSof" />
                  <ruleml:Var keyref=":y" />
                </ruleml:Expr>
              </ruleml:Expr>
              <ruleml:Var key=":eas">eas</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isRepresentedBy" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Representative" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1783">
              <ruleml:Rel iri="prOnto:assistFor" />
              <ruleml:Var keyref=":eas" />
              <ruleml:Var keyref=":k" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:supAuth" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:MSof" />
                  <ruleml:Var keyref=":y" />
                </ruleml:Expr>
              </ruleml:Expr>
              <ruleml:Var key=":et">et</ruleml:Var>
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var keyref=":eas" />
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements164">
    <lrml:PrescriptiveStatement key="statements164Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z),

	(rioOnto:RexistAtTime :a2 :t1) & (rioOnto:and :a2 :ei :eaw) & (prOnto:measure :em) & (prOnto:implement' :ei :y :em)
	 & (prOnto:appropriate :em) & (prOnto:adequateWith' :eaw :ei :er) & (prOnto:riskFor' :er :erf)
	 & (prOnto:rightsAndFreedomsOf' :erf :w)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1784">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1785">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":a2">a2</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:and" />
                <ruleml:Var keyref=":a2" />
                <ruleml:Var key=":ei">ei</ruleml:Var>
                <ruleml:Var key=":eaw">eaw</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:measure" />
                <ruleml:Var key=":em">em</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1786">
                <ruleml:Rel iri="prOnto:implement" />
                <ruleml:Var keyref=":ei" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":em" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:appropriate" />
                <ruleml:Var keyref=":em" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1787">
                <ruleml:Rel iri="prOnto:adequateWith" />
                <ruleml:Var keyref=":eaw" />
                <ruleml:Var keyref=":ei" />
                <ruleml:Var key=":er">er</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1788">
                <ruleml:Rel iri="prOnto:riskFor" />
                <ruleml:Var keyref=":er" />
                <ruleml:Var key=":erf">erf</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1789">
                <ruleml:Rel iri="prOnto:rightsAndFreedomsOf" />
                <ruleml:Var keyref=":erf" />
                <ruleml:Var keyref=":w" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements165">
    <lrml:ConstitutiveStatement key="statements165Formula1">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :eor :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (rioOnto:or :eor :ea1 :ea2) & (prOnto:adhereTo' :ea1 :x :cc)
	 & (prOnto:codeOfConduct :cc) & (prOnto:adhereTo' :ea2 :x :acm) & (prOnto:approvedCertificationMechanism :acm),

	(rioOnto:RexistAtTime :a2 :t1) & (rioOnto:and :a2 :ei :eaw) & (prOnto:measure :em) & (prOnto:implement' :ei :y :em)
	 & (prOnto:appropriate :em) & (prOnto:adequateWith' :eaw :ei :er) & (prOnto:riskFor' :er :erf)
	 & (prOnto:rightsAndFreedomsOf' :erf :w)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":eor">eor</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1790">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1791">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eor" />
              <ruleml:Var key=":ea1">ea1</ruleml:Var>
              <ruleml:Var key=":ea2">ea2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1792">
              <ruleml:Rel iri="prOnto:adhereTo" />
              <ruleml:Var keyref=":ea1" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var key=":cc">cc</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:codeOfConduct" />
              <ruleml:Var keyref=":cc" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1793">
              <ruleml:Rel iri="prOnto:adhereTo" />
              <ruleml:Var keyref=":ea2" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var key=":acm">acm</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:approvedCertificationMechanism" />
              <ruleml:Var keyref=":acm" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a2">a2</ruleml:Var>
              <ruleml:Var keyref=":t1" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a2" />
              <ruleml:Var key=":ei">ei</ruleml:Var>
              <ruleml:Var key=":eaw">eaw</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:measure" />
              <ruleml:Var key=":em">em</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1794">
              <ruleml:Rel iri="prOnto:implement" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:appropriate" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1795">
              <ruleml:Rel iri="prOnto:adequateWith" />
              <ruleml:Var keyref=":eaw" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var key=":er">er</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1796">
              <ruleml:Rel iri="prOnto:riskFor" />
              <ruleml:Var keyref=":er" />
              <ruleml:Var key=":erf">erf</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1797">
              <ruleml:Rel iri="prOnto:rightsAndFreedomsOf" />
              <ruleml:Var keyref=":erf" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements166">
    <lrml:PrescriptiveStatement key="statements166Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :ea :en1 :en2 :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:access' :ea :p :z) & (prOnto:naturalPerson :p)
	 & (prOnto:execute' :ee :p :et) & (prOnto:relatedTo :et :z) & (rioOnto:not :en1 :eau1)
	 & (prOnto:authorizedBy' :eau1 :et EuropeanUnion) & (rioOnto:not :en2 :eau2) & (prOnto:authorizedBy' :eau2 :et prOnto:MSof(:y)),

	(rioOnto:RexistAtTime :ei :t1) & (rioOnto:imply :ei :ee :eau3) & (prOnto:authorizedBy' :eau3 :et :y)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":ea">ea</ruleml:Var>
              <ruleml:Var key=":en1">en1</ruleml:Var>
              <ruleml:Var key=":en2">en2</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1798">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1799">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1800">
              <ruleml:Rel iri="prOnto:access" />
              <ruleml:Var keyref=":ea" />
              <ruleml:Var key=":p">p</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:naturalPerson" />
              <ruleml:Var keyref=":p" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1801">
              <ruleml:Rel iri="prOnto:execute" />
              <ruleml:Var keyref=":ee" />
              <ruleml:Var keyref=":p" />
              <ruleml:Var key=":et">et</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:relatedTo" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en1" />
              <ruleml:Var key=":eau1">eau1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1802">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":eau1" />
              <ruleml:Var keyref=":et" />
              <ruleml:Ind>EuropeanUnion</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en2" />
              <ruleml:Var key=":eau2">eau2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1803">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":eau2" />
              <ruleml:Var keyref=":et" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:MSof" />
                <ruleml:Var keyref=":y" />
              </ruleml:Expr>
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":ei">ei</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:imply" />
                <ruleml:Var keyref=":ei" />
                <ruleml:Var keyref=":ee" />
                <ruleml:Var key=":eau3">eau3</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1804">
                <ruleml:Rel iri="prOnto:authorizedBy" />
                <ruleml:Var keyref=":eau3" />
                <ruleml:Var keyref=":et" />
                <ruleml:Var keyref=":y" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements167">
    <lrml:PrescriptiveStatement key="statements167Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a :t1) & (rioOnto:and :a1 :eb :el) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:dataBreach :eb :z) & (prOnto:likely' :el :eca)
	 & (rioOnto:cause' :eca :eb :er) & (prOnto:riskFor' :er :erf) & (prOnto:rightsAndFreedomsOf' :erf :p)
	 & (prOnto:naturalPerson :p),

	(rioOnto:RexistAtTime :en :t2) & (rioOnto:>= :t2 :t1) & (prOnto:Communicate' :en :y prOnto:supAuth(prOnto:MSof(:y)) prOnto:allInfoAbout(:eb)) & (prOnto:nonDelayed :en)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":eb">eb</ruleml:Var>
              <ruleml:Var key=":el">el</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:dataBreach" />
              <ruleml:Var keyref=":eb" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1805">
              <ruleml:Rel iri="prOnto:likely" />
              <ruleml:Var keyref=":el" />
              <ruleml:Var key=":eca">eca</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1806">
              <ruleml:Rel iri="rioOnto:cause" />
              <ruleml:Var keyref=":eca" />
              <ruleml:Var keyref=":eb" />
              <ruleml:Var key=":er">er</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1807">
              <ruleml:Rel iri="prOnto:riskFor" />
              <ruleml:Var keyref=":er" />
              <ruleml:Var key=":erf">erf</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1808">
              <ruleml:Rel iri="prOnto:rightsAndFreedomsOf" />
              <ruleml:Var keyref=":erf" />
              <ruleml:Var key=":p">p</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:naturalPerson" />
              <ruleml:Var keyref=":p" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":en">en</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1809">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en" />
                <ruleml:Var keyref=":y" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:supAuth" />
                  <ruleml:Expr>
                    <ruleml:Fun iri="prOnto:MSof" />
                    <ruleml:Var keyref=":y" />
                  </ruleml:Expr>
                </ruleml:Expr>
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:allInfoAbout" />
                  <ruleml:Var keyref=":eb" />
                </ruleml:Expr>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:nonDelayed" />
                <ruleml:Var keyref=":en" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements167Formula2">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a :t1) & (rioOnto:and :a :eb :el :ea) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:dataBreach :eb :z) & (prOnto:likely' :el :eca)
	 & (rioOnto:cause' :eca :eb :er) & (prOnto:riskFor' :er :erf) & (prOnto:rightsAndFreedomsOf' :erf :p)
	 & (prOnto:naturalPerson :p) & (prOnto:awareOf' :ea :y :eb) & (prOnto:feasible :en)
	 & (prOnto:Communicate' :en :y prOnto:supAuth(prOnto:MSof(:y)) prOnto:allInfoAbout(:eb)) & (rioOnto:atTime :en :t2) & (rioOnto:<= :t2 rioOnto:+(:t1, 72h)),

	(rioOnto:RexistAtTime :en :t2)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a">a</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a" />
              <ruleml:Var key=":eb">eb</ruleml:Var>
              <ruleml:Var key=":el">el</ruleml:Var>
              <ruleml:Var key=":ea">ea</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:dataBreach" />
              <ruleml:Var keyref=":eb" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1810">
              <ruleml:Rel iri="prOnto:likely" />
              <ruleml:Var keyref=":el" />
              <ruleml:Var key=":eca">eca</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1811">
              <ruleml:Rel iri="rioOnto:cause" />
              <ruleml:Var keyref=":eca" />
              <ruleml:Var keyref=":eb" />
              <ruleml:Var key=":er">er</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1812">
              <ruleml:Rel iri="prOnto:riskFor" />
              <ruleml:Var keyref=":er" />
              <ruleml:Var key=":erf">erf</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1813">
              <ruleml:Rel iri="prOnto:rightsAndFreedomsOf" />
              <ruleml:Var keyref=":erf" />
              <ruleml:Var key=":p">p</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:naturalPerson" />
              <ruleml:Var keyref=":p" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1814">
              <ruleml:Rel iri="prOnto:awareOf" />
              <ruleml:Var keyref=":ea" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":eb" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:feasible" />
              <ruleml:Var key=":en">en</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1815">
              <ruleml:Rel iri="prOnto:Communicate" />
              <ruleml:Var keyref=":en" />
              <ruleml:Var keyref=":y" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:supAuth" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:MSof" />
                  <ruleml:Var keyref=":y" />
                </ruleml:Expr>
              </ruleml:Expr>
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:allInfoAbout" />
                <ruleml:Var keyref=":eb" />
              </ruleml:Expr>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:atTime" />
              <ruleml:Var keyref=":en" />
              <ruleml:Var key=":t2">t2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:&lt;=" />
              <ruleml:Var keyref=":t2" />
              <ruleml:Expr>
                <ruleml:Fun iri="rioOnto:+" />
                <ruleml:Var keyref=":t1" />
                <ruleml:Ind>72h</ruleml:Ind>
              </ruleml:Expr>
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var keyref=":en" />
              <ruleml:Var keyref=":t2" />
            </ruleml:Atom>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements167Formula3">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a :t1) & (rioOnto:and :a :eb :ea :en) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:dataBreach :eb :z) & (prOnto:awareOf' :ea :y :eb)
	 & (prOnto:Communicate' :en :y prOnto:supAuth(prOnto:MSof(:y)) prOnto:allInfoAbout(:eb)) & (rioOnto:atTime :en :t2) & (rioOnto:> :t2 rioOnto:+(:t1, 72h)),

	(rioOnto:RexistAtTime :en1 :t2) & (prOnto:Communicate' :en1 :y prOnto:supAuth(prOnto:MSof(:y)) :l) & (prOnto:letterReasonFor :l :en)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a">a</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a" />
              <ruleml:Var key=":eb">eb</ruleml:Var>
              <ruleml:Var key=":ea">ea</ruleml:Var>
              <ruleml:Var key=":en">en</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:dataBreach" />
              <ruleml:Var keyref=":eb" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1816">
              <ruleml:Rel iri="prOnto:awareOf" />
              <ruleml:Var keyref=":ea" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":eb" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1817">
              <ruleml:Rel iri="prOnto:Communicate" />
              <ruleml:Var keyref=":en" />
              <ruleml:Var keyref=":y" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:supAuth" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:MSof" />
                  <ruleml:Var keyref=":y" />
                </ruleml:Expr>
              </ruleml:Expr>
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:allInfoAbout" />
                <ruleml:Var keyref=":eb" />
              </ruleml:Expr>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:atTime" />
              <ruleml:Var keyref=":en" />
              <ruleml:Var key=":t2">t2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:&gt;" />
              <ruleml:Var keyref=":t2" />
              <ruleml:Expr>
                <ruleml:Fun iri="rioOnto:+" />
                <ruleml:Var keyref=":t1" />
                <ruleml:Ind>72h</ruleml:Ind>
              </ruleml:Expr>
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":en1">en1</ruleml:Var>
                <ruleml:Var keyref=":t2" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1818">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en1" />
                <ruleml:Var keyref=":y" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:supAuth" />
                  <ruleml:Expr>
                    <ruleml:Fun iri="prOnto:MSof" />
                    <ruleml:Var keyref=":y" />
                  </ruleml:Expr>
                </ruleml:Expr>
                <ruleml:Var key=":l">l</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:letterReasonFor" />
                <ruleml:Var keyref=":l" />
                <ruleml:Var keyref=":en" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements168">
    <lrml:PrescriptiveStatement key="statements168Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :ea :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:awareOf' :ea :z :eb) & (prOnto:dataBreach :eb :z),

	(rioOnto:RexistAtTime :en :t2) & (rioOnto:>= :t2 :t1) & (prOnto:Communicate' :en :x :y prOnto:allInfoAbout(:eb)) & (prOnto:nonDelayed :en)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":ea">ea</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1819">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1820">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1821">
              <ruleml:Rel iri="prOnto:awareOf" />
              <ruleml:Var keyref=":ea" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":eb" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:dataBreach" />
              <ruleml:Var key=":eb">eb</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":en">en</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1822">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en" />
                <ruleml:Var keyref=":x" />
                <ruleml:Var keyref=":y" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:allInfoAbout" />
                  <ruleml:Var keyref=":eb" />
                </ruleml:Expr>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:nonDelayed" />
                <ruleml:Var keyref=":en" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements169">
    <lrml:PrescriptiveStatement key="statements169Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a :t1) & (rioOnto:and :a :eb :en) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:dataBreach :eb :z) & (prOnto:Communicate' :en :y prOnto:supAuth(prOnto:MSof(:y)) prOnto:allInfoAbout(:eb)),

	(rioOnto:RexistAtTime :ed :t1) & (prOnto:describe' :ed :en :x) & (prOnto:natureOf :x :eb)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a">a</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a" />
              <ruleml:Var key=":eb">eb</ruleml:Var>
              <ruleml:Var key=":en">en</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:dataBreach" />
              <ruleml:Var keyref=":eb" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1823">
              <ruleml:Rel iri="prOnto:Communicate" />
              <ruleml:Var keyref=":en" />
              <ruleml:Var keyref=":y" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:supAuth" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:MSof" />
                  <ruleml:Var keyref=":y" />
                </ruleml:Expr>
              </ruleml:Expr>
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:allInfoAbout" />
                <ruleml:Var keyref=":eb" />
              </ruleml:Expr>
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":ed">ed</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1824">
                <ruleml:Rel iri="prOnto:describe" />
                <ruleml:Var keyref=":ed" />
                <ruleml:Var keyref=":en" />
                <ruleml:Var key=":x">x</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:natureOf" />
                <ruleml:Var keyref=":x" />
                <ruleml:Var keyref=":eb" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements169Formula2">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a :t1) & (rioOnto:and :a :eb :en :ep) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:dataBreach :eb :z) & (prOnto:Communicate' :en :y prOnto:supAuth(prOnto:MSof(:y)) prOnto:allInfoAbout(:eb))
	 & (rioOnto:possible' :ep :ed) & (prOnto:describe' :ed :en :x) & (prOnto:categoryOf :x :w),

	(rioOnto:RexistAtTime :ed :t1)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a">a</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a" />
              <ruleml:Var key=":eb">eb</ruleml:Var>
              <ruleml:Var key=":en">en</ruleml:Var>
              <ruleml:Var key=":ep">ep</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:dataBreach" />
              <ruleml:Var keyref=":eb" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1825">
              <ruleml:Rel iri="prOnto:Communicate" />
              <ruleml:Var keyref=":en" />
              <ruleml:Var keyref=":y" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:supAuth" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:MSof" />
                  <ruleml:Var keyref=":y" />
                </ruleml:Expr>
              </ruleml:Expr>
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:allInfoAbout" />
                <ruleml:Var keyref=":eb" />
              </ruleml:Expr>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1826">
              <ruleml:Rel iri="rioOnto:possible" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var key=":ed">ed</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1827">
              <ruleml:Rel iri="prOnto:describe" />
              <ruleml:Var keyref=":ed" />
              <ruleml:Var keyref=":en" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:categoryOf" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var keyref=":ed" />
              <ruleml:Var keyref=":t1" />
            </ruleml:Atom>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements169Formula3">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a :t1) & (rioOnto:and :a :eb :en :ep) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:dataBreach :eb :z) & (prOnto:Communicate' :en :y prOnto:supAuth(prOnto:MSof(:y)) prOnto:allInfoAbout(:eb))
	 & (rioOnto:possible' :ep :ed) & (prOnto:describe' :ed :en prOnto:numberOfDSConcerned(:eb)),

	(rioOnto:RexistAtTime :ed :t1)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a">a</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a" />
              <ruleml:Var key=":eb">eb</ruleml:Var>
              <ruleml:Var key=":en">en</ruleml:Var>
              <ruleml:Var key=":ep">ep</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:dataBreach" />
              <ruleml:Var keyref=":eb" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1828">
              <ruleml:Rel iri="prOnto:Communicate" />
              <ruleml:Var keyref=":en" />
              <ruleml:Var keyref=":y" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:supAuth" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:MSof" />
                  <ruleml:Var keyref=":y" />
                </ruleml:Expr>
              </ruleml:Expr>
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:allInfoAbout" />
                <ruleml:Var keyref=":eb" />
              </ruleml:Expr>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1829">
              <ruleml:Rel iri="rioOnto:possible" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var key=":ed">ed</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1830">
              <ruleml:Rel iri="prOnto:describe" />
              <ruleml:Var keyref=":ed" />
              <ruleml:Var keyref=":en" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:numberOfDSConcerned" />
                <ruleml:Var keyref=":eb" />
              </ruleml:Expr>
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var keyref=":ed" />
              <ruleml:Var keyref=":t1" />
            </ruleml:Atom>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements169Formula4">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a :t1) & (rioOnto:and :a :eo :eb :en :ep) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:dataBreach :eb :z) & (prOnto:Communicate' :en :y prOnto:supAuth(prOnto:MSof(:y)) prOnto:allInfoAbout(:eb))
	 & (prOnto:PersonalDataRecord :p) & (prOnto:storedIn :z :p) & (rioOnto:possible' :ep :ed)
	 & (prOnto:describe' :ed :en :x) & (prOnto:categoryOf :x :p),

	(rioOnto:RexistAtTime :ed :t1)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a">a</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a" />
              <ruleml:Var key=":eo">eo</ruleml:Var>
              <ruleml:Var key=":eb">eb</ruleml:Var>
              <ruleml:Var key=":en">en</ruleml:Var>
              <ruleml:Var key=":ep">ep</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:dataBreach" />
              <ruleml:Var keyref=":eb" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1831">
              <ruleml:Rel iri="prOnto:Communicate" />
              <ruleml:Var keyref=":en" />
              <ruleml:Var keyref=":y" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:supAuth" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:MSof" />
                  <ruleml:Var keyref=":y" />
                </ruleml:Expr>
              </ruleml:Expr>
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:allInfoAbout" />
                <ruleml:Var keyref=":eb" />
              </ruleml:Expr>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalDataRecord" />
              <ruleml:Var key=":p">p</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:storedIn" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":p" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1832">
              <ruleml:Rel iri="rioOnto:possible" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var key=":ed">ed</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1833">
              <ruleml:Rel iri="prOnto:describe" />
              <ruleml:Var keyref=":ed" />
              <ruleml:Var keyref=":en" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:categoryOf" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":p" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var keyref=":ed" />
              <ruleml:Var keyref=":t1" />
            </ruleml:Atom>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements169Formula5">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a :t1) & (rioOnto:and :a :eb :en :ep) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:dataBreach :eb :z) & (prOnto:Communicate' :en :y prOnto:supAuth(prOnto:MSof(:y)) prOnto:allInfoAbout(:eb))
	 & (rioOnto:possible' :ep :ed) & (prOnto:describe' :ed :en prOnto:numberOfPDRConcerned(:eb)),

	(rioOnto:RexistAtTime :ed :t1)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a">a</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a" />
              <ruleml:Var key=":eb">eb</ruleml:Var>
              <ruleml:Var key=":en">en</ruleml:Var>
              <ruleml:Var key=":ep">ep</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:dataBreach" />
              <ruleml:Var keyref=":eb" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1834">
              <ruleml:Rel iri="prOnto:Communicate" />
              <ruleml:Var keyref=":en" />
              <ruleml:Var keyref=":y" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:supAuth" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:MSof" />
                  <ruleml:Var keyref=":y" />
                </ruleml:Expr>
              </ruleml:Expr>
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:allInfoAbout" />
                <ruleml:Var keyref=":eb" />
              </ruleml:Expr>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1835">
              <ruleml:Rel iri="rioOnto:possible" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var key=":ed">ed</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1836">
              <ruleml:Rel iri="prOnto:describe" />
              <ruleml:Var keyref=":ed" />
              <ruleml:Var keyref=":en" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:numberOfPDRConcerned" />
                <ruleml:Var keyref=":eb" />
              </ruleml:Expr>
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var keyref=":ed" />
              <ruleml:Var keyref=":t1" />
            </ruleml:Atom>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements170">
    <lrml:PrescriptiveStatement key="statements170Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a :t1) & (rioOnto:and :a :eb :en) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:dataBreach :eb :z) & (prOnto:Communicate' :en :y prOnto:supAuth(prOnto:MSof(:y)) prOnto:allInfoAbout(:eb)),

	(rioOnto:RexistAtTime :ec :t1) & (prOnto:contain' :ec :en prOnto:contactDetails(:x)) & (prOnto:dpoOrCP :x :eb)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a">a</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a" />
              <ruleml:Var key=":eb">eb</ruleml:Var>
              <ruleml:Var key=":en">en</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:dataBreach" />
              <ruleml:Var keyref=":eb" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1837">
              <ruleml:Rel iri="prOnto:Communicate" />
              <ruleml:Var keyref=":en" />
              <ruleml:Var keyref=":y" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:supAuth" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:MSof" />
                  <ruleml:Var keyref=":y" />
                </ruleml:Expr>
              </ruleml:Expr>
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:allInfoAbout" />
                <ruleml:Var keyref=":eb" />
              </ruleml:Expr>
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var keyref=":ec" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1838">
                <ruleml:Rel iri="prOnto:contain" />
                <ruleml:Var keyref=":ec" />
                <ruleml:Var keyref=":en" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:contactDetails" />
                  <ruleml:Var keyref=":x" />
                </ruleml:Expr>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:dpoOrCP" />
                <ruleml:Var key=":x">x</ruleml:Var>
                <ruleml:Var keyref=":eb" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:ConstitutiveStatement key="statements170Formula2">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a :a) & (rioOnto:and :a :eb :ed) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:dataBreach :eb :z) & (prOnto:designates' :ed :y :x)
	 & (prOnto:DPO :x),

	(prOnto:dpoOrCP :x :eb)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a">a</ruleml:Var>
              <ruleml:Var key=":a">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a" />
              <ruleml:Var key=":eb">eb</ruleml:Var>
              <ruleml:Var key=":ed">ed</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:dataBreach" />
              <ruleml:Var keyref=":eb" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1839">
              <ruleml:Rel iri="prOnto:designates" />
              <ruleml:Var keyref=":ed" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DPO" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:Atom>
            <ruleml:Rel iri="prOnto:dpoOrCP" />
            <ruleml:Var keyref=":x" />
            <ruleml:Var keyref=":eb" />
          </ruleml:Atom>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
    <lrml:ConstitutiveStatement key="statements170Formula3">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a :t1) & (rioOnto:and :a :eb :ed) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:dataBreach :eb :z) & (prOnto:contactPointFor :x :eb),

	(prOnto:dpoOrCP :x :eb)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a">a</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a" />
              <ruleml:Var key=":eb">eb</ruleml:Var>
              <ruleml:Var key=":ed">ed</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:dataBreach" />
              <ruleml:Var keyref=":eb" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:contactPointFor" />
              <ruleml:Var key=":x">x</ruleml:Var>
              <ruleml:Var keyref=":eb" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:Atom>
            <ruleml:Rel iri="prOnto:dpoOrCP" />
            <ruleml:Var keyref=":x" />
            <ruleml:Var keyref=":eb" />
          </ruleml:Atom>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements171">
    <lrml:PrescriptiveStatement key="statements171Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a :t1) & (rioOnto:and :a :eb :en :el) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:dataBreach :eb :z) & (prOnto:Communicate' :en :y prOnto:supAuth(prOnto:MSof(:y)) prOnto:allInfoAbout(:eb))
	 & (prOnto:likely' :el :ei) & (rioOnto:imply :ei :eb :e),

	(rioOnto:RexistAtTime :ed :t1) & (prOnto:describe' :ed :en :e)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a">a</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a" />
              <ruleml:Var key=":eb">eb</ruleml:Var>
              <ruleml:Var key=":en">en</ruleml:Var>
              <ruleml:Var key=":el">el</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:dataBreach" />
              <ruleml:Var keyref=":eb" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1840">
              <ruleml:Rel iri="prOnto:Communicate" />
              <ruleml:Var keyref=":en" />
              <ruleml:Var keyref=":y" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:supAuth" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:MSof" />
                  <ruleml:Var keyref=":y" />
                </ruleml:Expr>
              </ruleml:Expr>
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:allInfoAbout" />
                <ruleml:Var keyref=":eb" />
              </ruleml:Expr>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1841">
              <ruleml:Rel iri="prOnto:likely" />
              <ruleml:Var keyref=":el" />
              <ruleml:Var key=":ei">ei</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:imply" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var keyref=":eb" />
              <ruleml:Var key=":e">e</ruleml:Var>
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":ed">ed</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1842">
                <ruleml:Rel iri="prOnto:describe" />
                <ruleml:Var keyref=":ed" />
                <ruleml:Var keyref=":en" />
                <ruleml:Var keyref=":e" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements172">
    <lrml:PrescriptiveStatement key="statements172Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a :t1) & (rioOnto:and :a :eb :en) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:dataBreach :eb :z) & (prOnto:Communicate' :en :y prOnto:supAuth(prOnto:MSof(:y)) prOnto:allInfoAbout(:eb)),

	(rioOnto:RexistAtTime :eo :t1) & (rioOnto:or :eo :e1 :e2) & (prOnto:describe' :e1 :en :em1) & (prOnto:measure :em1)
	 & (prOnto:takenToAddress :em1 :eb) & (prOnto:describe' :e2 :en :em2) & (prOnto:measure :em2)
	 & (prOnto:proposedToAddress :em2 :eb)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a">a</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a" />
              <ruleml:Var key=":eb">eb</ruleml:Var>
              <ruleml:Var key=":en">en</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:dataBreach" />
              <ruleml:Var keyref=":eb" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1843">
              <ruleml:Rel iri="prOnto:Communicate" />
              <ruleml:Var keyref=":en" />
              <ruleml:Var keyref=":y" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:supAuth" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:MSof" />
                  <ruleml:Var keyref=":y" />
                </ruleml:Expr>
              </ruleml:Expr>
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:allInfoAbout" />
                <ruleml:Var keyref=":eb" />
              </ruleml:Expr>
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":eo">eo</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:or" />
                <ruleml:Var keyref=":eo" />
                <ruleml:Var key=":e1">e1</ruleml:Var>
                <ruleml:Var key=":e2">e2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1844">
                <ruleml:Rel iri="prOnto:describe" />
                <ruleml:Var keyref=":e1" />
                <ruleml:Var keyref=":en" />
                <ruleml:Var key=":em1">em1</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:measure" />
                <ruleml:Var keyref=":em1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:takenToAddress" />
                <ruleml:Var keyref=":em1" />
                <ruleml:Var keyref=":eb" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1845">
                <ruleml:Rel iri="prOnto:describe" />
                <ruleml:Var keyref=":e2" />
                <ruleml:Var keyref=":en" />
                <ruleml:Var key=":em2">em2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:measure" />
                <ruleml:Var keyref=":em2" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:proposedToAddress" />
                <ruleml:Var keyref=":em2" />
                <ruleml:Var keyref=":eb" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements172Formula2">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a :t1) & (rioOnto:and :a :eb :en) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:dataBreach :eb :z) & (prOnto:Communicate' :en :y prOnto:supAuth(prOnto:MSof(:y)) prOnto:allInfoAbout(:eb))
	 & (prOnto:appropriate :ed) & (prOnto:describe' :ed :en :em) & (prOnto:measure :em)
	 & (prOnto:mitigate :em :ef) & (rioOnto:cause :eb :ef),

	(rioOnto:RexistAtTime :ed :t1)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a">a</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a" />
              <ruleml:Var key=":eb">eb</ruleml:Var>
              <ruleml:Var key=":en">en</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:dataBreach" />
              <ruleml:Var keyref=":eb" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1846">
              <ruleml:Rel iri="prOnto:Communicate" />
              <ruleml:Var keyref=":en" />
              <ruleml:Var keyref=":y" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:supAuth" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:MSof" />
                  <ruleml:Var keyref=":y" />
                </ruleml:Expr>
              </ruleml:Expr>
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:allInfoAbout" />
                <ruleml:Var keyref=":eb" />
              </ruleml:Expr>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:appropriate" />
              <ruleml:Var key=":ed">ed</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1847">
              <ruleml:Rel iri="prOnto:describe" />
              <ruleml:Var keyref=":ed" />
              <ruleml:Var keyref=":en" />
              <ruleml:Var key=":em">em</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:measure" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:mitigate" />
              <ruleml:Var keyref=":em" />
              <ruleml:Var key=":ef">ef</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:cause" />
              <ruleml:Var keyref=":eb" />
              <ruleml:Var keyref=":ef" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var keyref=":ed" />
              <ruleml:Var keyref=":t1" />
            </ruleml:Atom>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements173">
    <lrml:PrescriptiveStatement key="statements173Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :eb :ep1 :enp2) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:dataBreach :eb :z) & (rioOnto:possible' :ep1 :en1)
	 & (prOnto:Communicate' :en1 :y prOnto:supAuth(prOnto:MSof(:y)) :x1) & (rioOnto:partOf :x1 prOnto:allInfoAbout(:eb)) & (rioOnto:not :enp2 :ep2)
	 & (rioOnto:possible' :ep2 :en2) & (prOnto:Communicate' :en2 :y prOnto:supAuth(prOnto:MSof(:y)) :x2) & (rioOnto:partOf :x2 prOnto:allInfoAbout(:eb)),

	(rioOnto:RexistAtTime :en1 :t1) & (rioOnto:RexistAtTime :en2 :t2) & (rioOnto:> :t2 :t1) & (prOnto:nonDelayed :en2)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":eb">eb</ruleml:Var>
              <ruleml:Var key=":ep1">ep1</ruleml:Var>
              <ruleml:Var key=":enp2">enp2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:dataBreach" />
              <ruleml:Var keyref=":eb" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1848">
              <ruleml:Rel iri="rioOnto:possible" />
              <ruleml:Var keyref=":ep1" />
              <ruleml:Var key=":en1">en1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1849">
              <ruleml:Rel iri="prOnto:Communicate" />
              <ruleml:Var keyref=":en1" />
              <ruleml:Var keyref=":y" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:supAuth" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:MSof" />
                  <ruleml:Var keyref=":y" />
                </ruleml:Expr>
              </ruleml:Expr>
              <ruleml:Var key=":x1">x1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:partOf" />
              <ruleml:Var keyref=":x1" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:allInfoAbout" />
                <ruleml:Var keyref=":eb" />
              </ruleml:Expr>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":enp2" />
              <ruleml:Var key=":ep2">ep2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1850">
              <ruleml:Rel iri="rioOnto:possible" />
              <ruleml:Var keyref=":ep2" />
              <ruleml:Var key=":en2">en2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1851">
              <ruleml:Rel iri="prOnto:Communicate" />
              <ruleml:Var keyref=":en2" />
              <ruleml:Var keyref=":y" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:supAuth" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:MSof" />
                  <ruleml:Var keyref=":y" />
                </ruleml:Expr>
              </ruleml:Expr>
              <ruleml:Var key=":x2">x2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:partOf" />
              <ruleml:Var keyref=":x2" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:allInfoAbout" />
                <ruleml:Var keyref=":eb" />
              </ruleml:Expr>
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var keyref=":en1" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":en2">en2</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:nonDelayed" />
                <ruleml:Var keyref=":en2" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements174">
    <lrml:PrescriptiveStatement key="statements174Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :eb) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:dataBreach :eb :z),

	(rioOnto:RexistAtTime :a2 :t2) & (rioOnto:and :a2 :ew :em :ec) & (rioOnto:> :t2 :t1) & (prOnto:write' :ew :y :d)
	 & (prOnto:documentation :d) & (rioOnto:partOf prOnto:allInfoAbout(:eb) :d) & (rioOnto:partOf prOnto:allInfoAbout(:ef) :d)
	 & (rioOnto:cause :eb :ef) & (rioOnto:partOf prOnto:allInfoAbout(:em) :d) & (prOnto:takenToAddress :em :eb)
	 & (prOnto:measure :em) & (rioOnto:cause' :ec :d :ev) & (prOnto:verify' :ev prOnto:supAuth(prOnto:MSof(:y)) :eco)
	 & (prOnto:complyWith' :eco :y Article33)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":eb">eb</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:dataBreach" />
              <ruleml:Var keyref=":eb" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":a2">a2</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:and" />
                <ruleml:Var keyref=":a2" />
                <ruleml:Var key=":ew">ew</ruleml:Var>
                <ruleml:Var key=":em">em</ruleml:Var>
                <ruleml:Var keyref=":ec" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1852">
                <ruleml:Rel iri="prOnto:write" />
                <ruleml:Var keyref=":ew" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var key=":d">d</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:documentation" />
                <ruleml:Var keyref=":d" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:partOf" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:allInfoAbout" />
                  <ruleml:Var keyref=":eb" />
                </ruleml:Expr>
                <ruleml:Var keyref=":d" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:partOf" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:allInfoAbout" />
                  <ruleml:Var keyref=":ef" />
                </ruleml:Expr>
                <ruleml:Var keyref=":d" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:cause" />
                <ruleml:Var keyref=":eb" />
                <ruleml:Var key=":ef">ef</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:partOf" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:allInfoAbout" />
                  <ruleml:Var keyref=":em" />
                </ruleml:Expr>
                <ruleml:Var keyref=":d" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:takenToAddress" />
                <ruleml:Var keyref=":em" />
                <ruleml:Var keyref=":eb" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:measure" />
                <ruleml:Var keyref=":em" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1853">
                <ruleml:Rel iri="rioOnto:cause" />
                <ruleml:Var keyref=":ec" />
                <ruleml:Var keyref=":d" />
                <ruleml:Var key=":ev">ev</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1854">
                <ruleml:Rel iri="prOnto:verify" />
                <ruleml:Var keyref=":ev" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:supAuth" />
                  <ruleml:Expr>
                    <ruleml:Fun iri="prOnto:MSof" />
                    <ruleml:Var keyref=":y" />
                  </ruleml:Expr>
                </ruleml:Expr>
                <ruleml:Var key=":eco">eco</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1855">
                <ruleml:Rel iri="prOnto:complyWith" />
                <ruleml:Var keyref=":eco" />
                <ruleml:Var keyref=":y" />
                <ruleml:Ind>Article33</ruleml:Ind>
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements175">
    <lrml:PrescriptiveStatement key="statements175Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :eb :el) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:dataBreach :eb :z) & (prOnto:likely' :el :eca)
	 & (rioOnto:cause' :eca :eb :er) & (prOnto:riskFor' :er :erf) & (prOnto:rightsAndFreedomsOf' :erf :p)
	 & (prOnto:naturalPerson :p) & (rioOnto:exceptionCha4Sec2Art34Par3 :eb),

	(rioOnto:RexistAtTime :en :t2) & (rioOnto:> :t2 :t1) & (prOnto:Communicate' :en :y :w prOnto:allInfoAbout(:eb)) & (prOnto:nonDelayed :en)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":eb">eb</ruleml:Var>
              <ruleml:Var key=":el">el</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha4Sec2Art34Par3" />
                <ruleml:Var keyref=":eb" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:dataBreach" />
              <ruleml:Var keyref=":eb" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1856">
              <ruleml:Rel iri="prOnto:likely" />
              <ruleml:Var keyref=":el" />
              <ruleml:Var key=":eca">eca</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1857">
              <ruleml:Rel iri="rioOnto:cause" />
              <ruleml:Var keyref=":eca" />
              <ruleml:Var keyref=":eb" />
              <ruleml:Var key=":er">er</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1858">
              <ruleml:Rel iri="prOnto:riskFor" />
              <ruleml:Var keyref=":er" />
              <ruleml:Var key=":erf">erf</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1859">
              <ruleml:Rel iri="prOnto:rightsAndFreedomsOf" />
              <ruleml:Var keyref=":erf" />
              <ruleml:Var key=":p">p</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:naturalPerson" />
              <ruleml:Var keyref=":p" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":en">en</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1860">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:allInfoAbout" />
                  <ruleml:Var keyref=":eb" />
                </ruleml:Expr>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:nonDelayed" />
                <ruleml:Var keyref=":en" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements176">
    <lrml:PrescriptiveStatement key="statements176Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a :t1) & (rioOnto:and :a :eb :en) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:dataBreach :eb :z) & (prOnto:Communicate' :en :y :w prOnto:allInfoAbout(:eb)),

	(rioOnto:RexistAtTime :ec :t1) & (prOnto:contain' :ec :en prOnto:contactDetails(:x)) & (prOnto:dpoOrCP :x :eb)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a">a</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a" />
              <ruleml:Var key=":eb">eb</ruleml:Var>
              <ruleml:Var key=":en">en</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:dataBreach" />
              <ruleml:Var keyref=":eb" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1861">
              <ruleml:Rel iri="prOnto:Communicate" />
              <ruleml:Var keyref=":en" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":w" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:allInfoAbout" />
                <ruleml:Var keyref=":eb" />
              </ruleml:Expr>
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var keyref=":ec" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1862">
                <ruleml:Rel iri="prOnto:contain" />
                <ruleml:Var keyref=":ec" />
                <ruleml:Var keyref=":en" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:contactDetails" />
                  <ruleml:Var key=":x">x</ruleml:Var>
                </ruleml:Expr>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:dpoOrCP" />
                <ruleml:Var keyref=":x" />
                <ruleml:Var keyref=":eb" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements176Formula2">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a :t1) & (rioOnto:and :a :eb :en :el) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:dataBreach :eb :z) & (prOnto:Communicate' :en :y :w prOnto:allInfoAbout(:eb))
	 & (prOnto:likely' :el :ei) & (rioOnto:imply :ei :eb :e),

	(rioOnto:RexistAtTime :ed :t1) & (prOnto:describe' :ed :en :e)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a">a</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a" />
              <ruleml:Var key=":eb">eb</ruleml:Var>
              <ruleml:Var key=":en">en</ruleml:Var>
              <ruleml:Var key=":el">el</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:dataBreach" />
              <ruleml:Var keyref=":eb" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1863">
              <ruleml:Rel iri="prOnto:Communicate" />
              <ruleml:Var keyref=":en" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":w" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:allInfoAbout" />
                <ruleml:Var keyref=":eb" />
              </ruleml:Expr>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1864">
              <ruleml:Rel iri="prOnto:likely" />
              <ruleml:Var keyref=":el" />
              <ruleml:Var key=":ei">ei</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:imply" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var keyref=":eb" />
              <ruleml:Var key=":e">e</ruleml:Var>
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":ed">ed</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1865">
                <ruleml:Rel iri="prOnto:describe" />
                <ruleml:Var keyref=":ed" />
                <ruleml:Var keyref=":en" />
                <ruleml:Var keyref=":e" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements176Formula3">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a :t1) & (rioOnto:and :a :eb :en) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:dataBreach :eb :z) & (prOnto:Communicate' :en :y :w prOnto:allInfoAbout(:eb)),

	(rioOnto:RexistAtTime :eo :t1) & (rioOnto:or :eo :e1 :e2) & (prOnto:describe' :e1 :en :em1) & (prOnto:measure :em1)
	 & (prOnto:takenToAddress :em1 :eb) & (prOnto:describe' :e2 :en :em2) & (prOnto:measure :em2)
	 & (prOnto:proposedToAddress :em2 :eb)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a">a</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a" />
              <ruleml:Var key=":eb">eb</ruleml:Var>
              <ruleml:Var key=":en">en</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:dataBreach" />
              <ruleml:Var keyref=":eb" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1866">
              <ruleml:Rel iri="prOnto:Communicate" />
              <ruleml:Var keyref=":en" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":w" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:allInfoAbout" />
                <ruleml:Var keyref=":eb" />
              </ruleml:Expr>
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var keyref=":eo" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:or" />
                <ruleml:Var keyref=":eo" />
                <ruleml:Var key=":e1">e1</ruleml:Var>
                <ruleml:Var key=":e2">e2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1867">
                <ruleml:Rel iri="prOnto:describe" />
                <ruleml:Var keyref=":e1" />
                <ruleml:Var keyref=":en" />
                <ruleml:Var key=":em1">em1</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:measure" />
                <ruleml:Var keyref=":em1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:takenToAddress" />
                <ruleml:Var keyref=":em1" />
                <ruleml:Var keyref=":eb" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1868">
                <ruleml:Rel iri="prOnto:describe" />
                <ruleml:Var keyref=":e2" />
                <ruleml:Var keyref=":en" />
                <ruleml:Var key=":em2">em2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:measure" />
                <ruleml:Var keyref=":em2" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:proposedToAddress" />
                <ruleml:Var keyref=":em2" />
                <ruleml:Var keyref=":eb" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements176Formula4">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a :t1) & (rioOnto:and :a :eb :en) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:dataBreach :eb :z) & (prOnto:Communicate' :en :y :w prOnto:allInfoAbout(:eb))
	 & (prOnto:appropriate :ed) & (prOnto:describe' :ed :en :em) & (prOnto:measure :em)
	 & (prOnto:mitigate :em :ef) & (rioOnto:cause :eb :ef),

	(rioOnto:RexistAtTime :ed :t1)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a">a</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a" />
              <ruleml:Var key=":eb">eb</ruleml:Var>
              <ruleml:Var key=":en">en</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:dataBreach" />
              <ruleml:Var keyref=":eb" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1869">
              <ruleml:Rel iri="prOnto:Communicate" />
              <ruleml:Var keyref=":en" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":w" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:allInfoAbout" />
                <ruleml:Var keyref=":eb" />
              </ruleml:Expr>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:appropriate" />
              <ruleml:Var key=":ed">ed</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1870">
              <ruleml:Rel iri="prOnto:describe" />
              <ruleml:Var keyref=":ed" />
              <ruleml:Var keyref=":en" />
              <ruleml:Var key=":em">em</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:measure" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:mitigate" />
              <ruleml:Var keyref=":em" />
              <ruleml:Var key=":ef">ef</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:cause" />
              <ruleml:Var keyref=":eb" />
              <ruleml:Var keyref=":ef" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var keyref=":ed" />
              <ruleml:Var keyref=":t1" />
            </ruleml:Atom>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements177">
    <lrml:ConstitutiveStatement key="statements177Formula1">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a :t1) & (rioOnto:and :a :eb :ei :en) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:dataBreach :eb :z) & (prOnto:implement' :ei :y :em)
	 & (prOnto:measure :em) & (prOnto:nullify' :en :em :eb),

	(rioOnto:exceptionCha4Sec2Art34Par3 :eb)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a">a</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a" />
              <ruleml:Var key=":eb">eb</ruleml:Var>
              <ruleml:Var key=":ei">ei</ruleml:Var>
              <ruleml:Var key=":en">en</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:dataBreach" />
              <ruleml:Var keyref=":eb" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1871">
              <ruleml:Rel iri="prOnto:implement" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":em">em</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:measure" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1872">
              <ruleml:Rel iri="prOnto:nullify" />
              <ruleml:Var keyref=":en" />
              <ruleml:Var keyref=":em" />
              <ruleml:Var keyref=":eb" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:Atom>
            <ruleml:Rel iri="rioOnto:exceptionCha4Sec2Art34Par3" />
            <ruleml:Var keyref=":eb" />
          </ruleml:Atom>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements178">
    <lrml:ConstitutiveStatement key="statements178Formula1">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a :t1) & (rioOnto:and :a :eb :ei :el) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:dataBreach :eb :z) & (prOnto:implement' :ei :y :em)
	 & (prOnto:measure :em) & (prOnto:likely' :el :eca) & (rioOnto:cause' :eca :em :enr)
	 & (rioOnto:not :enr :er) & (prOnto:riskFor' :er :erf) & (prOnto:rightsAndFreedomsOf' :erf :p)
	 & (prOnto:naturalPerson :p),

	(rioOnto:exceptionCha4Sec2Art34Par3 :eb)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a">a</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a" />
              <ruleml:Var key=":eb">eb</ruleml:Var>
              <ruleml:Var key=":ei">ei</ruleml:Var>
              <ruleml:Var key=":el">el</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:dataBreach" />
              <ruleml:Var keyref=":eb" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1873">
              <ruleml:Rel iri="prOnto:implement" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":em">em</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:measure" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1874">
              <ruleml:Rel iri="prOnto:likely" />
              <ruleml:Var keyref=":el" />
              <ruleml:Var key=":eca">eca</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1875">
              <ruleml:Rel iri="rioOnto:cause" />
              <ruleml:Var keyref=":eca" />
              <ruleml:Var keyref=":em" />
              <ruleml:Var key=":enr">enr</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":enr" />
              <ruleml:Var key=":er">er</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1876">
              <ruleml:Rel iri="prOnto:riskFor" />
              <ruleml:Var keyref=":er" />
              <ruleml:Var key=":erf">erf</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1877">
              <ruleml:Rel iri="prOnto:rightsAndFreedomsOf" />
              <ruleml:Var keyref=":erf" />
              <ruleml:Var key=":p">p</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:naturalPerson" />
              <ruleml:Var keyref=":p" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:Atom>
            <ruleml:Rel iri="rioOnto:exceptionCha4Sec2Art34Par3" />
            <ruleml:Var keyref=":eb" />
          </ruleml:Atom>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements179">
    <lrml:ConstitutiveStatement key="statements179Formula1">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a :t1) & (rioOnto:and :a :eb :er) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:dataBreach :eb :z) & (prOnto:Communicate' :en :y :w prOnto:allInfoAbout(:eb))
	 & (prOnto:requireTooMuchEffort' :er :en),

	(rioOnto:exceptionCha4Sec2Art34Par3 :eb)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a">a</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a" />
              <ruleml:Var key=":eb">eb</ruleml:Var>
              <ruleml:Var key=":er">er</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:dataBreach" />
              <ruleml:Var keyref=":eb" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1878">
              <ruleml:Rel iri="prOnto:Communicate" />
              <ruleml:Var key=":en">en</ruleml:Var>
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":w" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:allInfoAbout" />
                <ruleml:Var keyref=":eb" />
              </ruleml:Expr>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1879">
              <ruleml:Rel iri="prOnto:requireTooMuchEffort" />
              <ruleml:Var keyref=":er" />
              <ruleml:Var keyref=":en" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:Atom>
            <ruleml:Rel iri="rioOnto:exceptionCha4Sec2Art34Par3" />
            <ruleml:Var keyref=":eb" />
          </ruleml:Atom>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
    <lrml:PrescriptiveStatement key="statements179Formula2">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :eb :er) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:dataBreach :eb :z) & (prOnto:Communicate' :en :y :w prOnto:allInfoAbout(:eb))
	 & (prOnto:requireTooMuchEffort' :er :en),

	(rioOnto:RexistAtTime :a2 :t2) & (rioOnto:and :a2 :epc :eca) & (rioOnto:>= :t2 :t1) & (prOnto:publicCommunication' :epc prOnto:allInfoAbout(:eb))
	 & (rioOnto:cause' :eca :epc :ea) & (prOnto:awareOf' :ea :w :eb)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":eb">eb</ruleml:Var>
              <ruleml:Var key=":er">er</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:dataBreach" />
              <ruleml:Var keyref=":eb" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1880">
              <ruleml:Rel iri="prOnto:Communicate" />
              <ruleml:Var key=":en">en</ruleml:Var>
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":w" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:allInfoAbout" />
                <ruleml:Var keyref=":eb" />
              </ruleml:Expr>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1881">
              <ruleml:Rel iri="prOnto:requireTooMuchEffort" />
              <ruleml:Var keyref=":er" />
              <ruleml:Var keyref=":en" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":a2">a2</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:and" />
                <ruleml:Var keyref=":a2" />
                <ruleml:Var key=":epc">epc</ruleml:Var>
                <ruleml:Var key=":eca">eca</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1882">
                <ruleml:Rel iri="prOnto:publicCommunication" />
                <ruleml:Var keyref=":epc" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:allInfoAbout" />
                  <ruleml:Var keyref=":eb" />
                </ruleml:Expr>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1883">
                <ruleml:Rel iri="rioOnto:cause" />
                <ruleml:Var keyref=":eca" />
                <ruleml:Var keyref=":epc" />
                <ruleml:Var key=":ea">ea</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1884">
                <ruleml:Rel iri="prOnto:awareOf" />
                <ruleml:Var keyref=":ea" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":eb" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements180">
    <lrml:PrescriptiveStatement key="statements180Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :el :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:likely' :el :eca) & (rioOnto:cause' :eca :ep :er)
	 & (prOnto:riskFor' :er :erf) & (prOnto:rightsAndFreedomsOf' :erf :w) & (rioOnto:exceptionCha4Sec3Art35Par10 :ep),

	(rioOnto:RexistAtTime :ev :t2) & (rioOnto:>= :t1 :t2) & (prOnto:verify' :ev :y :eco) & (prOnto:complyWith' :eco :ep GDPR)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":el">el</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1885">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1886">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1887">
              <ruleml:Rel iri="prOnto:likely" />
              <ruleml:Var keyref=":el" />
              <ruleml:Var key=":eca">eca</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1888">
              <ruleml:Rel iri="rioOnto:cause" />
              <ruleml:Var keyref=":eca" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var key=":er">er</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1889">
              <ruleml:Rel iri="prOnto:riskFor" />
              <ruleml:Var keyref=":er" />
              <ruleml:Var key=":erf">erf</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1890">
              <ruleml:Rel iri="prOnto:rightsAndFreedomsOf" />
              <ruleml:Var keyref=":erf" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha4Sec3Art35Par10" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":ev">ev</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t1" />
                <ruleml:Var keyref=":t2" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1891">
                <ruleml:Rel iri="prOnto:verify" />
                <ruleml:Var keyref=":ev" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var key=":eco">eco</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1892">
                <ruleml:Rel iri="prOnto:complyWith" />
                <ruleml:Var keyref=":eco" />
                <ruleml:Var keyref=":ep" />
                <ruleml:Ind>GDPR</ruleml:Ind>
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements181">
    <lrml:PrescriptiveStatement key="statements181Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :ev :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:verify' :ev :y :eco) & (prOnto:complyWith' :eco :ep GDPR)
	 & (prOnto:DPO :k) & (rioOnto:exceptionCha4Sec3Art35Par10 :ep),

	(rioOnto:RexistAtTime :er :t2) & (rioOnto:>= :t1 :t2) & (prOnto:request' :er :y :eas) & (prOnto:assistFor' :eas :k :y :ev)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":ev">ev</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1893">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1894">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1895">
              <ruleml:Rel iri="prOnto:verify" />
              <ruleml:Var keyref=":ev" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":eco">eco</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1896">
              <ruleml:Rel iri="prOnto:complyWith" />
              <ruleml:Var keyref=":eco" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Ind>GDPR</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DPO" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha4Sec3Art35Par10" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":er">er</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t1" />
                <ruleml:Var keyref=":t2" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1897">
                <ruleml:Rel iri="prOnto:request" />
                <ruleml:Var keyref=":er" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var key=":eas">eas</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1898">
                <ruleml:Rel iri="prOnto:assistFor" />
                <ruleml:Var keyref=":eas" />
                <ruleml:Var keyref=":k" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":ev" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements182">
    <lrml:PrescriptiveStatement key="statements182Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ei :eor :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:relatedTo :ep :ei) & (prOnto:implement' :ei :y :em)
	 & (prOnto:automatedDecisionMaking :em) & (rioOnto:or :eor :eca1 :eca2) & (rioOnto:cause' :eca1 :ep :le)
	 & (prOnto:legalEffectOn :le :w) & (rioOnto:cause' :eca2 :ep :se) & (prOnto:significantEffectOn :se :w)
	 & (rioOnto:exceptionCha4Sec3Art35Par10 :ep),

	(rioOnto:RexistAtTime :ev :t2) & (rioOnto:>= :t1 :t2) & (prOnto:verify' :ev :y :eco) & (prOnto:complyWith' :eco :ep GDPR)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ei">ei</ruleml:Var>
              <ruleml:Var key=":eor">eor</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1899">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1900">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:relatedTo" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":ei" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1901">
              <ruleml:Rel iri="prOnto:implement" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":em">em</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:automatedDecisionMaking" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eor" />
              <ruleml:Var key=":eca1">eca1</ruleml:Var>
              <ruleml:Var key=":eca2">eca2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1902">
              <ruleml:Rel iri="rioOnto:cause" />
              <ruleml:Var keyref=":eca1" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var key=":le">le</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:legalEffectOn" />
              <ruleml:Var keyref=":le" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1903">
              <ruleml:Rel iri="rioOnto:cause" />
              <ruleml:Var keyref=":eca2" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var key=":se">se</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:significantEffectOn" />
              <ruleml:Var keyref=":se" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha4Sec3Art35Par10" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":ev">ev</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t1" />
                <ruleml:Var keyref=":t2" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1904">
                <ruleml:Rel iri="prOnto:verify" />
                <ruleml:Var keyref=":ev" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var key=":eco">eco</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1905">
                <ruleml:Rel iri="prOnto:complyWith" />
                <ruleml:Var keyref=":eco" />
                <ruleml:Var keyref=":ep" />
                <ruleml:Ind>GDPR</ruleml:Ind>
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements183">
    <lrml:PrescriptiveStatement key="statements183Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:racialOrEthic :z) & (prOnto:largeScale :ep)
	 & (rioOnto:exceptionCha4Sec3Art35Par10 :ep),

	(rioOnto:RexistAtTime :ev :t2) & (rioOnto:>= :t1 :t2) & (prOnto:verify' :ev :y :eco) & (prOnto:complyWith' :eco :ep GDPR)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1906">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1907">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:racialOrEthic" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:largeScale" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha4Sec3Art35Par10" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":ev">ev</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t1" />
                <ruleml:Var keyref=":t2" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1908">
                <ruleml:Rel iri="prOnto:verify" />
                <ruleml:Var keyref=":ev" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var key=":eco">eco</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1909">
                <ruleml:Rel iri="prOnto:complyWith" />
                <ruleml:Var keyref=":eco" />
                <ruleml:Var keyref=":ep" />
                <ruleml:Ind>GDPR</ruleml:Ind>
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements183Formula2">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:politicalOpinion :z) & (prOnto:largeScale :ep)
	 & (rioOnto:exceptionCha4Sec3Art35Par10 :ep),

	(rioOnto:RexistAtTime :ev :t2) & (rioOnto:>= :t1 :t2) & (prOnto:verify' :ev :y :eco) & (prOnto:complyWith' :eco :ep GDPR)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1910">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1911">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:politicalOpinion" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:largeScale" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha4Sec3Art35Par10" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":ev">ev</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t1" />
                <ruleml:Var keyref=":t2" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1912">
                <ruleml:Rel iri="prOnto:verify" />
                <ruleml:Var keyref=":ev" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var key=":eco">eco</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1913">
                <ruleml:Rel iri="prOnto:complyWith" />
                <ruleml:Var keyref=":eco" />
                <ruleml:Var keyref=":ep" />
                <ruleml:Ind>GDPR</ruleml:Ind>
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements183Formula3">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:relOrPhilBelief :z) & (prOnto:largeScale :ep)
	 & (rioOnto:exceptionCha4Sec3Art35Par10 :ep),

	(rioOnto:RexistAtTime :ev :t2) & (rioOnto:>= :t1 :t2) & (prOnto:verify' :ev :y :eco) & (prOnto:complyWith' :eco :ep GDPR)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1914">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1915">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:relOrPhilBelief" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:largeScale" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha4Sec3Art35Par10" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":ev">ev</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t1" />
                <ruleml:Var keyref=":t2" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1916">
                <ruleml:Rel iri="prOnto:verify" />
                <ruleml:Var keyref=":ev" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var key=":eco">eco</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1917">
                <ruleml:Rel iri="prOnto:complyWith" />
                <ruleml:Var keyref=":eco" />
                <ruleml:Var keyref=":ep" />
                <ruleml:Ind>GDPR</ruleml:Ind>
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements183Formula4">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:tradeUnionMembership :z) & (prOnto:largeScale :ep)
	 & (rioOnto:exceptionCha4Sec3Art35Par10 :ep),

	(rioOnto:RexistAtTime :ev :t2) & (rioOnto:>= :t1 :t2) & (prOnto:verify' :ev :y :eco) & (prOnto:complyWith' :eco :ep GDPR)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1918">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1919">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:tradeUnionMembership" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:largeScale" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha4Sec3Art35Par10" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":ev">ev</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t1" />
                <ruleml:Var keyref=":t2" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1920">
                <ruleml:Rel iri="prOnto:verify" />
                <ruleml:Var keyref=":ev" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var key=":eco">eco</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1921">
                <ruleml:Rel iri="prOnto:complyWith" />
                <ruleml:Var keyref=":eco" />
                <ruleml:Var keyref=":ep" />
                <ruleml:Ind>GDPR</ruleml:Ind>
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements183Formula5">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:geneticData :z) & (prOnto:largeScale :ep)
	 & (rioOnto:exceptionCha4Sec3Art35Par10 :ep),

	(rioOnto:RexistAtTime :ev :t2) & (rioOnto:>= :t1 :t2) & (prOnto:verify' :ev :y :eco) & (prOnto:complyWith' :eco :ep GDPR)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1922">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1923">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:geneticData" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:largeScale" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha4Sec3Art35Par10" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":ev">ev</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t1" />
                <ruleml:Var keyref=":t2" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1924">
                <ruleml:Rel iri="prOnto:verify" />
                <ruleml:Var keyref=":ev" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var key=":eco">eco</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1925">
                <ruleml:Rel iri="prOnto:complyWith" />
                <ruleml:Var keyref=":eco" />
                <ruleml:Var keyref=":ep" />
                <ruleml:Ind>GDPR</ruleml:Ind>
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements183Formula6">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:biometricData :z) & (prOnto:largeScale :ep)
	 & (rioOnto:exceptionCha4Sec3Art35Par10 :ep),

	(rioOnto:RexistAtTime :ev :t2) & (rioOnto:>= :t1 :t2) & (prOnto:verify' :ev :y :eco) & (prOnto:complyWith' :eco :ep GDPR)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1926">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1927">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:biometricData" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:largeScale" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha4Sec3Art35Par10" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":ev">ev</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t1" />
                <ruleml:Var keyref=":t2" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1928">
                <ruleml:Rel iri="prOnto:verify" />
                <ruleml:Var keyref=":ev" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var key=":eco">eco</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1929">
                <ruleml:Rel iri="prOnto:complyWith" />
                <ruleml:Var keyref=":eco" />
                <ruleml:Var keyref=":ep" />
                <ruleml:Ind>GDPR</ruleml:Ind>
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements183Formula7">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:Health :epu) & (prOnto:isBasedOn :ep :epu)
	 & (prOnto:largeScale :ep) & (rioOnto:exceptionCha4Sec3Art35Par10 :ep),

	(rioOnto:RexistAtTime :ev :t2) & (rioOnto:>= :t1 :t2) & (prOnto:verify' :ev :y :eco) & (prOnto:complyWith' :eco :ep GDPR)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1930">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1931">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Health" />
              <ruleml:Var key=":epu">epu</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isBasedOn" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":epu" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:largeScale" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha4Sec3Art35Par10" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":ev">ev</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t1" />
                <ruleml:Var keyref=":t2" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1932">
                <ruleml:Rel iri="prOnto:verify" />
                <ruleml:Var keyref=":ev" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var key=":eco">eco</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1933">
                <ruleml:Rel iri="prOnto:complyWith" />
                <ruleml:Var keyref=":eco" />
                <ruleml:Var keyref=":ep" />
                <ruleml:Ind>GDPR</ruleml:Ind>
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements183Formula8">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:sexLifeData :z) & (prOnto:largeScale :ep)
	 & (rioOnto:exceptionCha4Sec3Art35Par10 :ep),

	(rioOnto:RexistAtTime :ev :t2) & (rioOnto:>= :t1 :t2) & (prOnto:verify' :ev :y :eco) & (prOnto:complyWith' :eco :ep GDPR)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1934">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1935">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:sexLifeData" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:largeScale" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha4Sec3Art35Par10" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":ev">ev</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t1" />
                <ruleml:Var keyref=":t2" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1936">
                <ruleml:Rel iri="prOnto:verify" />
                <ruleml:Var keyref=":ev" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var key=":eco">eco</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1937">
                <ruleml:Rel iri="prOnto:complyWith" />
                <ruleml:Var keyref=":eco" />
                <ruleml:Var keyref=":ep" />
                <ruleml:Ind>GDPR</ruleml:Ind>
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements183Formula9">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:sexualOrientation :z) & (prOnto:largeScale :ep)
	 & (rioOnto:exceptionCha4Sec3Art35Par10 :ep),

	(rioOnto:RexistAtTime :ev :t2) & (rioOnto:>= :t1 :t2) & (prOnto:verify' :ev :y :eco) & (prOnto:complyWith' :eco :ep GDPR)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1938">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1939">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:sexualOrientation" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:largeScale" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha4Sec3Art35Par10" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":ev">ev</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t1" />
                <ruleml:Var keyref=":t2" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1940">
                <ruleml:Rel iri="prOnto:verify" />
                <ruleml:Var keyref=":ev" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var key=":eco">eco</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1941">
                <ruleml:Rel iri="prOnto:complyWith" />
                <ruleml:Var keyref=":eco" />
                <ruleml:Var keyref=":ep" />
                <ruleml:Ind>GDPR</ruleml:Ind>
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements183Formula10">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:Judicial :epu) & (prOnto:isBasedOn :ep :epu)
	 & (prOnto:largeScale :ep) & (rioOnto:exceptionCha4Sec3Art35Par10 :ep),

	(rioOnto:RexistAtTime :ev :t2) & (rioOnto:>= :t1 :t2) & (prOnto:verify' :ev :y :eco) & (prOnto:complyWith' :eco :ep GDPR)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1942">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1943">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Judicial" />
              <ruleml:Var key=":epu">epu</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isBasedOn" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":epu" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:largeScale" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha4Sec3Art35Par10" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":ev">ev</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t1" />
                <ruleml:Var keyref=":t2" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1944">
                <ruleml:Rel iri="prOnto:verify" />
                <ruleml:Var keyref=":ev" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var key=":eco">eco</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1945">
                <ruleml:Rel iri="prOnto:complyWith" />
                <ruleml:Var keyref=":eco" />
                <ruleml:Var keyref=":ep" />
                <ruleml:Ind>GDPR</ruleml:Ind>
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements184">
    <lrml:PrescriptiveStatement key="statements184Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :eca :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (rioOnto:cause' :eca :ep :esm) & (prOnto:systematicMonitoringOf' :esm :a)
	 & (prOnto:area :a) & (prOnto:public :a) & (prOnto:largeScale :ep)
	 & (rioOnto:exceptionCha4Sec3Art35Par10 :ep),

	(rioOnto:RexistAtTime :ev :t2) & (rioOnto:>= :t1 :t2) & (prOnto:verify' :ev :y :eco) & (prOnto:complyWith' :eco :ep GDPR)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":eca">eca</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1946">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1947">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1948">
              <ruleml:Rel iri="rioOnto:cause" />
              <ruleml:Var keyref=":eca" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var key=":esm">esm</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1949">
              <ruleml:Rel iri="prOnto:systematicMonitoringOf" />
              <ruleml:Var keyref=":esm" />
              <ruleml:Var key=":a">a</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:area" />
              <ruleml:Var keyref=":a" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:public" />
              <ruleml:Var keyref=":a" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:largeScale" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha4Sec3Art35Par10" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":ev">ev</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t1" />
                <ruleml:Var keyref=":t2" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1950">
                <ruleml:Rel iri="prOnto:verify" />
                <ruleml:Var keyref=":ev" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var key=":eco">eco</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1951">
                <ruleml:Rel iri="prOnto:complyWith" />
                <ruleml:Var keyref=":eco" />
                <ruleml:Var keyref=":ep" />
                <ruleml:Ind>GDPR</ruleml:Ind>
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements185">
    <lrml:PrescriptiveStatement key="statements185Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :el :ev :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:Purpose :epu) & (prOnto:isBasedOn :ep :epu)
	 & (prOnto:likely' :el :eca) & (rioOnto:cause' :eca :ep :er) & (prOnto:riskFor' :er :erf)
	 & (prOnto:rightsAndFreedomsOf' :erf :w) & (prOnto:verify' :ev :y :eco) & (prOnto:complyWith' :eco :ep GDPR)
	 & (rioOnto:exceptionCha4Sec3Art35Par10 :ep),

	(rioOnto:RexistAtTime :a2 :t1) & (rioOnto:and :a2 :ed1 :ed2 :ed3 :ed4 :ed5 :ed6) & (prOnto:describe' :ed1 :ev :ep) & (prOnto:describe' :ed2 :ev :epu)
	 & (prOnto:describe' :ed3 :ev :eli) & (prOnto:legitimateInterestOf' :eli :y) & (prOnto:describe' :ed4 :ev :ert)
	 & (prOnto:relatedTo' :ert :ep :epu) & (prOnto:describe' :ed5 :ev :er) & (prOnto:describe' :ed6 :ev :eta)
	 & (prOnto:takenToAddress' :eta :em :er) & (prOnto:measure :em)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":el">el</ruleml:Var>
              <ruleml:Var key=":ev">ev</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1952">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1953">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Purpose" />
              <ruleml:Var key=":epu">epu</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isBasedOn" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":epu" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1954">
              <ruleml:Rel iri="prOnto:likely" />
              <ruleml:Var keyref=":el" />
              <ruleml:Var key=":eca">eca</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1955">
              <ruleml:Rel iri="rioOnto:cause" />
              <ruleml:Var keyref=":eca" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var key=":er">er</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1956">
              <ruleml:Rel iri="prOnto:riskFor" />
              <ruleml:Var keyref=":er" />
              <ruleml:Var key=":erf">erf</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1957">
              <ruleml:Rel iri="prOnto:rightsAndFreedomsOf" />
              <ruleml:Var keyref=":erf" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1958">
              <ruleml:Rel iri="prOnto:verify" />
              <ruleml:Var keyref=":ev" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":eco">eco</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1959">
              <ruleml:Rel iri="prOnto:complyWith" />
              <ruleml:Var keyref=":eco" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Ind>GDPR</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha4Sec3Art35Par10" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":a2">a2</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:and" />
                <ruleml:Var keyref=":a2" />
                <ruleml:Var key=":ed1">ed1</ruleml:Var>
                <ruleml:Var key=":ed2">ed2</ruleml:Var>
                <ruleml:Var key=":ed3">ed3</ruleml:Var>
                <ruleml:Var key=":ed4">ed4</ruleml:Var>
                <ruleml:Var key=":ed5">ed5</ruleml:Var>
                <ruleml:Var key=":ed6">ed6</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1960">
                <ruleml:Rel iri="prOnto:describe" />
                <ruleml:Var keyref=":ed1" />
                <ruleml:Var keyref=":ev" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1961">
                <ruleml:Rel iri="prOnto:describe" />
                <ruleml:Var keyref=":ed2" />
                <ruleml:Var keyref=":ev" />
                <ruleml:Var keyref=":epu" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1962">
                <ruleml:Rel iri="prOnto:describe" />
                <ruleml:Var keyref=":ed3" />
                <ruleml:Var keyref=":ev" />
                <ruleml:Var key=":eli">eli</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1963">
                <ruleml:Rel iri="prOnto:legitimateInterestOf" />
                <ruleml:Var keyref=":eli" />
                <ruleml:Var keyref=":y" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1964">
                <ruleml:Rel iri="prOnto:describe" />
                <ruleml:Var keyref=":ed4" />
                <ruleml:Var keyref=":ev" />
                <ruleml:Var key=":ert">ert</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1965">
                <ruleml:Rel iri="prOnto:relatedTo" />
                <ruleml:Var keyref=":ert" />
                <ruleml:Var keyref=":ep" />
                <ruleml:Var keyref=":epu" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1966">
                <ruleml:Rel iri="prOnto:describe" />
                <ruleml:Var keyref=":ed5" />
                <ruleml:Var keyref=":ev" />
                <ruleml:Var keyref=":er" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1967">
                <ruleml:Rel iri="prOnto:describe" />
                <ruleml:Var keyref=":ed6" />
                <ruleml:Var keyref=":ev" />
                <ruleml:Var key=":eta">eta</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A1968">
                <ruleml:Rel iri="prOnto:takenToAddress" />
                <ruleml:Var keyref=":eta" />
                <ruleml:Var key=":em">em</ruleml:Var>
                <ruleml:Var keyref=":er" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:measure" />
                <ruleml:Var keyref=":em" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements186">
    <lrml:PrescriptiveStatement key="statements186Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :en1 :en2 :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:verify' :ev :y :eco) & (prOnto:complyWith' :eco :ep :GDPR)
	 & (prOnto:request' :er :y :eas) & (prOnto:assistFor' :eas :w :y :ev) & (prOnto:appropriate :er)
	 & (rioOnto:not :en1 :ev1) & (prOnto:violationOf' :ev1 :pi) & (prOnto:PublicInterest :pi)
	 & (rioOnto:not :en2 :ev2) & (prOnto:violationOf' :ev2 :eli) & (prOnto:legitimateInterestOf' :eli :y),

	(rioOnto:RexistAtTime :er :t1)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":en1">en1</ruleml:Var>
              <ruleml:Var key=":en2">en2</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1969">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1970">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1971">
              <ruleml:Rel iri="prOnto:verify" />
              <ruleml:Var key=":ev">ev</ruleml:Var>
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":eco">eco</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1972">
              <ruleml:Rel iri="prOnto:complyWith" />
              <ruleml:Var keyref=":eco" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var key=":GDPR">GDPR</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1973">
              <ruleml:Rel iri="prOnto:request" />
              <ruleml:Var key=":er">er</ruleml:Var>
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":eas">eas</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1974">
              <ruleml:Rel iri="prOnto:assistFor" />
              <ruleml:Var keyref=":eas" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":ev" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:appropriate" />
              <ruleml:Var keyref=":er" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en1" />
              <ruleml:Var key=":ev1">ev1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1975">
              <ruleml:Rel iri="prOnto:violationOf" />
              <ruleml:Var keyref=":ev1" />
              <ruleml:Var key=":pi">pi</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PublicInterest" />
              <ruleml:Var keyref=":pi" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en2" />
              <ruleml:Var key=":ev2">ev2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1976">
              <ruleml:Rel iri="prOnto:violationOf" />
              <ruleml:Var keyref=":ev2" />
              <ruleml:Var key=":eli">eli</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1977">
              <ruleml:Rel iri="prOnto:legitimateInterestOf" />
              <ruleml:Var keyref=":eli" />
              <ruleml:Var keyref=":y" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var keyref=":er" />
              <ruleml:Var keyref=":t1" />
            </ruleml:Atom>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements187">
    <lrml:ConstitutiveStatement key="statements187Formula1">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :eo :ei :eor :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (rioOnto:Obliged' :eo :y :e :t1) & (rioOnto:imply :ei :e :ep)
	 & (prOnto:legalBasisOf :elb :ep) & (rioOnto:or :eor :ep1 :ep2) & (rioOnto:partOf' :ep1 :elb EuropeanUnion)
	 & (rioOnto:partOf' :ep2 :elb prOnto:MSof(:y)) & (rioOnto:exceptionCha4Sec3Art35Par10MSrequiresIt :ep),

	(rioOnto:exceptionCha4Sec3Art35Par10 :ep)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":eo">eo</ruleml:Var>
              <ruleml:Var key=":ei">ei</ruleml:Var>
              <ruleml:Var key=":eor">eor</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1978">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1979">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1980">
              <ruleml:Rel iri="rioOnto:Obliged" />
              <ruleml:Var keyref=":eo" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":e">e</ruleml:Var>
              <ruleml:Var keyref=":t1" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:imply" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var keyref=":e" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:legalBasisOf" />
              <ruleml:Var key=":elb">elb</ruleml:Var>
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eor" />
              <ruleml:Var key=":ep1">ep1</ruleml:Var>
              <ruleml:Var key=":ep2">ep2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1981">
              <ruleml:Rel iri="rioOnto:partOf" />
              <ruleml:Var keyref=":ep1" />
              <ruleml:Var keyref=":elb" />
              <ruleml:Ind>EuropeanUnion</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1982">
              <ruleml:Rel iri="rioOnto:partOf" />
              <ruleml:Var keyref=":ep2" />
              <ruleml:Var keyref=":elb" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:MSof" />
                <ruleml:Var keyref=":y" />
              </ruleml:Expr>
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha4Sec3Art35Par10MSrequiresIt" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:exceptionCha4Sec3Art35Par10" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
    <lrml:ConstitutiveStatement key="statements187Formula2">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :epe :eor :eh :ei :eor2 :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (rioOnto:Permitted' :epe :y :ee :t1) & (prOnto:execute' :ee :y :et)
	 & (rioOnto:or :eor :er1 :er2) & (prOnto:relatedTo' :er1 :et :pi) & (prOnto:relatedTo' :er2 :et :pp)
	 & (prOnto:PublicInterest :pi) & (prOnto:publicPowers :pp) & (prOnto:hold' :eh :y :pp)
	 & (rioOnto:imply :ei :y :pp) & (prOnto:legalBasisOf :elb :ep) & (rioOnto:or :eor2 :ep1 :ep2)
	 & (rioOnto:partOf' :ep1 :elb EuropeanUnion) & (rioOnto:partOf' :ep2 :elb prOnto:MSof(:y)) & (rioOnto:exceptionCha3Sec4Art21Par1 :ep)
	 & (rioOnto:exceptionCha4Sec3Art35Par10MSrequiresIt :ep),

	(rioOnto:exceptionCha4Sec3Art35Par10 :ep)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":epe">epe</ruleml:Var>
              <ruleml:Var key=":eor">eor</ruleml:Var>
              <ruleml:Var key=":eh">eh</ruleml:Var>
              <ruleml:Var key=":ei">ei</ruleml:Var>
              <ruleml:Var key=":eor2">eor2</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1983">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1984">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1985">
              <ruleml:Rel iri="rioOnto:Permitted" />
              <ruleml:Var keyref=":epe" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":ee">ee</ruleml:Var>
              <ruleml:Var keyref=":t1" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1986">
              <ruleml:Rel iri="prOnto:execute" />
              <ruleml:Var keyref=":ee" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":et">et</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eor" />
              <ruleml:Var keyref=":er1" />
              <ruleml:Var keyref=":er2" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1987">
              <ruleml:Rel iri="prOnto:relatedTo" />
              <ruleml:Var keyref=":er1" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var key=":pi">pi</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1988">
              <ruleml:Rel iri="prOnto:relatedTo" />
              <ruleml:Var keyref=":er2" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var key=":pp">pp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PublicInterest" />
              <ruleml:Var keyref=":pi" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:publicPowers" />
              <ruleml:Var keyref=":pp" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1989">
              <ruleml:Rel iri="prOnto:hold" />
              <ruleml:Var keyref=":eh" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":pp" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:imply" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":pp" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha3Sec4Art21Par1" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:legalBasisOf" />
              <ruleml:Var key=":elb">elb</ruleml:Var>
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eor2" />
              <ruleml:Var key=":ep1">ep1</ruleml:Var>
              <ruleml:Var key=":ep2">ep2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1990">
              <ruleml:Rel iri="rioOnto:partOf" />
              <ruleml:Var keyref=":ep1" />
              <ruleml:Var keyref=":elb" />
              <ruleml:Ind>EuropeanUnion</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1991">
              <ruleml:Rel iri="rioOnto:partOf" />
              <ruleml:Var keyref=":ep2" />
              <ruleml:Var keyref=":elb" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:MSof" />
                <ruleml:Var keyref=":y" />
              </ruleml:Expr>
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha4Sec3Art35Par10MSrequiresIt" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:exceptionCha4Sec3Art35Par10" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
    <lrml:ConstitutiveStatement key="statements187Formula3">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :ev :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:verify' :ev :y :eco) & (prOnto:complyWith' :eco :ep GDPR)
	 & (prOnto:DPO :k),

	(rioOnto:exceptionCha4Sec3Art35Par10MSrequiresIt :ep)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":ev">ev</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1992">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1993">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1994">
              <ruleml:Rel iri="prOnto:verify" />
              <ruleml:Var keyref=":ev" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":eco">eco</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1995">
              <ruleml:Rel iri="prOnto:complyWith" />
              <ruleml:Var keyref=":eco" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Ind>GDPR</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DPO" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:exceptionCha4Sec3Art35Par10MSrequiresIt" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements188">
    <lrml:PrescriptiveStatement key="statements188Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :ev1 :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:verify' :ev1 :y :eco1) & (prOnto:complyWith' :eco1 :ep GDPR)
	 & (rioOnto:RexistAtTime :enc :t2) & (rioOnto:>= :t2 :t1) & (rioOnto:necessary' :enc :ev2)
	 & (prOnto:verify' :ev2 :y :eco2) & (prOnto:complyWith' :eco2 :ep :ev1),

	(rioOnto:RexistAtTime :ev2 :t2)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":ev1">ev1</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1996">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1997">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1998">
              <ruleml:Rel iri="prOnto:verify" />
              <ruleml:Var keyref=":ev1" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":eco1">eco1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A1999">
              <ruleml:Rel iri="prOnto:complyWith" />
              <ruleml:Var keyref=":eco1" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Ind>GDPR</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":enc">enc</ruleml:Var>
              <ruleml:Var key=":t2">t2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:&gt;=" />
              <ruleml:Var keyref=":t2" />
              <ruleml:Var keyref=":t1" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2000">
              <ruleml:Rel iri="rioOnto:necessary" />
              <ruleml:Var keyref=":enc" />
              <ruleml:Var key=":ev2">ev2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2001">
              <ruleml:Rel iri="prOnto:verify" />
              <ruleml:Var keyref=":ev2" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":eco2">eco2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2002">
              <ruleml:Rel iri="prOnto:complyWith" />
              <ruleml:Var keyref=":eco2" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":ev1" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var keyref=":ev2" />
              <ruleml:Var keyref=":t2" />
            </ruleml:Atom>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements189">
    <lrml:PrescriptiveStatement key="statements189Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :eca1 :el :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:verify' :ev :y :eco) & (prOnto:complyWith' :eco :ep GDPR)
	 & (rioOnto:cause' :eca1 :ev :eaw) & (prOnto:awareOf' :eaw :y :el) & (prOnto:likely' :el :eca2)
	 & (rioOnto:cause' :eca2 :ep :er) & (prOnto:riskFor' :er :erf) & (prOnto:rightsAndFreedomsOf' :erf :w),

	(rioOnto:RexistAtTime :er :t2) & (rioOnto:>= :t1 :t2) & (prOnto:request' :er :y :ea) & (prOnto:authorizedBy' :ea :ep prOnto:supAuth(prOnto:MSof(:y)))
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":eca1">eca1</ruleml:Var>
              <ruleml:Var key=":el">el</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2003">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2004">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2005">
              <ruleml:Rel iri="prOnto:verify" />
              <ruleml:Var key=":ev">ev</ruleml:Var>
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":eco">eco</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2006">
              <ruleml:Rel iri="prOnto:complyWith" />
              <ruleml:Var keyref=":eco" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Ind>GDPR</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2007">
              <ruleml:Rel iri="rioOnto:cause" />
              <ruleml:Var keyref=":eca1" />
              <ruleml:Var keyref=":ev" />
              <ruleml:Var key=":eaw">eaw</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2008">
              <ruleml:Rel iri="prOnto:awareOf" />
              <ruleml:Var keyref=":eaw" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":el" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2009">
              <ruleml:Rel iri="prOnto:likely" />
              <ruleml:Var keyref=":el" />
              <ruleml:Var key=":eca2">eca2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2010">
              <ruleml:Rel iri="rioOnto:cause" />
              <ruleml:Var keyref=":eca2" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var key=":er">er</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2011">
              <ruleml:Rel iri="prOnto:riskFor" />
              <ruleml:Var keyref=":er" />
              <ruleml:Var key=":erf">erf</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2012">
              <ruleml:Rel iri="prOnto:rightsAndFreedomsOf" />
              <ruleml:Var keyref=":erf" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":er">er</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t1" />
                <ruleml:Var keyref=":t2" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2013">
                <ruleml:Rel iri="prOnto:request" />
                <ruleml:Var keyref=":er" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var key=":ea">ea</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2014">
                <ruleml:Rel iri="prOnto:authorizedBy" />
                <ruleml:Var keyref=":ea" />
                <ruleml:Var keyref=":ep" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:supAuth" />
                  <ruleml:Expr>
                    <ruleml:Fun iri="prOnto:MSof" />
                    <ruleml:Var keyref=":y" />
                  </ruleml:Expr>
                </ruleml:Expr>
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements190">
    <lrml:PrescriptiveStatement key="statements190Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :er :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:request' :er :y :ea) & (prOnto:authorizedBy' :ea :ep prOnto:supAuth(prOnto:MSof(:y))),

	(rioOnto:RexistAtTime :a2 :t2) & (rioOnto:>= :t2 :t1) & (rioOnto:and :a2 :en1 :en2) & (prOnto:Communicate' :en1 :y prOnto:supAuth(prOnto:MSof(:y)) :erf1)
	 & (prOnto:responsibleFor' :erf1 :y :ep) & (prOnto:Communicate' :en2 :y prOnto:supAuth(prOnto:MSof(:y)) :erf2) & (prOnto:responsibleFor' :erf2 :x :ep)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":er">er</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2015">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2016">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2017">
              <ruleml:Rel iri="prOnto:request" />
              <ruleml:Var keyref=":er" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":ea">ea</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2018">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":ea" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:supAuth" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:MSof" />
                  <ruleml:Var keyref=":y" />
                </ruleml:Expr>
              </ruleml:Expr>
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":a2">a2</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:and" />
                <ruleml:Var keyref=":a2" />
                <ruleml:Var key=":en1">en1</ruleml:Var>
                <ruleml:Var key=":en2">en2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2019">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en1" />
                <ruleml:Var keyref=":y" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:supAuth" />
                  <ruleml:Expr>
                    <ruleml:Fun iri="prOnto:MSof" />
                    <ruleml:Var keyref=":y" />
                  </ruleml:Expr>
                </ruleml:Expr>
                <ruleml:Var key=":erf1">erf1</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2020">
                <ruleml:Rel iri="prOnto:responsibleFor" />
                <ruleml:Var keyref=":erf1" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2021">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en2" />
                <ruleml:Var keyref=":y" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:supAuth" />
                  <ruleml:Expr>
                    <ruleml:Fun iri="prOnto:MSof" />
                    <ruleml:Var keyref=":y" />
                  </ruleml:Expr>
                </ruleml:Expr>
                <ruleml:Var key=":erf2">erf2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2022">
                <ruleml:Rel iri="prOnto:responsibleFor" />
                <ruleml:Var keyref=":erf2" />
                <ruleml:Var keyref=":x" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements191">
    <lrml:PrescriptiveStatement key="statements191Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :er :ei :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:request' :er :y :ea) & (prOnto:authorizedBy' :ea :ep prOnto:supAuth(prOnto:MSof(:y)))
	 & (prOnto:Purpose :epu) & (prOnto:isBasedOn :ep :epu) & (prOnto:implement' :ei :y :ep),

	(rioOnto:RexistAtTime :a2 :t2) & (rioOnto:>= :t2 :t1) & (rioOnto:and :a2 :en1 :en2) & (prOnto:Communicate' :en1 :y prOnto:supAuth(prOnto:MSof(:y)) :epu)
	 & (prOnto:Communicate' :en2 :y prOnto:supAuth(prOnto:MSof(:y)) :ei)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":er">er</ruleml:Var>
              <ruleml:Var key=":ei">ei</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2023">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2024">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2025">
              <ruleml:Rel iri="prOnto:request" />
              <ruleml:Var keyref=":er" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":ea">ea</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2026">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":ea" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:supAuth" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:MSof" />
                  <ruleml:Var keyref=":y" />
                </ruleml:Expr>
              </ruleml:Expr>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Purpose" />
              <ruleml:Var key=":epu">epu</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isBasedOn" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":epu" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2027">
              <ruleml:Rel iri="prOnto:implement" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":a2">a2</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:and" />
                <ruleml:Var keyref=":a2" />
                <ruleml:Var key=":en1">en1</ruleml:Var>
                <ruleml:Var key=":en2">en2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2028">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en1" />
                <ruleml:Var keyref=":y" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:supAuth" />
                  <ruleml:Expr>
                    <ruleml:Fun iri="prOnto:MSof" />
                    <ruleml:Var keyref=":y" />
                  </ruleml:Expr>
                </ruleml:Expr>
                <ruleml:Var keyref=":epu" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2029">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en2" />
                <ruleml:Var keyref=":y" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:supAuth" />
                  <ruleml:Expr>
                    <ruleml:Fun iri="prOnto:MSof" />
                    <ruleml:Var keyref=":y" />
                  </ruleml:Expr>
                </ruleml:Expr>
                <ruleml:Var keyref=":ei" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements192">
    <lrml:PrescriptiveStatement key="statements192Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :er :ei :epr :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:request' :er :y :ea) & (prOnto:authorizedBy' :ea :ep prOnto:supAuth(prOnto:MSof(:y)))
	 & (prOnto:measure :em) & (prOnto:implement' :ei :y :em) & (prOnto:protect' :epr :em :erf)
	 & (prOnto:rightsAndFreedomsOf' :erf :w),

	(rioOnto:RexistAtTime :en :t2) & (rioOnto:>= :t2 :t1) & (prOnto:Communicate' :en :y prOnto:supAuth(prOnto:MSof(:y)) :ei)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":er">er</ruleml:Var>
              <ruleml:Var key=":ei">ei</ruleml:Var>
              <ruleml:Var key=":epr">epr</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2030">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2031">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2032">
              <ruleml:Rel iri="prOnto:request" />
              <ruleml:Var keyref=":er" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":ea">ea</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2033">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":ea" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:supAuth" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:MSof" />
                  <ruleml:Var keyref=":y" />
                </ruleml:Expr>
              </ruleml:Expr>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:measure" />
              <ruleml:Var key=":em">em</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2034">
              <ruleml:Rel iri="prOnto:implement" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2035">
              <ruleml:Rel iri="prOnto:protect" />
              <ruleml:Var keyref=":epr" />
              <ruleml:Var keyref=":em" />
              <ruleml:Var key=":erf">erf</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2036">
              <ruleml:Rel iri="prOnto:rightsAndFreedomsOf" />
              <ruleml:Var keyref=":erf" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":en">en</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2037">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en" />
                <ruleml:Var keyref=":y" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:supAuth" />
                  <ruleml:Expr>
                    <ruleml:Fun iri="prOnto:MSof" />
                    <ruleml:Var keyref=":y" />
                  </ruleml:Expr>
                </ruleml:Expr>
                <ruleml:Var keyref=":ei" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements193">
    <lrml:PrescriptiveStatement key="statements193Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :er :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:request' :er :y :ea) & (prOnto:authorizedBy' :ea :ep prOnto:supAuth(prOnto:MSof(:y)))
	 & (prOnto:DPO :k),

	(rioOnto:RexistAtTime :en :t2) & (rioOnto:>= :t2 :t1) & (prOnto:Communicate' :en :y prOnto:supAuth(prOnto:MSof(:y)) prOnto:contactDetails(:k))
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":er">er</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2038">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2039">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2040">
              <ruleml:Rel iri="prOnto:request" />
              <ruleml:Var keyref=":er" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":ea">ea</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2041">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":ea" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:supAuth" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:MSof" />
                  <ruleml:Var keyref=":y" />
                </ruleml:Expr>
              </ruleml:Expr>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DPO" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":en">en</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2042">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en" />
                <ruleml:Var keyref=":y" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:supAuth" />
                  <ruleml:Expr>
                    <ruleml:Fun iri="prOnto:MSof" />
                    <ruleml:Var keyref=":y" />
                  </ruleml:Expr>
                </ruleml:Expr>
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:contactDetails" />
                  <ruleml:Var keyref=":k" />
                </ruleml:Expr>
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements194">
    <lrml:PrescriptiveStatement key="statements194Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :er :ev :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:request' :er :y :ea) & (prOnto:authorizedBy' :ea :ep prOnto:supAuth(prOnto:MSof(:y)))
	 & (prOnto:verify' :ev :y :eco) & (prOnto:complyWith' :eco :ep GDPR),

	(rioOnto:RexistAtTime :en :t2) & (rioOnto:>= :t2 :t1) & (prOnto:Communicate' :en :y prOnto:supAuth(prOnto:MSof(:y)) :ev)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":er">er</ruleml:Var>
              <ruleml:Var key=":ev">ev</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2043">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2044">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2045">
              <ruleml:Rel iri="prOnto:request" />
              <ruleml:Var keyref=":er" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":ea">ea</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2046">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":ea" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:supAuth" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:MSof" />
                  <ruleml:Var keyref=":y" />
                </ruleml:Expr>
              </ruleml:Expr>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2047">
              <ruleml:Rel iri="prOnto:verify" />
              <ruleml:Var keyref=":ev" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":eco">eco</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2048">
              <ruleml:Rel iri="prOnto:complyWith" />
              <ruleml:Var keyref=":eco" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Ind>GDPR</ruleml:Ind>
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":en">en</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2049">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en" />
                <ruleml:Var keyref=":y" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:supAuth" />
                  <ruleml:Expr>
                    <ruleml:Fun iri="prOnto:MSof" />
                    <ruleml:Var keyref=":y" />
                  </ruleml:Expr>
                </ruleml:Expr>
                <ruleml:Var keyref=":ev" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements195">
    <lrml:PrescriptiveStatement key="statements195Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :er1 :er2 :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:request' :er1 :y :ea) & (prOnto:authorizedBy' :ea :ep prOnto:supAuth(prOnto:MSof(:y)))
	 & (prOnto:request' :er2 :y :en) & (prOnto:Communicate' :en :y prOnto:supAuth(prOnto:MSof(:y)) :i),

	(rioOnto:RexistAtTime :en :t2) & (rioOnto:>= :t2 :t1)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":er1">er1</ruleml:Var>
              <ruleml:Var key=":er2">er2</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2050">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2051">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2052">
              <ruleml:Rel iri="prOnto:request" />
              <ruleml:Var keyref=":er1" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":ea">ea</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2053">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":ea" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:supAuth" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:MSof" />
                  <ruleml:Var keyref=":y" />
                </ruleml:Expr>
              </ruleml:Expr>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2054">
              <ruleml:Rel iri="prOnto:request" />
              <ruleml:Var keyref=":er2" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":en">en</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2055">
              <ruleml:Rel iri="prOnto:Communicate" />
              <ruleml:Var keyref=":en" />
              <ruleml:Var keyref=":y" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:supAuth" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:MSof" />
                  <ruleml:Var keyref=":y" />
                </ruleml:Expr>
              </ruleml:Expr>
              <ruleml:Var key=":i">i</ruleml:Var>
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":en">en</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements196">
    <lrml:PrescriptiveStatement key="statements196Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:publicAuthority :x) & (prOnto:PersonalDataProcessing' :ep :x :z)
	 & (rioOnto:exceptionCha4Sec4Art37Par1Point1 :ep),

	(rioOnto:RexistAtTime :ed :t2) & (rioOnto:>= :t2 :t1) & (prOnto:designates' :ed :y :k) & (prOnto:DPO :k)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:publicAuthority" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2056">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha4Sec4Art37Par1Point1" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":ed">ed</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2057">
                <ruleml:Rel iri="prOnto:designates" />
                <ruleml:Var keyref=":ed" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var key=":k">k</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:DPO" />
                <ruleml:Var keyref=":k" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:ConstitutiveStatement key="statements196Formula2">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :ert) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:publicAuthority :x) & (prOnto:PersonalDataProcessing' :ep :x :z)
	 & (prOnto:relatedTo' :ert :ep :lc) & (prOnto:legalClaim :lc),

	(rioOnto:exceptionCha4Sec4Art37Par1Point1 :ep)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":ert">ert</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:publicAuthority" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2058">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2059">
              <ruleml:Rel iri="prOnto:relatedTo" />
              <ruleml:Var keyref=":ert" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var key=":lc">lc</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:legalClaim" />
              <ruleml:Var keyref=":lc" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:Atom>
            <ruleml:Rel iri="rioOnto:exceptionCha4Sec4Art37Par1Point1" />
            <ruleml:Var keyref=":ep" />
          </ruleml:Atom>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements197">
    <lrml:PrescriptiveStatement key="statements197Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :ei) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:publicAuthority :x) & (prOnto:PersonalDataProcessing' :ep :x :z)
	 & (prOnto:largeScale :ep) & (rioOnto:imply :ei :ep :esm) & (prOnto:systematicMonitoringOf' :esm :w),

	(rioOnto:RexistAtTime :ed :t2) & (rioOnto:>= :t2 :t1) & (prOnto:designates' :ed :y :k) & (prOnto:DPO :k)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":ei">ei</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:publicAuthority" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2060">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:largeScale" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:imply" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var key=":esm">esm</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2061">
              <ruleml:Rel iri="prOnto:systematicMonitoringOf" />
              <ruleml:Var keyref=":esm" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":ed">ed</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2062">
                <ruleml:Rel iri="prOnto:designates" />
                <ruleml:Var keyref=":ed" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var key=":k">k</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:DPO" />
                <ruleml:Var keyref=":k" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements198">
    <lrml:PrescriptiveStatement key="statements198Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :ei) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:publicAuthority :x) & (prOnto:PersonalDataProcessing' :ep :x :z)
	 & (prOnto:largeScale :ep) & (prOnto:racialOrEthic :z),

	(rioOnto:RexistAtTime :ed :t2) & (rioOnto:>= :t2 :t1) & (prOnto:designates' :ed :y :k) & (prOnto:DPO :k)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":ei">ei</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:publicAuthority" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2063">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:largeScale" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:racialOrEthic" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":ed">ed</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2064">
                <ruleml:Rel iri="prOnto:designates" />
                <ruleml:Var keyref=":ed" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var key=":k">k</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:DPO" />
                <ruleml:Var keyref=":k" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements198Formula2">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :ei) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:publicAuthority :x) & (prOnto:PersonalDataProcessing' :ep :x :z)
	 & (prOnto:largeScale :ep) & (prOnto:politicalOpinion :z),

	(rioOnto:RexistAtTime :ed :t2) & (rioOnto:>= :t2 :t1) & (prOnto:designates' :ed :y :k) & (prOnto:DPO :k)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":ei">ei</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:publicAuthority" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2065">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:largeScale" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:politicalOpinion" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":ed">ed</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2066">
                <ruleml:Rel iri="prOnto:designates" />
                <ruleml:Var keyref=":ed" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var key=":k">k</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:DPO" />
                <ruleml:Var keyref=":k" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements198Formula3">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :ei) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:publicAuthority :x) & (prOnto:PersonalDataProcessing' :ep :x :z)
	 & (prOnto:largeScale :ep) & (prOnto:relOrPhilBelief :z),

	(rioOnto:RexistAtTime :ed :t2) & (rioOnto:>= :t2 :t1) & (prOnto:designates' :ed :y :k) & (prOnto:DPO :k)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":ei">ei</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:publicAuthority" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2067">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:largeScale" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:relOrPhilBelief" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":ed">ed</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2068">
                <ruleml:Rel iri="prOnto:designates" />
                <ruleml:Var keyref=":ed" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var key=":k">k</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:DPO" />
                <ruleml:Var keyref=":k" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements198Formula4">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :ei) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:publicAuthority :x) & (prOnto:PersonalDataProcessing' :ep :x :z)
	 & (prOnto:largeScale :ep) & (prOnto:tradeUnionMembership :z),

	(rioOnto:RexistAtTime :ed :t2) & (rioOnto:>= :t2 :t1) & (prOnto:designates' :ed :y :k) & (prOnto:DPO :k)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":ei">ei</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:publicAuthority" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2069">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:largeScale" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:tradeUnionMembership" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":ed">ed</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2070">
                <ruleml:Rel iri="prOnto:designates" />
                <ruleml:Var keyref=":ed" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var key=":k">k</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:DPO" />
                <ruleml:Var keyref=":k" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements198Formula5">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :ei) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:publicAuthority :x) & (prOnto:PersonalDataProcessing' :ep :x :z)
	 & (prOnto:largeScale :ep) & (prOnto:geneticData :z),

	(rioOnto:RexistAtTime :ed :t2) & (rioOnto:>= :t2 :t1) & (prOnto:designates' :ed :y :k) & (prOnto:DPO :k)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":ei">ei</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:publicAuthority" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2071">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:largeScale" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:geneticData" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":ed">ed</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2072">
                <ruleml:Rel iri="prOnto:designates" />
                <ruleml:Var keyref=":ed" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var key=":k">k</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:DPO" />
                <ruleml:Var keyref=":k" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements198Formula6">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :ei) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:publicAuthority :x) & (prOnto:PersonalDataProcessing' :ep :x :z)
	 & (prOnto:largeScale :ep) & (prOnto:biometricData :z),

	(rioOnto:RexistAtTime :ed :t2) & (rioOnto:>= :t2 :t1) & (prOnto:designates' :ed :y :k) & (prOnto:DPO :k)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":ei">ei</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:publicAuthority" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2073">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:largeScale" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:biometricData" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":ed">ed</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2074">
                <ruleml:Rel iri="prOnto:designates" />
                <ruleml:Var keyref=":ed" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var key=":k">k</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:DPO" />
                <ruleml:Var keyref=":k" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements198Formula7">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :ei) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:publicAuthority :x) & (prOnto:PersonalDataProcessing' :ep :x :z)
	 & (prOnto:largeScale :ep) & (prOnto:Health :epu) & (prOnto:isBasedOn :ep :epu),

	(rioOnto:RexistAtTime :ed :t2) & (rioOnto:>= :t2 :t1) & (prOnto:designates' :ed :y :k) & (prOnto:DPO :k)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":ei">ei</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:publicAuthority" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2075">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:largeScale" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Health" />
              <ruleml:Var key=":epu">epu</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isBasedOn" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":epu" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":ed">ed</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2076">
                <ruleml:Rel iri="prOnto:designates" />
                <ruleml:Var keyref=":ed" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var key=":k">k</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:DPO" />
                <ruleml:Var keyref=":k" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements198Formula8">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :ei) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:publicAuthority :x) & (prOnto:PersonalDataProcessing' :ep :x :z)
	 & (prOnto:largeScale :ep) & (prOnto:sexLifeData :z),

	(rioOnto:RexistAtTime :ed :t2) & (rioOnto:>= :t2 :t1) & (prOnto:designates' :ed :y :k) & (prOnto:DPO :k)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":ei">ei</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:publicAuthority" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2077">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:largeScale" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:sexLifeData" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":ed">ed</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2078">
                <ruleml:Rel iri="prOnto:designates" />
                <ruleml:Var keyref=":ed" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var key=":k">k</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:DPO" />
                <ruleml:Var keyref=":k" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements198Formula9">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :ei) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:publicAuthority :x) & (prOnto:PersonalDataProcessing' :ep :x :z)
	 & (prOnto:largeScale :ep) & (prOnto:sexualOrientation :z),

	(rioOnto:RexistAtTime :ed :t2) & (rioOnto:>= :t2 :t1) & (prOnto:designates' :ed :y :k) & (prOnto:DPO :k)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":ei">ei</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:publicAuthority" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2079">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:largeScale" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:sexualOrientation" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":ed">ed</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2080">
                <ruleml:Rel iri="prOnto:designates" />
                <ruleml:Var keyref=":ed" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var key=":k">k</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:DPO" />
                <ruleml:Var keyref=":k" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements198Formula10">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :ei) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:publicAuthority :x) & (prOnto:PersonalDataProcessing' :ep :x :z)
	 & (prOnto:largeScale :ep) & (prOnto:Judicial :epu) & (prOnto:isBasedOn :ep :epu),

	(rioOnto:RexistAtTime :ed :t2) & (rioOnto:>= :t2 :t1) & (prOnto:designates' :ed :y :k) & (prOnto:DPO :k)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":ei">ei</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:publicAuthority" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2081">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:largeScale" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Judicial" />
              <ruleml:Var key=":epu">epu</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isBasedOn" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":epu" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":ed">ed</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2082">
                <ruleml:Rel iri="prOnto:designates" />
                <ruleml:Var keyref=":ed" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var key=":k">k</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:DPO" />
                <ruleml:Var keyref=":k" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements199">
    <lrml:PrescriptiveStatement key="statements199Formula1">
      <!--
Permission:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :er1 :er2) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y2 :z) & (prOnto:Controller :y1 :z) & (prOnto:DPO :k)
	 & (prOnto:reachableFrom' :er1 :k :y1) & (prOnto:reachableFrom' :er2 :k :y2),

	(rioOnto:RexistAtTime :a2 :t2) & (rioOnto:and :a2 :ed1 :ed2) & (rioOnto:>= :t2 :t1) & (prOnto:designates' :ed1 :y1 :k)
	 & (prOnto:designates' :ed2 :y2 :k)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":er1">er1</ruleml:Var>
              <ruleml:Var key=":er2">er2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y2">y2</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y1">y1</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DPO" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2083">
              <ruleml:Rel iri="prOnto:reachableFrom" />
              <ruleml:Var keyref=":er1" />
              <ruleml:Var keyref=":k" />
              <ruleml:Var keyref=":y1" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2084">
              <ruleml:Rel iri="prOnto:reachableFrom" />
              <ruleml:Var keyref=":er2" />
              <ruleml:Var keyref=":k" />
              <ruleml:Var keyref=":y2" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Permission iri="rioOnto:Permission">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":a2">a2</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:and" />
                <ruleml:Var keyref=":a2" />
                <ruleml:Var key=":ed1">ed1</ruleml:Var>
                <ruleml:Var key=":ed2">ed2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2085">
                <ruleml:Rel iri="prOnto:designates" />
                <ruleml:Var keyref=":ed1" />
                <ruleml:Var keyref=":y1" />
                <ruleml:Var keyref=":k" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2086">
                <ruleml:Rel iri="prOnto:designates" />
                <ruleml:Var keyref=":ed2" />
                <ruleml:Var keyref=":y2" />
                <ruleml:Var keyref=":k" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Permission>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements200">
    <lrml:PrescriptiveStatement key="statements200Formula1">
      <!--
Permission:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep1 :ep2) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y2 :z) & (prOnto:Controller :y1 :z) & (prOnto:DPO :k)
	 & (prOnto:publicAuthority' :ep1 :y1) & (prOnto:publicAuthority' :ep2 :y2),

	(rioOnto:RexistAtTime :a2 :t2) & (rioOnto:and :a2 :ed1 :ed2) & (rioOnto:>= :t2 :t1) & (prOnto:designates' :ed1 :y1 :k)
	 & (prOnto:designates' :ed2 :y2 :k)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep1">ep1</ruleml:Var>
              <ruleml:Var key=":ep2">ep2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y2">y2</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y1">y1</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DPO" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2087">
              <ruleml:Rel iri="prOnto:publicAuthority" />
              <ruleml:Var keyref=":ep1" />
              <ruleml:Var keyref=":y1" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2088">
              <ruleml:Rel iri="prOnto:publicAuthority" />
              <ruleml:Var keyref=":ep2" />
              <ruleml:Var keyref=":y2" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Permission iri="rioOnto:Permission">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":a2">a2</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:and" />
                <ruleml:Var keyref=":a2" />
                <ruleml:Var key=":ed1">ed1</ruleml:Var>
                <ruleml:Var key=":ed2">ed2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2089">
                <ruleml:Rel iri="prOnto:designates" />
                <ruleml:Var keyref=":ed1" />
                <ruleml:Var keyref=":y1" />
                <ruleml:Var keyref=":k" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2090">
                <ruleml:Rel iri="prOnto:designates" />
                <ruleml:Var keyref=":ed2" />
                <ruleml:Var keyref=":y2" />
                <ruleml:Var keyref=":k" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Permission>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements200Formula2">
      <!--
Permission:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep1 :ep2 :edp1 :edp2) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x1) & (prOnto:Processor :x2)
	 & (prOnto:nominates' :edp1 :y :x1) & (prOnto:nominates' :edp2 :y :x2) & (prOnto:DPO :k)
	 & (prOnto:publicAuthority' :ep1 :x1) & (prOnto:publicAuthority' :ep2 :x2),

	(rioOnto:RexistAtTime :a2 :t2) & (rioOnto:and :a2 :ed1 :ed2) & (rioOnto:>= :t2 :t1) & (prOnto:designates' :ed1 :x1 :k)
	 & (prOnto:designates' :ed2 :x2 :k)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep1">ep1</ruleml:Var>
              <ruleml:Var key=":ep2">ep2</ruleml:Var>
              <ruleml:Var key=":edp1">edp1</ruleml:Var>
              <ruleml:Var key=":edp2">edp2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x1">x1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x2">x2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2091">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp1" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x1" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2092">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp2" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x2" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DPO" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2093">
              <ruleml:Rel iri="prOnto:publicAuthority" />
              <ruleml:Var keyref=":ep1" />
              <ruleml:Var keyref=":x1" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2094">
              <ruleml:Rel iri="prOnto:publicAuthority" />
              <ruleml:Var keyref=":ep2" />
              <ruleml:Var keyref=":x2" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Permission iri="rioOnto:Permission">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":a2">a2</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:and" />
                <ruleml:Var keyref=":a2" />
                <ruleml:Var key=":ed1">ed1</ruleml:Var>
                <ruleml:Var key=":ed2">ed2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2095">
                <ruleml:Rel iri="prOnto:designates" />
                <ruleml:Var keyref=":ed1" />
                <ruleml:Var keyref=":x1" />
                <ruleml:Var keyref=":k" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2096">
                <ruleml:Rel iri="prOnto:designates" />
                <ruleml:Var keyref=":ed2" />
                <ruleml:Var keyref=":x2" />
                <ruleml:Var keyref=":k" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Permission>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements201">
    <lrml:PrescriptiveStatement key="statements201Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :eor :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (rioOnto:or :eor :er1 :er2) & (prOnto:request' :er1 EuropeanUnion :ed)
	 & (prOnto:request' :er2 prOnto:MSof(:y) :ed) & (prOnto:designates' :ed :y :k) & (prOnto:DPO :k),

	(rioOnto:RexistAtTime :ed :t2) & (rioOnto:>= :t2 :t1)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":eor">eor</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2097">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2098">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eor" />
              <ruleml:Var key=":er1">er1</ruleml:Var>
              <ruleml:Var key=":er2">er2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2099">
              <ruleml:Rel iri="prOnto:request" />
              <ruleml:Var keyref=":er1" />
              <ruleml:Ind>EuropeanUnion</ruleml:Ind>
              <ruleml:Var key=":ed">ed</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2100">
              <ruleml:Rel iri="prOnto:request" />
              <ruleml:Var keyref=":er2" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:MSof" />
                <ruleml:Var keyref=":y" />
              </ruleml:Expr>
              <ruleml:Var keyref=":ed" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2101">
              <ruleml:Rel iri="prOnto:designates" />
              <ruleml:Var keyref=":ed" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DPO" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var keyref=":ed" />
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements201Formula2">
      <!--
Permission:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z),

	(rioOnto:RexistAtTime :ed :t2) & (rioOnto:>= :t2 :t1) & (prOnto:designates' :ed :y :k) & (prOnto:DPO :k)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2102">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2103">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Permission iri="rioOnto:Permission">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":ed">ed</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2104">
                <ruleml:Rel iri="prOnto:designates" />
                <ruleml:Var keyref=":ed" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var key=":k">k</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:DPO" />
                <ruleml:Var keyref=":k" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Permission>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements202">
    <lrml:PrescriptiveStatement key="statements202Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :ed :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:designates' :ed :y :k) & (prOnto:DPO :k),

	(rioOnto:RexistAtTime :a2 :t2) & (rioOnto:>= :t1 :t2) & (rioOnto:and :a2 :ex :ea1 :ea2 :ea3 :ea4 :ea5) & (prOnto:expertIn' :ex :k GDPR)
	 & (prOnto:ableTo' :ea1 :k :en) & (prOnto:Communicate' :en :k :p :eob) & (rioOnto:Obliged' :eob :p :e :t1)
	 & (prOnto:ableTo' :ea2 :k :em1) & (prOnto:monitor' :em1 :k :eco1) & (prOnto:complyWith' :eco1 :ep GDPR)
	 & (prOnto:ableTo' :ea3 :k :em2) & (prOnto:monitor' :em2 :k :eco2) & (prOnto:complyWith' :eco2 :ep EuropeanUnion)
	 & (prOnto:ableTo' :ea4 :k :em3) & (prOnto:monitor' :em3 :k :eco3) & (prOnto:complyWith' :eco3 :ep prOnto:MSof(:y))
	 & (prOnto:ableTo' :ea5 :k :em4) & (prOnto:monitor' :em4 :k :eco4) & (prOnto:complyWith' :eco4 :ep :dpp)
	 & (prOnto:dataProtectionPolicies :dpp)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":ed">ed</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2105">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2106">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2107">
              <ruleml:Rel iri="prOnto:designates" />
              <ruleml:Var keyref=":ed" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DPO" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":a2">a2</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t1" />
                <ruleml:Var keyref=":t2" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:and" />
                <ruleml:Var keyref=":a2" />
                <ruleml:Var key=":ex">ex</ruleml:Var>
                <ruleml:Var key=":ea1">ea1</ruleml:Var>
                <ruleml:Var key=":ea2">ea2</ruleml:Var>
                <ruleml:Var key=":ea3">ea3</ruleml:Var>
                <ruleml:Var key=":ea4">ea4</ruleml:Var>
                <ruleml:Var key=":ea5">ea5</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2108">
                <ruleml:Rel iri="prOnto:expertIn" />
                <ruleml:Var keyref=":ex" />
                <ruleml:Var keyref=":k" />
                <ruleml:Ind>GDPR</ruleml:Ind>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2109">
                <ruleml:Rel iri="prOnto:ableTo" />
                <ruleml:Var keyref=":ea1" />
                <ruleml:Var keyref=":k" />
                <ruleml:Var key=":en">en</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2110">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en" />
                <ruleml:Var keyref=":k" />
                <ruleml:Var key=":p">p</ruleml:Var>
                <ruleml:Var keyref=":eob" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2111">
                <ruleml:Rel iri="rioOnto:Obliged" />
                <ruleml:Var keyref=":eob" />
                <ruleml:Var keyref=":p" />
                <ruleml:Var key=":e">e</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2112">
                <ruleml:Rel iri="prOnto:ableTo" />
                <ruleml:Var keyref=":ea2" />
                <ruleml:Var keyref=":k" />
                <ruleml:Var key=":em1">em1</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2113">
                <ruleml:Rel iri="prOnto:monitor" />
                <ruleml:Var keyref=":em1" />
                <ruleml:Var keyref=":k" />
                <ruleml:Var key=":eco1">eco1</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2114">
                <ruleml:Rel iri="prOnto:complyWith" />
                <ruleml:Var keyref=":eco1" />
                <ruleml:Var keyref=":ep" />
                <ruleml:Ind>GDPR</ruleml:Ind>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2115">
                <ruleml:Rel iri="prOnto:ableTo" />
                <ruleml:Var keyref=":ea3" />
                <ruleml:Var keyref=":k" />
                <ruleml:Var key=":em2">em2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2116">
                <ruleml:Rel iri="prOnto:monitor" />
                <ruleml:Var keyref=":em2" />
                <ruleml:Var keyref=":k" />
                <ruleml:Var key=":eco2">eco2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2117">
                <ruleml:Rel iri="prOnto:complyWith" />
                <ruleml:Var keyref=":eco2" />
                <ruleml:Var keyref=":ep" />
                <ruleml:Ind>EuropeanUnion</ruleml:Ind>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2118">
                <ruleml:Rel iri="prOnto:ableTo" />
                <ruleml:Var keyref=":ea4" />
                <ruleml:Var keyref=":k" />
                <ruleml:Var key=":em3">em3</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2119">
                <ruleml:Rel iri="prOnto:monitor" />
                <ruleml:Var keyref=":em3" />
                <ruleml:Var keyref=":k" />
                <ruleml:Var key=":eco3">eco3</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2120">
                <ruleml:Rel iri="prOnto:complyWith" />
                <ruleml:Var keyref=":eco3" />
                <ruleml:Var keyref=":ep" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:MSof" />
                  <ruleml:Var keyref=":y" />
                </ruleml:Expr>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2121">
                <ruleml:Rel iri="prOnto:ableTo" />
                <ruleml:Var keyref=":ea5" />
                <ruleml:Var keyref=":k" />
                <ruleml:Var key=":em4">em4</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2122">
                <ruleml:Rel iri="prOnto:monitor" />
                <ruleml:Var keyref=":em4" />
                <ruleml:Var keyref=":k" />
                <ruleml:Var key=":eco4">eco4</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2123">
                <ruleml:Rel iri="prOnto:complyWith" />
                <ruleml:Var keyref=":eco4" />
                <ruleml:Var keyref=":ep" />
                <ruleml:Var key=":dpp">dpp</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:dataProtectionPolicies" />
                <ruleml:Var keyref=":dpp" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements203">
    <lrml:PrescriptiveStatement key="statements203Formula1">
      <!--
Permission:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :ed :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:designates' :ed :y :k) & (prOnto:DPO :k),

	(rioOnto:RexistAtTime :eor :t1) & (rioOnto:or :eor :ew1 :ew2 :a2) & (prOnto:workIn' :ew1 :k :y) & (prOnto:workIn' :ew2 :k :x)
	 & (rioOnto:and :a2 :epa1 :epa2) & (prOnto:contract :c) & (prOnto:partyOf' :epa1 :k :c)
	 & (prOnto:partyOf' :epa2 :y :c)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":ed">ed</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2124">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2125">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2126">
              <ruleml:Rel iri="prOnto:designates" />
              <ruleml:Var keyref=":ed" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DPO" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Permission iri="rioOnto:Permission">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":eor">eor</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:or" />
                <ruleml:Var keyref=":eor" />
                <ruleml:Var key=":ew1">ew1</ruleml:Var>
                <ruleml:Var key=":ew2">ew2</ruleml:Var>
                <ruleml:Var key=":a2">a2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2127">
                <ruleml:Rel iri="prOnto:workIn" />
                <ruleml:Var keyref=":ew1" />
                <ruleml:Var key=":k">k</ruleml:Var>
                <ruleml:Var keyref=":y" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2128">
                <ruleml:Rel iri="prOnto:workIn" />
                <ruleml:Var keyref=":ew2" />
                <ruleml:Var keyref=":k" />
                <ruleml:Var keyref=":x" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:and" />
                <ruleml:Var keyref=":a2" />
                <ruleml:Var key=":epa1">epa1</ruleml:Var>
                <ruleml:Var key=":epa2">epa2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:contract" />
                <ruleml:Var key=":c">c</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2129">
                <ruleml:Rel iri="prOnto:partyOf" />
                <ruleml:Var keyref=":epa1" />
                <ruleml:Var keyref=":k" />
                <ruleml:Var keyref=":c" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2130">
                <ruleml:Rel iri="prOnto:partyOf" />
                <ruleml:Var keyref=":epa2" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":c" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Permission>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements204">
    <lrml:PrescriptiveStatement key="statements204Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :ed :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:designates' :ed :y :k) & (prOnto:DPO :k),

	(rioOnto:RexistAtTime :eor :t2) & (rioOnto:>= :t2 :t1) & (rioOnto:or :eor :epu1 :epu2) & (prOnto:publish' :epu1 :y prOnto:contactDetails(:k))
	 & (prOnto:publish' :epu2 :x prOnto:contactDetails(:k))
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":ed">ed</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2131">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2132">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2133">
              <ruleml:Rel iri="prOnto:designates" />
              <ruleml:Var keyref=":ed" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DPO" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":eor">eor</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:or" />
                <ruleml:Var keyref=":eor" />
                <ruleml:Var key=":epu1">epu1</ruleml:Var>
                <ruleml:Var key=":epu2">epu2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2134">
                <ruleml:Rel iri="prOnto:publish" />
                <ruleml:Var keyref=":epu1" />
                <ruleml:Var keyref=":y" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:contactDetails" />
                  <ruleml:Var keyref=":k" />
                </ruleml:Expr>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2135">
                <ruleml:Rel iri="prOnto:publish" />
                <ruleml:Var keyref=":epu2" />
                <ruleml:Var keyref=":x" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:contactDetails" />
                  <ruleml:Var keyref=":k" />
                </ruleml:Expr>
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements204Formula2">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :ed :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:designates' :ed :y :k) & (prOnto:DPO :k),

	(rioOnto:RexistAtTime :eor :t2) & (rioOnto:>= :t2 :t1) & (rioOnto:or :eor :en1 :en2) & (prOnto:Communicate' :en1 :y prOnto:supAuth(prOnto:MSof(:y)) prOnto:contactDetails(:k))
	 & (prOnto:Communicate' :en2 :x prOnto:supAuth(prOnto:MSof(:y)) prOnto:contactDetails(:k))
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":ed">ed</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2136">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2137">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2138">
              <ruleml:Rel iri="prOnto:designates" />
              <ruleml:Var keyref=":ed" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DPO" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":eor">eor</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:or" />
                <ruleml:Var keyref=":eor" />
                <ruleml:Var key=":en1">en1</ruleml:Var>
                <ruleml:Var key=":en2">en2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2139">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en1" />
                <ruleml:Var keyref=":y" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:supAuth" />
                  <ruleml:Expr>
                    <ruleml:Fun iri="prOnto:MSof" />
                    <ruleml:Var keyref=":y" />
                  </ruleml:Expr>
                </ruleml:Expr>
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:contactDetails" />
                  <ruleml:Var keyref=":k" />
                </ruleml:Expr>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2140">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en2" />
                <ruleml:Var keyref=":x" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:supAuth" />
                  <ruleml:Expr>
                    <ruleml:Fun iri="prOnto:MSof" />
                    <ruleml:Var keyref=":y" />
                  </ruleml:Expr>
                </ruleml:Expr>
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:contactDetails" />
                  <ruleml:Var keyref=":k" />
                </ruleml:Expr>
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements205">
    <lrml:PrescriptiveStatement key="statements205Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :ed :ert :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:designates' :ed :y :k) & (prOnto:DPO :k)
	 & (prOnto:relatedTo' :ert :e GDPR),

	(rioOnto:RexistAtTime :a2 :t2) & (rioOnto:and :a2 :ery :erx) & (rioOnto:>= :t2 :t1) & (prOnto:request' :ery :y :eas)
	 & (prOnto:request' :erx :x :eas) & (prOnto:assistFor' :eas :k :y :e) & (prOnto:nonDelayed :ery)
	 & (prOnto:appropriate :ery) & (prOnto:nonDelayed :erx) & (prOnto:appropriate :erx)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":ed">ed</ruleml:Var>
              <ruleml:Var key=":ert">ert</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2141">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2142">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2143">
              <ruleml:Rel iri="prOnto:designates" />
              <ruleml:Var keyref=":ed" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DPO" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2144">
              <ruleml:Rel iri="prOnto:relatedTo" />
              <ruleml:Var keyref=":ert" />
              <ruleml:Var key=":e">e</ruleml:Var>
              <ruleml:Ind>GDPR</ruleml:Ind>
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":a2">a2</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:and" />
                <ruleml:Var keyref=":a2" />
                <ruleml:Var key=":ery">ery</ruleml:Var>
                <ruleml:Var key=":erx">erx</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2145">
                <ruleml:Rel iri="prOnto:request" />
                <ruleml:Var keyref=":ery" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var key=":eas">eas</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2146">
                <ruleml:Rel iri="prOnto:request" />
                <ruleml:Var keyref=":erx" />
                <ruleml:Var keyref=":x" />
                <ruleml:Var keyref=":eas" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2147">
                <ruleml:Rel iri="prOnto:assistFor" />
                <ruleml:Var keyref=":eas" />
                <ruleml:Var keyref=":k" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":e" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:nonDelayed" />
                <ruleml:Var keyref=":ery" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:appropriate" />
                <ruleml:Var keyref=":ery" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:nonDelayed" />
                <ruleml:Var keyref=":erx" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:appropriate" />
                <ruleml:Var keyref=":erx" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements206">
    <lrml:PrescriptiveStatement key="statements206Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :ed :eor :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:designates' :ed :y :k) & (prOnto:DPO :k)
	 & (rioOnto:or :eor :en :em1 :em2 :em3 :em4) & (prOnto:Communicate' :en :k :p :eob) & (rioOnto:Obliged' :eob :p :e :t1)
	 & (prOnto:monitor' :em1 :k :eco1) & (prOnto:complyWith' :eco1 :ep GDPR) & (prOnto:monitor' :em2 :k :eco2)
	 & (prOnto:complyWith' :eco2 :ep EuropeanUnion) & (prOnto:monitor' :em3 :k :eco3) & (prOnto:complyWith' :eco3 :ep prOnto:MSof(:y))
	 & (prOnto:monitor' :em4 :k :eco4) & (prOnto:complyWith' :eco4 :ep :dpp) & (prOnto:dataProtectionPolicies :dpp),

	(rioOnto:RexistAtTime :a2 :t2) & (rioOnto:and :a2 :eas1 :eas2) & (rioOnto:>= :t2 :t1) & (prOnto:assistFor' :eas1 :y :k :eor)
	 & (prOnto:assistFor' :eas2 :x :k :eor)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":ed">ed</ruleml:Var>
              <ruleml:Var key=":eor">eor</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2148">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2149">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2150">
              <ruleml:Rel iri="prOnto:designates" />
              <ruleml:Var keyref=":ed" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DPO" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eor" />
              <ruleml:Var key=":en">en</ruleml:Var>
              <ruleml:Var key=":em1">em1</ruleml:Var>
              <ruleml:Var key=":em2">em2</ruleml:Var>
              <ruleml:Var key=":em3">em3</ruleml:Var>
              <ruleml:Var key=":em4">em4</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2151">
              <ruleml:Rel iri="prOnto:Communicate" />
              <ruleml:Var keyref=":en" />
              <ruleml:Var keyref=":k" />
              <ruleml:Var key=":p">p</ruleml:Var>
              <ruleml:Var keyref=":eob" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2152">
              <ruleml:Rel iri="rioOnto:Obliged" />
              <ruleml:Var keyref=":eob" />
              <ruleml:Var keyref=":p" />
              <ruleml:Var key=":e">e</ruleml:Var>
              <ruleml:Var keyref=":t1" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2153">
              <ruleml:Rel iri="prOnto:monitor" />
              <ruleml:Var keyref=":em1" />
              <ruleml:Var keyref=":k" />
              <ruleml:Var key=":eco1">eco1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2154">
              <ruleml:Rel iri="prOnto:complyWith" />
              <ruleml:Var keyref=":eco1" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Ind>GDPR</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2155">
              <ruleml:Rel iri="prOnto:monitor" />
              <ruleml:Var keyref=":em2" />
              <ruleml:Var keyref=":k" />
              <ruleml:Var key=":eco2">eco2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2156">
              <ruleml:Rel iri="prOnto:complyWith" />
              <ruleml:Var keyref=":eco2" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Ind>EuropeanUnion</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2157">
              <ruleml:Rel iri="prOnto:monitor" />
              <ruleml:Var keyref=":em3" />
              <ruleml:Var keyref=":k" />
              <ruleml:Var key=":eco3">eco3</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2158">
              <ruleml:Rel iri="prOnto:complyWith" />
              <ruleml:Var keyref=":eco3" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:MSof" />
                <ruleml:Var keyref=":y" />
              </ruleml:Expr>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2159">
              <ruleml:Rel iri="prOnto:monitor" />
              <ruleml:Var keyref=":em4" />
              <ruleml:Var keyref=":k" />
              <ruleml:Var key=":eco4">eco4</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2160">
              <ruleml:Rel iri="prOnto:complyWith" />
              <ruleml:Var keyref=":eco4" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var key=":dpp">dpp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:dataProtectionPolicies" />
              <ruleml:Var keyref=":dpp" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":a2">a2</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:and" />
                <ruleml:Var keyref=":a2" />
                <ruleml:Var key=":eas1">eas1</ruleml:Var>
                <ruleml:Var key=":eas2">eas2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2161">
                <ruleml:Rel iri="prOnto:assistFor" />
                <ruleml:Var keyref=":eas1" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":k" />
                <ruleml:Var keyref=":eor" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2162">
                <ruleml:Rel iri="prOnto:assistFor" />
                <ruleml:Var keyref=":eas2" />
                <ruleml:Var keyref=":x" />
                <ruleml:Var keyref=":k" />
                <ruleml:Var keyref=":eor" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements207">
    <lrml:PrescriptiveStatement key="statements207Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :ed :eob :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:designates' :ed :y :k) & (prOnto:DPO :k)
	 & (rioOnto:Obliged' :eob :k :e :t1),

	(rioOnto:RexistAtTime :a2 :t2) & (rioOnto:and :a2 :eny :enx :enc1 :enc2 :eor) & (rioOnto:>= :t2 :t1) & (rioOnto:not :eny :ead)
	 & (rioOnto:not :enx :eaf) & (prOnto:adviseOn' :ead :x :k :e) & (rioOnto:not :enc1 :ec1)
	 & (rioOnto:cause' :ec1 :e :edm) & (prOnto:dismiss' :edm :y :k) & (rioOnto:not :enc2 :ec2)
	 & (rioOnto:cause' :ec2 :e :epe) & (prOnto:penalise' :epe :y :k) & (rioOnto:or :eor :en1 :en2)
	 & (prOnto:Communicate' :en1 :k prOnto:highestManagementLevel(:y) prOnto:allInfoAbout(:e)) & (prOnto:Communicate' :en2 :k prOnto:highestManagementLevel(:x) prOnto:allInfoAbout(:e))
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":ed">ed</ruleml:Var>
              <ruleml:Var key=":eob">eob</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2163">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2164">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2165">
              <ruleml:Rel iri="prOnto:designates" />
              <ruleml:Var keyref=":ed" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DPO" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2166">
              <ruleml:Rel iri="rioOnto:Obliged" />
              <ruleml:Var keyref=":eob" />
              <ruleml:Var keyref=":k" />
              <ruleml:Var key=":e">e</ruleml:Var>
              <ruleml:Var keyref=":t1" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":a2">a2</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:and" />
                <ruleml:Var keyref=":a2" />
                <ruleml:Var key=":eny">eny</ruleml:Var>
                <ruleml:Var key=":enx">enx</ruleml:Var>
                <ruleml:Var key=":enc1">enc1</ruleml:Var>
                <ruleml:Var key=":enc2">enc2</ruleml:Var>
                <ruleml:Var key=":eor">eor</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:not" />
                <ruleml:Var keyref=":eny" />
                <ruleml:Var key=":ead">ead</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:not" />
                <ruleml:Var keyref=":enx" />
                <ruleml:Var keyref=":eaf" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2167">
                <ruleml:Rel iri="prOnto:adviseOn" />
                <ruleml:Var keyref=":ead" />
                <ruleml:Var keyref=":x" />
                <ruleml:Var keyref=":k" />
                <ruleml:Var keyref=":e" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:not" />
                <ruleml:Var keyref=":enc1" />
                <ruleml:Var key=":ec1">ec1</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2168">
                <ruleml:Rel iri="rioOnto:cause" />
                <ruleml:Var keyref=":ec1" />
                <ruleml:Var keyref=":e" />
                <ruleml:Var key=":edm">edm</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2169">
                <ruleml:Rel iri="prOnto:dismiss" />
                <ruleml:Var keyref=":edm" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":k" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:not" />
                <ruleml:Var keyref=":enc2" />
                <ruleml:Var key=":ec2">ec2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2170">
                <ruleml:Rel iri="rioOnto:cause" />
                <ruleml:Var keyref=":ec2" />
                <ruleml:Var keyref=":e" />
                <ruleml:Var key=":epe">epe</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2171">
                <ruleml:Rel iri="prOnto:penalise" />
                <ruleml:Var keyref=":epe" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":k" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:or" />
                <ruleml:Var keyref=":eor" />
                <ruleml:Var key=":en1">en1</ruleml:Var>
                <ruleml:Var key=":en2">en2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2172">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en1" />
                <ruleml:Var keyref=":k" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:highestManagementLevel" />
                  <ruleml:Var keyref=":y" />
                </ruleml:Expr>
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:allInfoAbout" />
                  <ruleml:Var keyref=":e" />
                </ruleml:Expr>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2173">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en2" />
                <ruleml:Var keyref=":k" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:highestManagementLevel" />
                  <ruleml:Var keyref=":x" />
                </ruleml:Expr>
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:allInfoAbout" />
                  <ruleml:Var keyref=":e" />
                </ruleml:Expr>
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements208">
    <lrml:PrescriptiveStatement key="statements208Formula1">
      <!--
Permission:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :ed :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:designates' :ed :y :k) & (prOnto:DPO :k),

	(rioOnto:RexistAtTime :er :t1) & (prOnto:request' :er :w :eas) & (prOnto:assistFor' :eas :k :w :ep)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":ed">ed</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2174">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2175">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2176">
              <ruleml:Rel iri="prOnto:designates" />
              <ruleml:Var keyref=":ed" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DPO" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Permission iri="rioOnto:Permission">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":er">er</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2177">
                <ruleml:Rel iri="prOnto:request" />
                <ruleml:Var keyref=":er" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var key=":eas">eas</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2178">
                <ruleml:Rel iri="prOnto:assistFor" />
                <ruleml:Var keyref=":eas" />
                <ruleml:Var keyref=":k" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Permission>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements208Formula2">
      <!--
Permission:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :ed :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:designates' :ed :y :k) & (prOnto:DPO :k),

	(rioOnto:RexistAtTime :er :t1) & (prOnto:request' :er :w :eas) & (prOnto:assistFor' :eas :k :w :erf) & (prOnto:rightsAndFreedomsOf' :erf :w)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":ed">ed</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2179">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2180">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2181">
              <ruleml:Rel iri="prOnto:designates" />
              <ruleml:Var keyref=":ed" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DPO" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Permission iri="rioOnto:Permission">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":er">er</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2182">
                <ruleml:Rel iri="prOnto:request" />
                <ruleml:Var keyref=":er" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var key=":eas">eas</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2183">
                <ruleml:Rel iri="prOnto:assistFor" />
                <ruleml:Var keyref=":eas" />
                <ruleml:Var keyref=":k" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var key=":erf">erf</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2184">
                <ruleml:Rel iri="prOnto:rightsAndFreedomsOf" />
                <ruleml:Var keyref=":erf" />
                <ruleml:Var keyref=":w" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Permission>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements209">
    <lrml:PrescriptiveStatement key="statements209Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :ed :eob :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:designates' :ed :y :k) & (prOnto:DPO :k)
	 & (rioOnto:Obliged' :eob :k :e :t1),

	(rioOnto:RexistAtTime :ecw :t1) & (prOnto:confidentialWrt' :ecw :k :e)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":ed">ed</ruleml:Var>
              <ruleml:Var key=":eob">eob</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2185">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2186">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2187">
              <ruleml:Rel iri="prOnto:designates" />
              <ruleml:Var keyref=":ed" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DPO" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2188">
              <ruleml:Rel iri="rioOnto:Obliged" />
              <ruleml:Var keyref=":eob" />
              <ruleml:Var keyref=":k" />
              <ruleml:Var key=":e">e</ruleml:Var>
              <ruleml:Var keyref=":t1" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":ecw">ecw</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2189">
                <ruleml:Rel iri="prOnto:confidentialWrt" />
                <ruleml:Var keyref=":ecw" />
                <ruleml:Var keyref=":k" />
                <ruleml:Var keyref=":e" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements210">
    <lrml:PrescriptiveStatement key="statements210Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :ed :eob :ee :enr :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:designates' :ed :y :k) & (prOnto:DPO :k)
	 & (rioOnto:Obliged' :eob :k :e1 :t1) & (prOnto:execute' :ee :k :e2) & (rioOnto:not :enr :ert)
	 & (prOnto:relatedTo' :ert :e2 :eob),

	(rioOnto:RexistAtTime :eni :t1) & (rioOnto:not :eni :eci) & (prOnto:conflictOfInterest' :eci :e1 :e2)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":ed">ed</ruleml:Var>
              <ruleml:Var key=":eob">eob</ruleml:Var>
              <ruleml:Var key=":ee">ee</ruleml:Var>
              <ruleml:Var key=":enr">enr</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2190">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2191">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2192">
              <ruleml:Rel iri="prOnto:designates" />
              <ruleml:Var keyref=":ed" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DPO" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2193">
              <ruleml:Rel iri="rioOnto:Obliged" />
              <ruleml:Var keyref=":eob" />
              <ruleml:Var keyref=":k" />
              <ruleml:Var key=":e1">e1</ruleml:Var>
              <ruleml:Var keyref=":t1" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2194">
              <ruleml:Rel iri="prOnto:execute" />
              <ruleml:Var keyref=":ee" />
              <ruleml:Var keyref=":k" />
              <ruleml:Var key=":e2">e2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":enr" />
              <ruleml:Var key=":ert">ert</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2195">
              <ruleml:Rel iri="prOnto:relatedTo" />
              <ruleml:Var keyref=":ert" />
              <ruleml:Var keyref=":e2" />
              <ruleml:Var key=":eob">eob</ruleml:Var>
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":eni">eni</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:not" />
                <ruleml:Var keyref=":eni" />
                <ruleml:Var key=":eci">eci</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2196">
                <ruleml:Rel iri="prOnto:conflictOfInterest" />
                <ruleml:Var keyref=":eci" />
                <ruleml:Var keyref=":e1" />
                <ruleml:Var keyref=":e2" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements211">
    <lrml:PrescriptiveStatement key="statements211Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :ed :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:designates' :ed :y :k) & (prOnto:DPO :k),

	(rioOnto:RexistAtTime :a2 :t1) & (rioOnto:and :a2 :en :eob :eor) & (prOnto:Communicate' :en :k :y :eob) & (rioOnto:Obliged' :eob :y :e :t1)
	 & (rioOnto:or :eor :er1 :er2 :er3) & (prOnto:relatedTo' :er1 :e GDPR) & (prOnto:relatedTo' :er2 :e EuropeanUnion)
	 & (prOnto:relatedTo' :er3 :e prOnto:MSof(:y))
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":ed">ed</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2197">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2198">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2199">
              <ruleml:Rel iri="prOnto:designates" />
              <ruleml:Var keyref=":ed" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DPO" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":a2">a2</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:and" />
                <ruleml:Var keyref=":a2" />
                <ruleml:Var key=":en">en</ruleml:Var>
                <ruleml:Var key=":eob">eob</ruleml:Var>
                <ruleml:Var key=":eor">eor</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2200">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en" />
                <ruleml:Var keyref=":k" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":eob" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2201">
                <ruleml:Rel iri="rioOnto:Obliged" />
                <ruleml:Var keyref=":eob" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var key=":e">e</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:or" />
                <ruleml:Var keyref=":eor" />
                <ruleml:Var key=":er1">er1</ruleml:Var>
                <ruleml:Var key=":er2">er2</ruleml:Var>
                <ruleml:Var key=":er3">er3</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2202">
                <ruleml:Rel iri="prOnto:relatedTo" />
                <ruleml:Var keyref=":er1" />
                <ruleml:Var keyref=":e" />
                <ruleml:Ind>GDPR</ruleml:Ind>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2203">
                <ruleml:Rel iri="prOnto:relatedTo" />
                <ruleml:Var keyref=":er2" />
                <ruleml:Var keyref=":e" />
                <ruleml:Ind>EuropeanUnion</ruleml:Ind>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2204">
                <ruleml:Rel iri="prOnto:relatedTo" />
                <ruleml:Var keyref=":er3" />
                <ruleml:Var keyref=":e" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:MSof" />
                  <ruleml:Var keyref=":y" />
                </ruleml:Expr>
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements211Formula2">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :ed :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:designates' :ed :y :k) & (prOnto:DPO :k),

	(rioOnto:RexistAtTime :a2 :t1) & (rioOnto:and :a2 :en :eob :eor) & (prOnto:Communicate' :en :k :x :eob) & (rioOnto:Obliged' :eob :x :e :t1)
	 & (rioOnto:or :eor :er1 :er2 :er3) & (prOnto:relatedTo' :er1 :e GDPR) & (prOnto:relatedTo' :er2 :e EuropeanUnion)
	 & (prOnto:relatedTo' :er3 :e prOnto:MSof(:y))
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":ed">ed</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2205">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2206">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2207">
              <ruleml:Rel iri="prOnto:designates" />
              <ruleml:Var keyref=":ed" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DPO" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":a2">a2</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:and" />
                <ruleml:Var keyref=":a2" />
                <ruleml:Var key=":en">en</ruleml:Var>
                <ruleml:Var key=":eob">eob</ruleml:Var>
                <ruleml:Var key=":eor">eor</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2208">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en" />
                <ruleml:Var keyref=":k" />
                <ruleml:Var keyref=":x" />
                <ruleml:Var keyref=":eob" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2209">
                <ruleml:Rel iri="rioOnto:Obliged" />
                <ruleml:Var keyref=":eob" />
                <ruleml:Var keyref=":x" />
                <ruleml:Var key=":e">e</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:or" />
                <ruleml:Var keyref=":eor" />
                <ruleml:Var key=":er1">er1</ruleml:Var>
                <ruleml:Var key=":er2">er2</ruleml:Var>
                <ruleml:Var key=":er3">er3</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2210">
                <ruleml:Rel iri="prOnto:relatedTo" />
                <ruleml:Var keyref=":er1" />
                <ruleml:Var keyref=":e" />
                <ruleml:Ind>GDPR</ruleml:Ind>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2211">
                <ruleml:Rel iri="prOnto:relatedTo" />
                <ruleml:Var keyref=":er2" />
                <ruleml:Var keyref=":e" />
                <ruleml:Ind>EuropeanUnion</ruleml:Ind>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2212">
                <ruleml:Rel iri="prOnto:relatedTo" />
                <ruleml:Var keyref=":er3" />
                <ruleml:Var keyref=":e" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:MSof" />
                  <ruleml:Var keyref=":y" />
                </ruleml:Expr>
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements211Formula3">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :ed :ee :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:designates' :ed :y :k) & (prOnto:DPO :k)
	 & (prOnto:execute' :ee :p :et) & (prOnto:relatedTo :et :ep),

	(rioOnto:RexistAtTime :a2 :t1) & (rioOnto:and :a2 :en :eob :eor) & (prOnto:Communicate' :en :k :p :eob) & (rioOnto:Obliged' :eob :p :e :t1)
	 & (rioOnto:or :eor :er1 :er2 :er3) & (prOnto:relatedTo' :er1 :e GDPR) & (prOnto:relatedTo' :er2 :e EuropeanUnion)
	 & (prOnto:relatedTo' :er3 :e prOnto:MSof(:y))
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":ed">ed</ruleml:Var>
              <ruleml:Var key=":ee">ee</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2213">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2214">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2215">
              <ruleml:Rel iri="prOnto:designates" />
              <ruleml:Var keyref=":ed" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DPO" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2216">
              <ruleml:Rel iri="prOnto:execute" />
              <ruleml:Var keyref=":ee" />
              <ruleml:Var key=":p">p</ruleml:Var>
              <ruleml:Var key=":et">et</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:relatedTo" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":a2">a2</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:and" />
                <ruleml:Var keyref=":a2" />
                <ruleml:Var key=":en">en</ruleml:Var>
                <ruleml:Var key=":eob">eob</ruleml:Var>
                <ruleml:Var key=":eor">eor</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2217">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en" />
                <ruleml:Var keyref=":k" />
                <ruleml:Var keyref=":p" />
                <ruleml:Var keyref=":eob" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2218">
                <ruleml:Rel iri="rioOnto:Obliged" />
                <ruleml:Var keyref=":eob" />
                <ruleml:Var keyref=":p" />
                <ruleml:Var key=":e">e</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:or" />
                <ruleml:Var keyref=":eor" />
                <ruleml:Var key=":er1">er1</ruleml:Var>
                <ruleml:Var key=":er2">er2</ruleml:Var>
                <ruleml:Var key=":er3">er3</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2219">
                <ruleml:Rel iri="prOnto:relatedTo" />
                <ruleml:Var keyref=":er1" />
                <ruleml:Var keyref=":e" />
                <ruleml:Ind>GDPR</ruleml:Ind>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2220">
                <ruleml:Rel iri="prOnto:relatedTo" />
                <ruleml:Var keyref=":er2" />
                <ruleml:Var keyref=":e" />
                <ruleml:Ind>EuropeanUnion</ruleml:Ind>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2221">
                <ruleml:Rel iri="prOnto:relatedTo" />
                <ruleml:Var keyref=":er3" />
                <ruleml:Var keyref=":e" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:MSof" />
                  <ruleml:Var keyref=":y" />
                </ruleml:Expr>
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements212">
    <lrml:PrescriptiveStatement key="statements212Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :ed :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:designates' :ed :y :k) & (prOnto:DPO :k),

	(rioOnto:RexistAtTime :a2 :t1) & (rioOnto:and :a2 :em1 :em2 :em3 :em4) & (prOnto:monitor' :em1 :k :eco1) & (prOnto:complyWith' :eco1 :ep GDPR)
	 & (prOnto:monitor' :em2 :k :eco2) & (prOnto:complyWith' :eco2 :ep EuropeanUnion) & (prOnto:monitor' :em3 :k :eco3)
	 & (prOnto:complyWith' :eco3 :ep prOnto:MSof(:y)) & (prOnto:monitor' :em4 :k :eco4) & (prOnto:complyWith' :eco4 :ep :dpp)
	 & (prOnto:dataProtectionPolicies :dpp)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":ed">ed</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2222">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2223">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2224">
              <ruleml:Rel iri="prOnto:designates" />
              <ruleml:Var keyref=":ed" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DPO" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":a2">a2</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:and" />
                <ruleml:Var keyref=":a2" />
                <ruleml:Var key=":em1">em1</ruleml:Var>
                <ruleml:Var key=":em2">em2</ruleml:Var>
                <ruleml:Var key=":em3">em3</ruleml:Var>
                <ruleml:Var key=":em4">em4</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2225">
                <ruleml:Rel iri="prOnto:monitor" />
                <ruleml:Var keyref=":em1" />
                <ruleml:Var keyref=":k" />
                <ruleml:Var key=":eco1">eco1</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2226">
                <ruleml:Rel iri="prOnto:complyWith" />
                <ruleml:Var keyref=":eco1" />
                <ruleml:Var keyref=":ep" />
                <ruleml:Ind>GDPR</ruleml:Ind>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2227">
                <ruleml:Rel iri="prOnto:monitor" />
                <ruleml:Var keyref=":em2" />
                <ruleml:Var keyref=":k" />
                <ruleml:Var key=":eco2">eco2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2228">
                <ruleml:Rel iri="prOnto:complyWith" />
                <ruleml:Var keyref=":eco2" />
                <ruleml:Var keyref=":ep" />
                <ruleml:Ind>EuropeanUnion</ruleml:Ind>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2229">
                <ruleml:Rel iri="prOnto:monitor" />
                <ruleml:Var keyref=":em3" />
                <ruleml:Var keyref=":k" />
                <ruleml:Var key=":eco3">eco3</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2230">
                <ruleml:Rel iri="prOnto:complyWith" />
                <ruleml:Var keyref=":eco3" />
                <ruleml:Var keyref=":ep" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:MSof" />
                  <ruleml:Var keyref=":y" />
                </ruleml:Expr>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2231">
                <ruleml:Rel iri="prOnto:monitor" />
                <ruleml:Var keyref=":em4" />
                <ruleml:Var keyref=":k" />
                <ruleml:Var key=":eco4">eco4</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2232">
                <ruleml:Rel iri="prOnto:complyWith" />
                <ruleml:Var keyref=":eco4" />
                <ruleml:Var keyref=":ep" />
                <ruleml:Var key=":dpp">dpp</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:dataProtectionPolicies" />
                <ruleml:Var keyref=":dpp" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements213">
    <lrml:PrescriptiveStatement key="statements213Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :ev :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:verify' :ev :y :eco) & (prOnto:complyWith' :eco :ep GDPR)
	 & (prOnto:DPO :k) & (prOnto:designates' :ed :y :k),

	(rioOnto:RexistAtTime :a2 :t1) & (rioOnto:and :a2 :eas :em) & (prOnto:assistFor' :eas :k :y :ev) & (prOnto:monitor' :em :k :ev)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":ev">ev</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2233">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2234">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2235">
              <ruleml:Rel iri="prOnto:verify" />
              <ruleml:Var keyref=":ev" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":eco">eco</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2236">
              <ruleml:Rel iri="prOnto:complyWith" />
              <ruleml:Var keyref=":eco" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Ind>GDPR</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DPO" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2237">
              <ruleml:Rel iri="prOnto:designates" />
              <ruleml:Var keyref=":ed" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var keyref=":a2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:and" />
                <ruleml:Var keyref=":a2" />
                <ruleml:Var key=":eas">eas</ruleml:Var>
                <ruleml:Var key=":em">em</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2238">
                <ruleml:Rel iri="prOnto:assistFor" />
                <ruleml:Var keyref=":eas" />
                <ruleml:Var keyref=":k" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":ev" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2239">
                <ruleml:Rel iri="prOnto:monitor" />
                <ruleml:Var keyref=":em" />
                <ruleml:Var keyref=":k" />
                <ruleml:Var keyref=":ev" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements214">
    <lrml:PrescriptiveStatement key="statements214Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :ed :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:designates' :ed :y :k) & (prOnto:DPO :k),

	(rioOnto:RexistAtTime :eco :t1) & (prOnto:cooperateWith' :eco :k prOnto:supAuth(prOnto:MSof(:y)))
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":ed">ed</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2240">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2241">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2242">
              <ruleml:Rel iri="prOnto:designates" />
              <ruleml:Var keyref=":ed" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DPO" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":eco">eco</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2243">
                <ruleml:Rel iri="prOnto:cooperateWith" />
                <ruleml:Var keyref=":eco" />
                <ruleml:Var keyref=":k" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:supAuth" />
                  <ruleml:Expr>
                    <ruleml:Fun iri="prOnto:MSof" />
                    <ruleml:Var keyref=":y" />
                  </ruleml:Expr>
                </ruleml:Expr>
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements215">
    <lrml:ConstitutiveStatement key="statements215Formula1">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :ed :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:designates' :ed :y :k) & (prOnto:DPO :k),

	(prOnto:contactPointFor :k prOnto:supAuth(prOnto:MSof(:y)))
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":ed">ed</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2244">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2245">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2246">
              <ruleml:Rel iri="prOnto:designates" />
              <ruleml:Var keyref=":ed" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DPO" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:contactPointFor" />
              <ruleml:Var keyref=":k" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:supAuth" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:MSof" />
                  <ruleml:Var keyref=":y" />
                </ruleml:Expr>
              </ruleml:Expr>
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements216">
    <lrml:PrescriptiveStatement key="statements216Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :ed :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:designates' :ed :y :k) & (prOnto:DPO :k),

	(rioOnto:RexistAtTime :eta :t1) & (prOnto:takeIntoAccount' :eta :k :er) & (prOnto:riskFor' :er :erf) & (prOnto:rightsAndFreedomsOf' :erf :w)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":ed">ed</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2247">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2248">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2249">
              <ruleml:Rel iri="prOnto:designates" />
              <ruleml:Var keyref=":ed" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DPO" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":eta">eta</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2250">
                <ruleml:Rel iri="prOnto:takeIntoAccount" />
                <ruleml:Var keyref=":eta" />
                <ruleml:Var keyref=":k" />
                <ruleml:Var key=":er">er</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2251">
                <ruleml:Rel iri="prOnto:riskFor" />
                <ruleml:Var keyref=":er" />
                <ruleml:Var key=":erf">erf</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2252">
                <ruleml:Rel iri="prOnto:rightsAndFreedomsOf" />
                <ruleml:Var keyref=":erf" />
                <ruleml:Var keyref=":w" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements217">
    <lrml:PrescriptiveStatement key="statements217Formula1">
      <!--
Permission:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :eor :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:categoryOf :cy :y) & (prOnto:categoryOf :cx :x)
	 & (rioOnto:or :eor :er1 :er2) & (prOnto:represent' :er1 :k :cy) & (prOnto:represent' :er2 :k :cx),

	(rioOnto:RexistAtTime :a2 :t2) & (rioOnto:>= :t2 :t1) & (rioOnto:and :a2 :ew :ed1 :ed2) & (prOnto:write' :ew :k :c)
	 & (prOnto:codeOfConduct :c) & (prOnto:describe' :ed1 :c :ef) & (prOnto:describe' :ed2 :c :et)
	 & (prOnto:fair' :ef :ep) & (prOnto:transparent' :et :ep)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":eor">eor</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2253">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2254">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:categoryOf" />
              <ruleml:Var key=":cy">cy</ruleml:Var>
              <ruleml:Var keyref=":y" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:categoryOf" />
              <ruleml:Var key=":cx">cx</ruleml:Var>
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eor" />
              <ruleml:Var key=":er1">er1</ruleml:Var>
              <ruleml:Var key=":er2">er2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2255">
              <ruleml:Rel iri="prOnto:represent" />
              <ruleml:Var keyref=":er1" />
              <ruleml:Var key=":k">k</ruleml:Var>
              <ruleml:Var keyref=":cy" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2256">
              <ruleml:Rel iri="prOnto:represent" />
              <ruleml:Var keyref=":er2" />
              <ruleml:Var keyref=":k" />
              <ruleml:Var keyref=":cx" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Permission iri="rioOnto:Permission">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":a2">a2</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:and" />
                <ruleml:Var keyref=":a2" />
                <ruleml:Var key=":ew">ew</ruleml:Var>
                <ruleml:Var key=":ed1">ed1</ruleml:Var>
                <ruleml:Var key=":ed2">ed2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2257">
                <ruleml:Rel iri="prOnto:write" />
                <ruleml:Var keyref=":ew" />
                <ruleml:Var keyref=":k" />
                <ruleml:Var key=":c">c</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:codeOfConduct" />
                <ruleml:Var keyref=":c" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2258">
                <ruleml:Rel iri="prOnto:describe" />
                <ruleml:Var keyref=":ed1" />
                <ruleml:Var keyref=":c" />
                <ruleml:Var key=":ef">ef</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2259">
                <ruleml:Rel iri="prOnto:describe" />
                <ruleml:Var keyref=":ed2" />
                <ruleml:Var keyref=":c" />
                <ruleml:Var key=":et">et</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2260">
                <ruleml:Rel iri="prOnto:fair" />
                <ruleml:Var keyref=":ef" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2261">
                <ruleml:Rel iri="prOnto:transparent" />
                <ruleml:Var keyref=":et" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Permission>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements218">
    <lrml:PrescriptiveStatement key="statements218Formula1">
      <!--
Permission:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :eor :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:categoryOf :cy :y) & (prOnto:categoryOf :cx :x)
	 & (rioOnto:or :eor :er1 :er2) & (prOnto:represent' :er1 :k :cy) & (prOnto:represent' :er2 :k :cx),

	(rioOnto:RexistAtTime :a2 :t2) & (rioOnto:>= :t2 :t1) & (rioOnto:and :a2 :ew :ed1) & (prOnto:write' :ew :k :c)
	 & (prOnto:codeOfConduct :c) & (prOnto:describe' :ed1 :c :eli) & (prOnto:legitimateInterestOf' :eli :y)
	 & (prOnto:relatedTo :eli :ctx)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":eor">eor</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2262">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2263">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:categoryOf" />
              <ruleml:Var key=":cy">cy</ruleml:Var>
              <ruleml:Var keyref=":y" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:categoryOf" />
              <ruleml:Var key=":cx">cx</ruleml:Var>
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eor" />
              <ruleml:Var key=":er1">er1</ruleml:Var>
              <ruleml:Var key=":er2">er2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2264">
              <ruleml:Rel iri="prOnto:represent" />
              <ruleml:Var keyref=":er1" />
              <ruleml:Var key=":k">k</ruleml:Var>
              <ruleml:Var keyref=":cy" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2265">
              <ruleml:Rel iri="prOnto:represent" />
              <ruleml:Var keyref=":er2" />
              <ruleml:Var keyref=":k" />
              <ruleml:Var keyref=":cx" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Permission iri="rioOnto:Permission">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":a2">a2</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:and" />
                <ruleml:Var keyref=":a2" />
                <ruleml:Var key=":ew">ew</ruleml:Var>
                <ruleml:Var key=":ed1">ed1</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2266">
                <ruleml:Rel iri="prOnto:write" />
                <ruleml:Var keyref=":ew" />
                <ruleml:Var keyref=":k" />
                <ruleml:Var key=":c">c</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:codeOfConduct" />
                <ruleml:Var keyref=":c" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2267">
                <ruleml:Rel iri="prOnto:describe" />
                <ruleml:Var keyref=":ed1" />
                <ruleml:Var keyref=":c" />
                <ruleml:Var key=":eli">eli</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2268">
                <ruleml:Rel iri="prOnto:legitimateInterestOf" />
                <ruleml:Var keyref=":eli" />
                <ruleml:Var keyref=":y" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:relatedTo" />
                <ruleml:Var keyref=":eli" />
                <ruleml:Var key=":ctx">ctx</ruleml:Var>
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Permission>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements219">
    <lrml:PrescriptiveStatement key="statements219Formula1">
      <!--
Permission:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :eor :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:categoryOf :cy :y) & (prOnto:categoryOf :cx :x)
	 & (rioOnto:or :eor :er1 :er2) & (prOnto:represent' :er1 :k :cy) & (prOnto:represent' :er2 :k :cx),

	(rioOnto:RexistAtTime :a2 :t2) & (rioOnto:>= :t2 :t1) & (rioOnto:and :a2 :ew :ed1) & (prOnto:write' :ew :k :c)
	 & (prOnto:codeOfConduct :c) & (prOnto:describe' :ed1 :c :esi) & (prOnto:storedIn' :esi :z :r)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":eor">eor</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2269">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2270">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:categoryOf" />
              <ruleml:Var key=":cy">cy</ruleml:Var>
              <ruleml:Var keyref=":y" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:categoryOf" />
              <ruleml:Var key=":cx">cx</ruleml:Var>
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eor" />
              <ruleml:Var key=":er1">er1</ruleml:Var>
              <ruleml:Var key=":er2">er2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2271">
              <ruleml:Rel iri="prOnto:represent" />
              <ruleml:Var keyref=":er1" />
              <ruleml:Var key=":k">k</ruleml:Var>
              <ruleml:Var keyref=":cy" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2272">
              <ruleml:Rel iri="prOnto:represent" />
              <ruleml:Var keyref=":er2" />
              <ruleml:Var keyref=":k" />
              <ruleml:Var keyref=":cx" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Permission iri="rioOnto:Permission">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":a2">a2</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:and" />
                <ruleml:Var keyref=":a2" />
                <ruleml:Var key=":ew">ew</ruleml:Var>
                <ruleml:Var key=":ed1">ed1</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2273">
                <ruleml:Rel iri="prOnto:write" />
                <ruleml:Var keyref=":ew" />
                <ruleml:Var keyref=":k" />
                <ruleml:Var key=":c">c</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:codeOfConduct" />
                <ruleml:Var keyref=":c" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2274">
                <ruleml:Rel iri="prOnto:describe" />
                <ruleml:Var keyref=":ed1" />
                <ruleml:Var keyref=":c" />
                <ruleml:Var key=":esi">esi</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2275">
                <ruleml:Rel iri="prOnto:storedIn" />
                <ruleml:Var keyref=":esi" />
                <ruleml:Var keyref=":z" />
                <ruleml:Var keyref=":r" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Permission>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements220">
    <lrml:PrescriptiveStatement key="statements220Formula1">
      <!--
Permission:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :eor :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:categoryOf :cy :y) & (prOnto:categoryOf :cx :x)
	 & (rioOnto:or :eor :er1 :er2) & (prOnto:represent' :er1 :k :cy) & (prOnto:represent' :er2 :k :cx),

	(rioOnto:RexistAtTime :a2 :t2) & (rioOnto:>= :t2 :t1) & (rioOnto:and :a2 :ew :ed1) & (prOnto:write' :ew :k :c)
	 & (prOnto:codeOfConduct :c) & (prOnto:describe' :ed1 :c :eps) & (prOnto:pseudonymise' :eps :z :r)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":eor">eor</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2276">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2277">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:categoryOf" />
              <ruleml:Var key=":cy">cy</ruleml:Var>
              <ruleml:Var keyref=":y" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:categoryOf" />
              <ruleml:Var key=":cx">cx</ruleml:Var>
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eor" />
              <ruleml:Var key=":er1">er1</ruleml:Var>
              <ruleml:Var key=":er2">er2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2278">
              <ruleml:Rel iri="prOnto:represent" />
              <ruleml:Var keyref=":er1" />
              <ruleml:Var key=":k">k</ruleml:Var>
              <ruleml:Var keyref=":cy" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2279">
              <ruleml:Rel iri="prOnto:represent" />
              <ruleml:Var keyref=":er2" />
              <ruleml:Var keyref=":k" />
              <ruleml:Var keyref=":cx" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Permission iri="rioOnto:Permission">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":a2">a2</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:and" />
                <ruleml:Var keyref=":a2" />
                <ruleml:Var key=":ew">ew</ruleml:Var>
                <ruleml:Var key=":ed1">ed1</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2280">
                <ruleml:Rel iri="prOnto:write" />
                <ruleml:Var keyref=":ew" />
                <ruleml:Var keyref=":k" />
                <ruleml:Var key=":c">c</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:codeOfConduct" />
                <ruleml:Var keyref=":c" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2281">
                <ruleml:Rel iri="prOnto:describe" />
                <ruleml:Var keyref=":ed1" />
                <ruleml:Var keyref=":c" />
                <ruleml:Var key=":eps">eps</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2282">
                <ruleml:Rel iri="prOnto:pseudonymise" />
                <ruleml:Var keyref=":eps" />
                <ruleml:Var keyref=":z" />
                <ruleml:Var keyref=":r" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Permission>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements221">
    <lrml:PrescriptiveStatement key="statements221Formula1">
      <!--
Permission:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :eor :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:categoryOf :cy :y) & (prOnto:categoryOf :cx :x)
	 & (rioOnto:or :eor :er1 :er2) & (prOnto:represent' :er1 :k :cy) & (prOnto:represent' :er2 :k :cx),

	(rioOnto:RexistAtTime :a2 :t2) & (rioOnto:>= :t2 :t1) & (rioOnto:and :a2 :ew :ed1 :ed2) & (prOnto:write' :ew :k :c)
	 & (prOnto:codeOfConduct :c) & (prOnto:describe' :ed1 :c :ew) & (prOnto:describe' :ed2 :c :epu)
	 & (prOnto:Communicate' :en1 :y :w :ew) & (prOnto:Communicate' :en2 :y :p :epu) & (prOnto:public :p)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":eor">eor</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2283">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2284">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:categoryOf" />
              <ruleml:Var key=":cy">cy</ruleml:Var>
              <ruleml:Var keyref=":y" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:categoryOf" />
              <ruleml:Var key=":cx">cx</ruleml:Var>
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eor" />
              <ruleml:Var key=":er1">er1</ruleml:Var>
              <ruleml:Var key=":er2">er2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2285">
              <ruleml:Rel iri="prOnto:represent" />
              <ruleml:Var keyref=":er1" />
              <ruleml:Var key=":k">k</ruleml:Var>
              <ruleml:Var keyref=":cy" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2286">
              <ruleml:Rel iri="prOnto:represent" />
              <ruleml:Var keyref=":er2" />
              <ruleml:Var keyref=":k" />
              <ruleml:Var keyref=":cx" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Permission iri="rioOnto:Permission">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":a2">a2</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:and" />
                <ruleml:Var keyref=":a2" />
                <ruleml:Var key=":ew">ew</ruleml:Var>
                <ruleml:Var key=":ed1">ed1</ruleml:Var>
                <ruleml:Var key=":ed2">ed2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2287">
                <ruleml:Rel iri="prOnto:write" />
                <ruleml:Var keyref=":ew" />
                <ruleml:Var keyref=":k" />
                <ruleml:Var key=":c">c</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:codeOfConduct" />
                <ruleml:Var keyref=":c" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2288">
                <ruleml:Rel iri="prOnto:describe" />
                <ruleml:Var keyref=":ed1" />
                <ruleml:Var keyref=":c" />
                <ruleml:Var key=":ew">ew</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2289">
                <ruleml:Rel iri="prOnto:describe" />
                <ruleml:Var keyref=":ed2" />
                <ruleml:Var keyref=":c" />
                <ruleml:Var key=":epu">epu</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2290">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en1" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":ew" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2291">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en2" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var key=":p">p</ruleml:Var>
                <ruleml:Var keyref=":epu" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:public" />
                <ruleml:Var keyref=":p" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Permission>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements222">
    <lrml:PrescriptiveStatement key="statements222Formula1">
      <!--
Permission:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :eor :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:categoryOf :cy :y) & (prOnto:categoryOf :cx :x)
	 & (rioOnto:or :eor :er1 :er2) & (prOnto:represent' :er1 :k :cy) & (prOnto:represent' :er2 :k :cx),

	(rioOnto:RexistAtTime :a2 :t2) & (rioOnto:>= :t2 :t1) & (rioOnto:and :a2 :ew :ed1) & (prOnto:write' :ew :k :c)
	 & (prOnto:codeOfConduct :c) & (prOnto:describe' :ed1 :c :erf) & (prOnto:rightsAndFreedomsOf' :erf :w)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":eor">eor</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2292">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2293">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:categoryOf" />
              <ruleml:Var key=":cy">cy</ruleml:Var>
              <ruleml:Var keyref=":y" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:categoryOf" />
              <ruleml:Var key=":cx">cx</ruleml:Var>
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eor" />
              <ruleml:Var key=":er1">er1</ruleml:Var>
              <ruleml:Var key=":er2">er2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2294">
              <ruleml:Rel iri="prOnto:represent" />
              <ruleml:Var keyref=":er1" />
              <ruleml:Var key=":k">k</ruleml:Var>
              <ruleml:Var keyref=":cy" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2295">
              <ruleml:Rel iri="prOnto:represent" />
              <ruleml:Var keyref=":er2" />
              <ruleml:Var keyref=":k" />
              <ruleml:Var keyref=":cx" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Permission iri="rioOnto:Permission">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":a2">a2</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:and" />
                <ruleml:Var keyref=":a2" />
                <ruleml:Var key=":ew">ew</ruleml:Var>
                <ruleml:Var key=":ed1">ed1</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2296">
                <ruleml:Rel iri="prOnto:write" />
                <ruleml:Var keyref=":ew" />
                <ruleml:Var keyref=":k" />
                <ruleml:Var key=":c">c</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:codeOfConduct" />
                <ruleml:Var keyref=":c" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2297">
                <ruleml:Rel iri="prOnto:describe" />
                <ruleml:Var keyref=":ed1" />
                <ruleml:Var keyref=":c" />
                <ruleml:Var key=":erf">erf</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2298">
                <ruleml:Rel iri="prOnto:rightsAndFreedomsOf" />
                <ruleml:Var keyref=":erf" />
                <ruleml:Var keyref=":w" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Permission>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements223">
    <lrml:PrescriptiveStatement key="statements223Formula1">
      <!--
Permission:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :eor :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:categoryOf :cy :y) & (prOnto:categoryOf :cx :x)
	 & (rioOnto:or :eor :er1 :er2) & (prOnto:represent' :er1 :k :cy) & (prOnto:represent' :er2 :k :cx)
	 & (prOnto:Purpose :epu) & (prOnto:isBasedOn :ep :epu),

	(rioOnto:RexistAtTime :a2 :t2) & (rioOnto:>= :t2 :t1) & (rioOnto:and :a2 :ew :ed1 :ed2 :ed3 :eau) & (prOnto:write' :ew :k :c)
	 & (prOnto:codeOfConduct :c) & (prOnto:describe' :ed1 :c :ew) & (prOnto:Communicate' :en1 :y :w :ew)
	 & (prOnto:consent :c) & (rioOnto:< prOnto:ageOf(:w) prOnto:minAgeForConsent(:c)) & (prOnto:describe' :ed2 :c :epr)
	 & (prOnto:protect' :epr :y :w) & (prOnto:describe' :ed3 :c :ehc) & (prOnto:hasConsented' :ehc prOnto:holderOfPR(:w) :c)
	 & (prOnto:authorizedBy' :eau :epu :c)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":eor">eor</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2299">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2300">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:categoryOf" />
              <ruleml:Var key=":cy">cy</ruleml:Var>
              <ruleml:Var keyref=":y" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:categoryOf" />
              <ruleml:Var key=":cx">cx</ruleml:Var>
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eor" />
              <ruleml:Var key=":er1">er1</ruleml:Var>
              <ruleml:Var key=":er2">er2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2301">
              <ruleml:Rel iri="prOnto:represent" />
              <ruleml:Var keyref=":er1" />
              <ruleml:Var key=":k">k</ruleml:Var>
              <ruleml:Var keyref=":cy" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2302">
              <ruleml:Rel iri="prOnto:represent" />
              <ruleml:Var keyref=":er2" />
              <ruleml:Var keyref=":k" />
              <ruleml:Var keyref=":cx" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Purpose" />
              <ruleml:Var key=":epu">epu</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isBasedOn" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":epu" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Permission iri="rioOnto:Permission">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":a2">a2</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:and" />
                <ruleml:Var keyref=":a2" />
                <ruleml:Var key=":ew">ew</ruleml:Var>
                <ruleml:Var key=":ed1">ed1</ruleml:Var>
                <ruleml:Var key=":ed2">ed2</ruleml:Var>
                <ruleml:Var key=":ed3">ed3</ruleml:Var>
                <ruleml:Var key=":eau">eau</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2303">
                <ruleml:Rel iri="prOnto:write" />
                <ruleml:Var keyref=":ew" />
                <ruleml:Var keyref=":k" />
                <ruleml:Var key=":c">c</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:codeOfConduct" />
                <ruleml:Var keyref=":c" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2304">
                <ruleml:Rel iri="prOnto:describe" />
                <ruleml:Var keyref=":ed1" />
                <ruleml:Var keyref=":c" />
                <ruleml:Var key=":ew">ew</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2305">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en1" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":ew" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:consent" />
                <ruleml:Var key=":c">c</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&lt;" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:ageOf" />
                  <ruleml:Var keyref=":w" />
                </ruleml:Expr>
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:minAgeForConsent" />
                  <ruleml:Var keyref=":c" />
                </ruleml:Expr>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2306">
                <ruleml:Rel iri="prOnto:describe" />
                <ruleml:Var keyref=":ed2" />
                <ruleml:Var keyref=":c" />
                <ruleml:Var key=":epr">epr</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2307">
                <ruleml:Rel iri="prOnto:protect" />
                <ruleml:Var keyref=":epr" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2308">
                <ruleml:Rel iri="prOnto:describe" />
                <ruleml:Var keyref=":ed3" />
                <ruleml:Var keyref=":c" />
                <ruleml:Var key=":ehc">ehc</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2309">
                <ruleml:Rel iri="prOnto:hasConsented" />
                <ruleml:Var keyref=":ehc" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:holderOfPR" />
                  <ruleml:Var keyref=":w" />
                </ruleml:Expr>
                <ruleml:Var keyref=":c" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2310">
                <ruleml:Rel iri="prOnto:authorizedBy" />
                <ruleml:Var keyref=":eau" />
                <ruleml:Var keyref=":epu" />
                <ruleml:Var keyref=":c" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Permission>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements224">
    <lrml:PrescriptiveStatement key="statements224Formula1">
      <!--
Permission:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :eor :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:categoryOf :cy :y) & (prOnto:categoryOf :cx :x)
	 & (rioOnto:or :eor :er1 :er2) & (prOnto:represent' :er1 :k :cy) & (prOnto:represent' :er2 :k :cx),

	(rioOnto:RexistAtTime :a2 :t2) & (rioOnto:>= :t2 :t1) & (rioOnto:and :a2 :ew :ed1 :ed2 :ed3) & (prOnto:write' :ew :k :c)
	 & (prOnto:codeOfConduct :c) & (prOnto:describe' :ed1 :c :ei1) & (prOnto:implement' :ei1 :y :em)
	 & (prOnto:measure :em1) & (rioOnto:cause :ei1 :eco1) & (prOnto:complyWith' :eco1 :ep GDPR)
	 & (prOnto:describe' :ed2 :c :eds) & (prOnto:setToDefault' :eds :ep) & (prOnto:describe' :ed3 :c :ei2)
	 & (prOnto:implement' :ei2 :y :em2) & (prOnto:measure :em2) & (prOnto:appropriate :em2)
	 & (prOnto:adequateWith' :eaw :ei2 :er) & (prOnto:riskFor' :er :erf) & (prOnto:rightsAndFreedomsOf' :erf :w)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":eor">eor</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2311">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2312">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:categoryOf" />
              <ruleml:Var key=":cy">cy</ruleml:Var>
              <ruleml:Var keyref=":y" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:categoryOf" />
              <ruleml:Var key=":cx">cx</ruleml:Var>
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eor" />
              <ruleml:Var key=":er1">er1</ruleml:Var>
              <ruleml:Var key=":er2">er2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2313">
              <ruleml:Rel iri="prOnto:represent" />
              <ruleml:Var keyref=":er1" />
              <ruleml:Var key=":k">k</ruleml:Var>
              <ruleml:Var keyref=":cy" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2314">
              <ruleml:Rel iri="prOnto:represent" />
              <ruleml:Var keyref=":er2" />
              <ruleml:Var keyref=":k" />
              <ruleml:Var keyref=":cx" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Permission iri="rioOnto:Permission">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":a2">a2</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:and" />
                <ruleml:Var keyref=":a2" />
                <ruleml:Var key=":ew">ew</ruleml:Var>
                <ruleml:Var key=":ed1">ed1</ruleml:Var>
                <ruleml:Var key=":ed2">ed2</ruleml:Var>
                <ruleml:Var key=":ed3">ed3</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2315">
                <ruleml:Rel iri="prOnto:write" />
                <ruleml:Var keyref=":ew" />
                <ruleml:Var keyref=":k" />
                <ruleml:Var key=":c">c</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:codeOfConduct" />
                <ruleml:Var keyref=":c" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2316">
                <ruleml:Rel iri="prOnto:describe" />
                <ruleml:Var keyref=":ed1" />
                <ruleml:Var keyref=":c" />
                <ruleml:Var key=":ei1">ei1</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2317">
                <ruleml:Rel iri="prOnto:implement" />
                <ruleml:Var keyref=":ei1" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var key=":em">em1</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:measure" />
                <ruleml:Var keyref=":em1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:cause" />
                <ruleml:Var keyref=":ei1" />
                <ruleml:Var key=":eco1">eco1</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2318">
                <ruleml:Rel iri="prOnto:complyWith" />
                <ruleml:Var keyref=":eco1" />
                <ruleml:Var keyref=":ep" />
                <ruleml:Ind>GDPR</ruleml:Ind>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2319">
                <ruleml:Rel iri="prOnto:describe" />
                <ruleml:Var keyref=":ed2" />
                <ruleml:Var keyref=":c" />
                <ruleml:Var key=":eds">eds</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2320">
                <ruleml:Rel iri="prOnto:setToDefault" />
                <ruleml:Var keyref=":eds" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2321">
                <ruleml:Rel iri="prOnto:describe" />
                <ruleml:Var keyref=":ed3" />
                <ruleml:Var keyref=":c" />
                <ruleml:Var key=":ei2">ei2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2322">
                <ruleml:Rel iri="prOnto:implement" />
                <ruleml:Var keyref=":ei2" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var key=":em2">em2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:measure" />
                <ruleml:Var keyref=":em2" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:appropriate" />
                <ruleml:Var keyref=":em2" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2323">
                <ruleml:Rel iri="prOnto:adequateWith" />
                <ruleml:Var keyref=":eaw" />
                <ruleml:Var keyref=":ei2" />
                <ruleml:Var key=":er">er</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2324">
                <ruleml:Rel iri="prOnto:riskFor" />
                <ruleml:Var keyref=":er" />
                <ruleml:Var key=":erf">erf</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2325">
                <ruleml:Rel iri="prOnto:rightsAndFreedomsOf" />
                <ruleml:Var keyref=":erf" />
                <ruleml:Var keyref=":w" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Permission>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements225">
    <lrml:PrescriptiveStatement key="statements225Formula1">
      <!--
Permission:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :eor :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:categoryOf :cy :y) & (prOnto:categoryOf :cx :x)
	 & (rioOnto:or :eor :er1 :er2) & (prOnto:represent' :er1 :k :cy) & (prOnto:represent' :er2 :k :cx),

	(rioOnto:RexistAtTime :a2 :t2) & (rioOnto:>= :t2 :t1) & (rioOnto:and :a2 :ew :ed1 :ed2) & (prOnto:write' :ew :k :c)
	 & (prOnto:codeOfConduct :c) & (prOnto:describe' :ed1 :c :en1) & (prOnto:describe' :ed2 :c :en2)
	 & (prOnto:Communicate' :en1 :y prOnto:supAuth(prOnto:MSof(:y)) prOnto:allInfoAbout(:eb)) & (prOnto:dataBreach :eb :z) & (prOnto:Communicate' :en2 :y :z prOnto:allInfoAbout(:eb))
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":eor">eor</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2326">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2327">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:categoryOf" />
              <ruleml:Var key=":cy">cy</ruleml:Var>
              <ruleml:Var keyref=":y" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:categoryOf" />
              <ruleml:Var key=":cx">cx</ruleml:Var>
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eor" />
              <ruleml:Var key=":er1">er1</ruleml:Var>
              <ruleml:Var key=":er2">er2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2328">
              <ruleml:Rel iri="prOnto:represent" />
              <ruleml:Var keyref=":er1" />
              <ruleml:Var key=":k">k</ruleml:Var>
              <ruleml:Var keyref=":cy" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2329">
              <ruleml:Rel iri="prOnto:represent" />
              <ruleml:Var keyref=":er2" />
              <ruleml:Var keyref=":k" />
              <ruleml:Var keyref=":cx" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Permission iri="rioOnto:Permission">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":a2">a2</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:and" />
                <ruleml:Var keyref=":a2" />
                <ruleml:Var key=":ew">ew</ruleml:Var>
                <ruleml:Var key=":ed1">ed1</ruleml:Var>
                <ruleml:Var key=":ed2">ed2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2330">
                <ruleml:Rel iri="prOnto:write" />
                <ruleml:Var keyref=":ew" />
                <ruleml:Var keyref=":k" />
                <ruleml:Var key=":c">c</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:codeOfConduct" />
                <ruleml:Var keyref=":c" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2331">
                <ruleml:Rel iri="prOnto:describe" />
                <ruleml:Var keyref=":ed1" />
                <ruleml:Var keyref=":c" />
                <ruleml:Var key=":en1">en1</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2332">
                <ruleml:Rel iri="prOnto:describe" />
                <ruleml:Var keyref=":ed2" />
                <ruleml:Var keyref=":c" />
                <ruleml:Var key=":en2">en2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2333">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en1" />
                <ruleml:Var keyref=":y" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:supAuth" />
                  <ruleml:Expr>
                    <ruleml:Fun iri="prOnto:MSof" />
                    <ruleml:Var keyref=":y" />
                  </ruleml:Expr>
                </ruleml:Expr>
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:allInfoAbout" />
                  <ruleml:Var key=":eb">eb</ruleml:Var>
                </ruleml:Expr>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:dataBreach" />
                <ruleml:Var keyref=":eb" />
                <ruleml:Var keyref=":z" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2334">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en2" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":z" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:allInfoAbout" />
                  <ruleml:Var key=":eb">eb</ruleml:Var>
                </ruleml:Expr>
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Permission>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements226">
    <lrml:PrescriptiveStatement key="statements226Formula1">
      <!--
Permission:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :eor :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:categoryOf :cy :y) & (prOnto:categoryOf :cx :x)
	 & (rioOnto:or :eor :er1 :er2) & (prOnto:represent' :er1 :k :cy) & (prOnto:represent' :er2 :k :cx),

	(rioOnto:RexistAtTime :a2 :t2) & (rioOnto:>= :t2 :t1) & (rioOnto:and :a2 :ew :ed1 :ed2) & (prOnto:write' :ew :k :c)
	 & (prOnto:codeOfConduct :c) & (prOnto:describe' :ed1 :c :et1) & (prOnto:Transmit' :et1 :x :z :k)
	 & (prOnto:internationalOrganization :k) & (prOnto:describe' :ed2 :c :et2) & (prOnto:Transmit' :et2 :x :z :co)
	 & (prOnto:thirdCountry :co)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":eor">eor</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2335">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2336">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:categoryOf" />
              <ruleml:Var key=":cy">cy</ruleml:Var>
              <ruleml:Var keyref=":y" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:categoryOf" />
              <ruleml:Var key=":cx">cx</ruleml:Var>
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eor" />
              <ruleml:Var key=":er1">er1</ruleml:Var>
              <ruleml:Var key=":er2">er2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2337">
              <ruleml:Rel iri="prOnto:represent" />
              <ruleml:Var keyref=":er1" />
              <ruleml:Var key=":k">k</ruleml:Var>
              <ruleml:Var keyref=":cy" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2338">
              <ruleml:Rel iri="prOnto:represent" />
              <ruleml:Var keyref=":er2" />
              <ruleml:Var keyref=":k" />
              <ruleml:Var keyref=":cx" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Permission iri="rioOnto:Permission">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":a2">a2</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:and" />
                <ruleml:Var keyref=":a2" />
                <ruleml:Var key=":ew">ew</ruleml:Var>
                <ruleml:Var key=":ed1">ed1</ruleml:Var>
                <ruleml:Var key=":ed2">ed2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2339">
                <ruleml:Rel iri="prOnto:write" />
                <ruleml:Var keyref=":ew" />
                <ruleml:Var keyref=":k" />
                <ruleml:Var key=":c">c</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:codeOfConduct" />
                <ruleml:Var keyref=":c" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2340">
                <ruleml:Rel iri="prOnto:describe" />
                <ruleml:Var keyref=":ed1" />
                <ruleml:Var keyref=":c" />
                <ruleml:Var key=":et1">et1</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2341">
                <ruleml:Rel iri="prOnto:Transmit" />
                <ruleml:Var keyref=":et1" />
                <ruleml:Var keyref=":x" />
                <ruleml:Var keyref=":z" />
                <ruleml:Var key=":k">k</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:internationalOrganization" />
                <ruleml:Var keyref=":k" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2342">
                <ruleml:Rel iri="prOnto:describe" />
                <ruleml:Var keyref=":ed2" />
                <ruleml:Var keyref=":c" />
                <ruleml:Var key=":et2">et2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2343">
                <ruleml:Rel iri="prOnto:Transmit" />
                <ruleml:Var keyref=":et2" />
                <ruleml:Var keyref=":x" />
                <ruleml:Var keyref=":z" />
                <ruleml:Var key=":co">co</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:thirdCountry" />
                <ruleml:Var keyref=":co" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Permission>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements227">
    <lrml:PrescriptiveStatement key="statements227Formula1">
      <!--
Permission:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :eor :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:categoryOf :cy :y) & (prOnto:categoryOf :cx :x)
	 & (rioOnto:or :eor :er1 :er2) & (prOnto:represent' :er1 :k :cy) & (prOnto:represent' :er2 :k :cx),

	(rioOnto:RexistAtTime :a2 :t2) & (rioOnto:>= :t2 :t1) & (rioOnto:and :a2 :ew :ed1) & (prOnto:write' :ew :k :c)
	 & (prOnto:codeOfConduct :c) & (prOnto:describe' :ed1 :c :ee) & (prOnto:execute' :ee :y :lc)
	 & (prOnto:legalClaim :lc) & (prOnto:partyOf :y :lc) & (prOnto:partyOf :w :lc)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":eor">eor</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2344">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2345">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:categoryOf" />
              <ruleml:Var key=":cy">cy</ruleml:Var>
              <ruleml:Var keyref=":y" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:categoryOf" />
              <ruleml:Var key=":cx">cx</ruleml:Var>
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eor" />
              <ruleml:Var key=":er1">er1</ruleml:Var>
              <ruleml:Var key=":er2">er2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2346">
              <ruleml:Rel iri="prOnto:represent" />
              <ruleml:Var keyref=":er1" />
              <ruleml:Var key=":k">k</ruleml:Var>
              <ruleml:Var keyref=":cy" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2347">
              <ruleml:Rel iri="prOnto:represent" />
              <ruleml:Var keyref=":er2" />
              <ruleml:Var keyref=":k" />
              <ruleml:Var keyref=":cx" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Permission iri="rioOnto:Permission">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":a2">a2</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:and" />
                <ruleml:Var keyref=":a2" />
                <ruleml:Var key=":ew">ew</ruleml:Var>
                <ruleml:Var key=":ed1">ed1</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2348">
                <ruleml:Rel iri="prOnto:write" />
                <ruleml:Var keyref=":ew" />
                <ruleml:Var keyref=":k" />
                <ruleml:Var key=":c">c</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:codeOfConduct" />
                <ruleml:Var keyref=":c" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2349">
                <ruleml:Rel iri="prOnto:describe" />
                <ruleml:Var keyref=":ed1" />
                <ruleml:Var keyref=":c" />
                <ruleml:Var key=":ee">ee</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2350">
                <ruleml:Rel iri="prOnto:execute" />
                <ruleml:Var keyref=":ee" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var key=":lc">lc</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:legalClaim" />
                <ruleml:Var keyref=":lc" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:partyOf" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":lc" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:partyOf" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":lc" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Permission>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements228">
    <lrml:PrescriptiveStatement key="statements228Formula1">
      <!--
Permission:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :eor :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:countryOf :w :cw) & (rioOnto:partOf :cw EuropeanUnion)
	 & (prOnto:countryOf :y :cy) & (rioOnto:partOf :cy EuropeanUnion) & (rioOnto:or :eor :eof :emo)
	 & (prOnto:offer' :eof :y :k) & (prOnto:goodsOrServices :k) & (prOnto:monitor' :emo :y :w),

	(rioOnto:RexistAtTime :ead :t2) & (rioOnto:>= :t2 :t1) & (prOnto:adhereTo' :ead :y :cc) & (prOnto:codeOfConduct :cc)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":eor">eor</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2351">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2352">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:countryOf" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var key=":cw">cw</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:partOf" />
              <ruleml:Var keyref=":cw" />
              <ruleml:Ind>EuropeanUnion</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:countryOf" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":cy">cy</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:partOf" />
              <ruleml:Var keyref=":cy" />
              <ruleml:Ind>EuropeanUnion</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eor" />
              <ruleml:Var key=":eof">eof</ruleml:Var>
              <ruleml:Var key=":emo">emo</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2353">
              <ruleml:Rel iri="prOnto:offer" />
              <ruleml:Var keyref=":eof" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:goodsOrServices" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2354">
              <ruleml:Rel iri="prOnto:monitor" />
              <ruleml:Var keyref=":emo" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Permission iri="rioOnto:Permission">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":ead">ead</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2355">
                <ruleml:Rel iri="prOnto:adhereTo" />
                <ruleml:Var keyref=":ead" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var key=":cc">cc</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:codeOfConduct" />
                <ruleml:Var keyref=":cc" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Permission>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements229">
    <lrml:PrescriptiveStatement key="statements229Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :eac :ein :ead :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:bodyCC :b) & (prOnto:accreditedBy' :eac :b prOnto:supAuth(prOnto:MSof(:y)))
	 & (prOnto:expertIn' :ein :b GDPR) & (prOnto:adhereTo' :ead :y :cc) & (prOnto:codeOfConduct :cc),

	(rioOnto:RexistAtTime :eco :t1) & (prOnto:contain' :eco :cc :em) & (prOnto:measure :em) & (rioOnto:cause :em :eat)
	 & (prOnto:ableTo' :eat :b :emo) & (prOnto:monitor' :emo :b :ecw) & (prOnto:complyWith' :ecw :y :cc)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":eac">eac</ruleml:Var>
              <ruleml:Var key=":ein">ein</ruleml:Var>
              <ruleml:Var key=":ead">ead</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2356">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2357">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:bodyCC" />
              <ruleml:Var key=":b">b</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2358">
              <ruleml:Rel iri="prOnto:accreditedBy" />
              <ruleml:Var keyref=":eac" />
              <ruleml:Var keyref=":b" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:supAuth" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:MSof" />
                  <ruleml:Var keyref=":y" />
                </ruleml:Expr>
              </ruleml:Expr>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2359">
              <ruleml:Rel iri="prOnto:expertIn" />
              <ruleml:Var keyref=":ein" />
              <ruleml:Var keyref=":b" />
              <ruleml:Ind>GDPR</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2360">
              <ruleml:Rel iri="prOnto:adhereTo" />
              <ruleml:Var keyref=":ead" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":cc">cc</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:codeOfConduct" />
              <ruleml:Var keyref=":cc" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":eco">eco</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2361">
                <ruleml:Rel iri="prOnto:contain" />
                <ruleml:Var keyref=":eco" />
                <ruleml:Var keyref=":cc" />
                <ruleml:Var key=":em">em</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:measure" />
                <ruleml:Var keyref=":em" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:cause" />
                <ruleml:Var keyref=":em" />
                <ruleml:Var key=":eat">eat</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2362">
                <ruleml:Rel iri="prOnto:ableTo" />
                <ruleml:Var keyref=":eat" />
                <ruleml:Var keyref=":b" />
                <ruleml:Var key=":emo">emo</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2363">
                <ruleml:Rel iri="prOnto:monitor" />
                <ruleml:Var keyref=":emo" />
                <ruleml:Var keyref=":b" />
                <ruleml:Var key=":ecw">ecw</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2364">
                <ruleml:Rel iri="prOnto:complyWith" />
                <ruleml:Var keyref=":ecw" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":cc" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements229Formula2">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :eac :ein :ead :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:bodyCC :b) & (prOnto:accreditedBy' :eac :b prOnto:supAuth(prOnto:MSof(:y)))
	 & (prOnto:expertIn' :ein :b GDPR) & (prOnto:adhereTo' :ead :x :cc) & (prOnto:codeOfConduct :cc),

	(rioOnto:RexistAtTime :eco :t1) & (prOnto:contain' :eco :cc :em) & (prOnto:measure :em) & (rioOnto:cause :em :eat)
	 & (prOnto:ableTo' :eat :b :emo) & (prOnto:monitor' :emo :b :ecw) & (prOnto:complyWith' :ecw :x :cc)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":eac">eac</ruleml:Var>
              <ruleml:Var key=":ein">ein</ruleml:Var>
              <ruleml:Var key=":ead">ead</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2365">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2366">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:bodyCC" />
              <ruleml:Var key=":b">b</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2367">
              <ruleml:Rel iri="prOnto:accreditedBy" />
              <ruleml:Var keyref=":eac" />
              <ruleml:Var keyref=":b" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:supAuth" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:MSof" />
                  <ruleml:Var keyref=":y" />
                </ruleml:Expr>
              </ruleml:Expr>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2368">
              <ruleml:Rel iri="prOnto:expertIn" />
              <ruleml:Var keyref=":ein" />
              <ruleml:Var keyref=":b" />
              <ruleml:Ind>GDPR</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2369">
              <ruleml:Rel iri="prOnto:adhereTo" />
              <ruleml:Var keyref=":ead" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var key=":cc">cc</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:codeOfConduct" />
              <ruleml:Var keyref=":cc" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":eco">eco</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2370">
                <ruleml:Rel iri="prOnto:contain" />
                <ruleml:Var keyref=":eco" />
                <ruleml:Var keyref=":cc" />
                <ruleml:Var key=":em">em</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:measure" />
                <ruleml:Var keyref=":em" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:cause" />
                <ruleml:Var keyref=":em" />
                <ruleml:Var key=":eat">eat</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2371">
                <ruleml:Rel iri="prOnto:ableTo" />
                <ruleml:Var keyref=":eat" />
                <ruleml:Var keyref=":b" />
                <ruleml:Var key=":emo">emo</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2372">
                <ruleml:Rel iri="prOnto:monitor" />
                <ruleml:Var keyref=":emo" />
                <ruleml:Var keyref=":b" />
                <ruleml:Var key=":ecw">ecw</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2373">
                <ruleml:Rel iri="prOnto:complyWith" />
                <ruleml:Var keyref=":ecw" />
                <ruleml:Var keyref=":x" />
                <ruleml:Var keyref=":cc" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements230">
    <lrml:PrescriptiveStatement key="statements230Formula1">
      <!--
Permission:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :eor :ew :en :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:categoryOf :cy :y) & (prOnto:categoryOf :cx :x)
	 & (rioOnto:or :eor :er1 :er2) & (prOnto:represent' :er1 :k :cy) & (prOnto:represent' :er2 :k :cx)
	 & (prOnto:write' :ew :k :c prOnto:draftOf(:c)) & (prOnto:codeOfConduct :c) & (rioOnto:not :en :ea)
	 & (prOnto:authorizedBy' :ea :c prOnto:supAuth(prOnto:MSof(:y))),

	(rioOnto:RexistAtTime :erf :t2) & (rioOnto:>= :t2 :t1) & (prOnto:receiveFrom' :erf prOnto:supAuth(prOnto:MSof(:y)) prOnto:draftOf(:c) :k)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":eor">eor</ruleml:Var>
              <ruleml:Var key=":ew">ew</ruleml:Var>
              <ruleml:Var key=":en">en</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2374">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2375">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:categoryOf" />
              <ruleml:Var key=":cy">cy</ruleml:Var>
              <ruleml:Var keyref=":y" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:categoryOf" />
              <ruleml:Var key=":cx">cx</ruleml:Var>
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eor" />
              <ruleml:Var key=":er1">er1</ruleml:Var>
              <ruleml:Var key=":er2">er2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2376">
              <ruleml:Rel iri="prOnto:represent" />
              <ruleml:Var keyref=":er1" />
              <ruleml:Var key=":k">k</ruleml:Var>
              <ruleml:Var keyref=":cy" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2377">
              <ruleml:Rel iri="prOnto:represent" />
              <ruleml:Var keyref=":er2" />
              <ruleml:Var keyref=":k" />
              <ruleml:Var keyref=":cx" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2378">
              <ruleml:Rel iri="prOnto:write" />
              <ruleml:Var keyref=":ew" />
              <ruleml:Var keyref=":k" />
              <ruleml:Var key=":c">c</ruleml:Var>
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:draftOf" />
                <ruleml:Var keyref=":c" />
              </ruleml:Expr>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:codeOfConduct" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en" />
              <ruleml:Var key=":ea">ea</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2379">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":ea" />
              <ruleml:Var keyref=":c" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:supAuth" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:MSof" />
                  <ruleml:Var keyref=":y" />
                </ruleml:Expr>
              </ruleml:Expr>
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Permission iri="rioOnto:Permission">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":erf">erf</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2380">
                <ruleml:Rel iri="prOnto:receiveFrom" />
                <ruleml:Var keyref=":erf" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:supAuth" />
                  <ruleml:Expr>
                    <ruleml:Fun iri="prOnto:MSof" />
                    <ruleml:Var keyref=":y" />
                  </ruleml:Expr>
                </ruleml:Expr>
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:draftOf" />
                  <ruleml:Var keyref=":c" />
                </ruleml:Expr>
                <ruleml:Var keyref=":k" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Permission>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements231">
    <lrml:PrescriptiveStatement key="statements231Formula1">
      <!--
Permission:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :eac :ein :ead :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:bodyCC :b) & (prOnto:accreditedBy' :eac :b prOnto:supAuth(prOnto:MSof(:y)))
	 & (prOnto:expertIn' :ein :b GDPR) & (prOnto:adhereTo' :ead :y :cc) & (prOnto:codeOfConduct :cc)
	 & (rioOnto:exceptionCha4Sec5Art41Par6 :et),

	(rioOnto:RexistAtTime :emo :t1) & (prOnto:monitor' :emo :b :ecw) & (prOnto:complyWith' :ecw :y :cc)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":eac">eac</ruleml:Var>
              <ruleml:Var key=":ein">ein</ruleml:Var>
              <ruleml:Var key=":ead">ead</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2381">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2382">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:bodyCC" />
              <ruleml:Var key=":b">b</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2383">
              <ruleml:Rel iri="prOnto:accreditedBy" />
              <ruleml:Var keyref=":eac" />
              <ruleml:Var keyref=":b" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:supAuth" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:MSof" />
                  <ruleml:Var keyref=":y" />
                </ruleml:Expr>
              </ruleml:Expr>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2384">
              <ruleml:Rel iri="prOnto:expertIn" />
              <ruleml:Var keyref=":ein" />
              <ruleml:Var keyref=":b" />
              <ruleml:Ind>GDPR</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2385">
              <ruleml:Rel iri="prOnto:adhereTo" />
              <ruleml:Var keyref=":ead" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":cc">cc</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:codeOfConduct" />
              <ruleml:Var keyref=":cc" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha4Sec5Art41Par6" />
                <ruleml:Var keyref=":et" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Permission iri="rioOnto:Permission">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":emo">emo</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2386">
                <ruleml:Rel iri="prOnto:monitor" />
                <ruleml:Var keyref=":emo" />
                <ruleml:Var keyref=":b" />
                <ruleml:Var key=":ecw">ecw</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2387">
                <ruleml:Rel iri="prOnto:complyWith" />
                <ruleml:Var keyref=":ecw" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":cc" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Permission>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements231Formula2">
      <!--
Permission:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :eac :ein :ead :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:bodyCC :b) & (prOnto:accreditedBy' :eac :b prOnto:supAuth(prOnto:MSof(:y)))
	 & (prOnto:expertIn' :ein :b GDPR) & (prOnto:adhereTo' :ead :x :cc) & (prOnto:codeOfConduct :cc)
	 & (rioOnto:exceptionCha4Sec5Art41Par6 :et),

	(rioOnto:RexistAtTime :emo :t1) & (prOnto:monitor' :emo :b :ecw) & (prOnto:complyWith' :ecw :x :cc)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":eac">eac</ruleml:Var>
              <ruleml:Var key=":ein">ein</ruleml:Var>
              <ruleml:Var key=":ead">ead</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2388">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2389">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:bodyCC" />
              <ruleml:Var key=":b">b</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2390">
              <ruleml:Rel iri="prOnto:accreditedBy" />
              <ruleml:Var keyref=":eac" />
              <ruleml:Var keyref=":b" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:supAuth" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:MSof" />
                  <ruleml:Var keyref=":y" />
                </ruleml:Expr>
              </ruleml:Expr>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2391">
              <ruleml:Rel iri="prOnto:expertIn" />
              <ruleml:Var keyref=":ein" />
              <ruleml:Var keyref=":b" />
              <ruleml:Ind>GDPR</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2392">
              <ruleml:Rel iri="prOnto:adhereTo" />
              <ruleml:Var keyref=":ead" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var key=":cc">cc</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:codeOfConduct" />
              <ruleml:Var keyref=":cc" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha4Sec5Art41Par6" />
                <ruleml:Var keyref=":et" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Permission iri="rioOnto:Permission">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":emo">emo</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2393">
                <ruleml:Rel iri="prOnto:monitor" />
                <ruleml:Var keyref=":emo" />
                <ruleml:Var keyref=":b" />
                <ruleml:Var key=":ecw">ecw</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2394">
                <ruleml:Rel iri="prOnto:complyWith" />
                <ruleml:Var keyref=":ecw" />
                <ruleml:Var keyref=":x" />
                <ruleml:Var keyref=":cc" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Permission>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements232">
    <lrml:PrescriptiveStatement key="statements232Formula1">
      <!--
Permission:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :ed1 :ed2 :ei1 :ei2 :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:bodyCC :b) & (prOnto:demonstrate' :ed1 :b :ein)
	 & (prOnto:expertIn' :ein :b :cc) & (prOnto:codeOfConduct :cc) & (prOnto:demonstrate' :ed2 :b :eni)
	 & (rioOnto:not :eni :eci) & (prOnto:conflictOfInterest' :eci :b :cc) & (prOnto:implement' :ei1 :b :eme1)
	 & (prOnto:measure :eme1) & (rioOnto:cause :ei1 :em1) & (prOnto:monitor' :em1 :b :ea1)
	 & (prOnto:ableTo' :ea1 :y :ec1) & (prOnto:complyWith' :ec1 :y GDPR) & (rioOnto:cause :ei1 :em2)
	 & (prOnto:monitor' :em2 :b :ea2) & (prOnto:ableTo' :ea2 :x :ec2) & (prOnto:complyWith' :ec2 :x GDPR)
	 & (prOnto:implement' :ei2 :b :eme2) & (prOnto:measure :eme2) & (rioOnto:cause :ei2 :erf)
	 & (prOnto:receiveFrom' :erf :b :c :w) & (prOnto:complaint :c) & (prOnto:relatedTo :c :evi)
	 & (prOnto:violationOf' :evi GDPR) & (prOnto:publish' :epu :b :ei2) & (prOnto:awareOf' :eaw prOnto:supAuth(prOnto:MSof(:y)) :ed1)
	 & (rioOnto:exceptionCha4Sec5Art41Par6 :et),

	(rioOnto:RexistAtTime :a2 :t1) & (rioOnto:and :a2 :eac :emo) & (prOnto:accreditedBy' :eac :b prOnto:supAuth(prOnto:MSof(:y))) & (prOnto:monitor' :emo :b :ecw)
	 & (prOnto:complyWith' :ecw :y :cc)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":ed1">ed1</ruleml:Var>
              <ruleml:Var key=":ed2">ed2</ruleml:Var>
              <ruleml:Var key=":ei1">ei1</ruleml:Var>
              <ruleml:Var key=":ei2">ei2</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2395">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2396">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:bodyCC" />
              <ruleml:Var key=":b">b</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2397">
              <ruleml:Rel iri="prOnto:demonstrate" />
              <ruleml:Var keyref=":ed1" />
              <ruleml:Var keyref=":b" />
              <ruleml:Var key=":ein">ein</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2398">
              <ruleml:Rel iri="prOnto:expertIn" />
              <ruleml:Var keyref=":ein" />
              <ruleml:Var keyref=":b" />
              <ruleml:Var key=":cc">cc</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:codeOfConduct" />
              <ruleml:Var keyref=":cc" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2399">
              <ruleml:Rel iri="prOnto:demonstrate" />
              <ruleml:Var keyref=":ed2" />
              <ruleml:Var keyref=":b" />
              <ruleml:Var key=":eni">eni</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":eni" />
              <ruleml:Var key=":eci">eci</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2400">
              <ruleml:Rel iri="prOnto:conflictOfInterest" />
              <ruleml:Var keyref=":eci" />
              <ruleml:Var keyref=":b" />
              <ruleml:Var keyref=":cc" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2401">
              <ruleml:Rel iri="prOnto:implement" />
              <ruleml:Var keyref=":ei1" />
              <ruleml:Var keyref=":b" />
              <ruleml:Var key=":eme1">eme1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:measure" />
              <ruleml:Var keyref=":eme1" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:cause" />
              <ruleml:Var keyref=":ei1" />
              <ruleml:Var key=":em1">em1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2402">
              <ruleml:Rel iri="prOnto:monitor" />
              <ruleml:Var keyref=":em1" />
              <ruleml:Var keyref=":b" />
              <ruleml:Var key=":ea1">ea1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2403">
              <ruleml:Rel iri="prOnto:ableTo" />
              <ruleml:Var keyref=":ea1" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":ec1">ec1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2404">
              <ruleml:Rel iri="prOnto:complyWith" />
              <ruleml:Var keyref=":ec1" />
              <ruleml:Var keyref=":y" />
              <ruleml:Ind>GDPR</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:cause" />
              <ruleml:Var keyref=":ei1" />
              <ruleml:Var key=":em2">em2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2405">
              <ruleml:Rel iri="prOnto:monitor" />
              <ruleml:Var keyref=":em2" />
              <ruleml:Var keyref=":b" />
              <ruleml:Var key=":ea2">ea2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2406">
              <ruleml:Rel iri="prOnto:ableTo" />
              <ruleml:Var keyref=":ea2" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var key=":ec2">ec2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2407">
              <ruleml:Rel iri="prOnto:complyWith" />
              <ruleml:Var keyref=":ec2" />
              <ruleml:Var keyref=":x" />
              <ruleml:Ind>GDPR</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2408">
              <ruleml:Rel iri="prOnto:implement" />
              <ruleml:Var keyref=":ei2" />
              <ruleml:Var keyref=":b" />
              <ruleml:Var key=":eme2">eme2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:measure" />
              <ruleml:Var keyref=":eme2" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:cause" />
              <ruleml:Var keyref=":ei2" />
              <ruleml:Var key=":erf">erf</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2409">
              <ruleml:Rel iri="prOnto:receiveFrom" />
              <ruleml:Var keyref=":erf" />
              <ruleml:Var keyref=":b" />
              <ruleml:Var key=":c">c</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:complaint" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:relatedTo" />
              <ruleml:Var keyref=":c" />
              <ruleml:Var key=":evi">evi</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2410">
              <ruleml:Rel iri="prOnto:violationOf" />
              <ruleml:Var keyref=":evi" />
              <ruleml:Ind>GDPR</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2411">
              <ruleml:Rel iri="prOnto:publish" />
              <ruleml:Var key=":epu">epu</ruleml:Var>
              <ruleml:Var keyref=":b" />
              <ruleml:Var keyref=":ei2" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2412">
              <ruleml:Rel iri="prOnto:awareOf" />
              <ruleml:Var key=":eaw">eaw</ruleml:Var>
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:supAuth" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:MSof" />
                  <ruleml:Var keyref=":y" />
                </ruleml:Expr>
              </ruleml:Expr>
              <ruleml:Var keyref=":ed1" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha4Sec5Art41Par6" />
                <ruleml:Var keyref=":et" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Permission iri="rioOnto:Permission">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":a2">a2</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:and" />
                <ruleml:Var keyref=":a2" />
                <ruleml:Var key=":eac">eac</ruleml:Var>
                <ruleml:Var key=":emo">emo</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2413">
                <ruleml:Rel iri="prOnto:accreditedBy" />
                <ruleml:Var keyref=":eac" />
                <ruleml:Var keyref=":b" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:supAuth" />
                  <ruleml:Expr>
                    <ruleml:Fun iri="prOnto:MSof" />
                    <ruleml:Var keyref=":y" />
                  </ruleml:Expr>
                </ruleml:Expr>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2414">
                <ruleml:Rel iri="prOnto:monitor" />
                <ruleml:Var keyref=":emo" />
                <ruleml:Var keyref=":b" />
                <ruleml:Var key=":ecw">ecw</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2415">
                <ruleml:Rel iri="prOnto:complyWith" />
                <ruleml:Var keyref=":ecw" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":cc" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Permission>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements233">
    <lrml:PrescriptiveStatement key="statements233Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :enc :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:bodyCC :b) & (rioOnto:not :enc :eco)
	 & (prOnto:complyWith' :eco :y GDPR) & (rioOnto:exceptionCha4Sec5Art41Par6 :et),

	(rioOnto:RexistAtTime :a2 :t2) & (rioOnto:>= :t2 :t1) & (rioOnto:and :a2 :ee :eta :en1 :en2) & (prOnto:execute' :ee :b :et)
	 & (prOnto:appropriate :et) & (prOnto:takenToAddress' :eta :et :enc) & (prOnto:Communicate' :en1 :b prOnto:supAuth(prOnto:MSof(:y)) :enc)
	 & (prOnto:Communicate' :en2 :b prOnto:supAuth(prOnto:MSof(:y)) :et)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":enc">enc</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2416">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2417">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:bodyCC" />
              <ruleml:Var key=":b">b</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":enc" />
              <ruleml:Var key=":eco">eco</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2418">
              <ruleml:Rel iri="prOnto:complyWith" />
              <ruleml:Var keyref=":eco" />
              <ruleml:Var keyref=":y" />
              <ruleml:Ind>GDPR</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha4Sec5Art41Par6" />
                <ruleml:Var keyref=":et" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":a2">a2</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:and" />
                <ruleml:Var keyref=":a2" />
                <ruleml:Var key=":ee">ee</ruleml:Var>
                <ruleml:Var key=":eta">eta</ruleml:Var>
                <ruleml:Var key=":en1">en1</ruleml:Var>
                <ruleml:Var key=":en2">en2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2419">
                <ruleml:Rel iri="prOnto:execute" />
                <ruleml:Var keyref=":ee" />
                <ruleml:Var keyref=":b" />
                <ruleml:Var key=":et">et</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:appropriate" />
                <ruleml:Var keyref=":et" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2420">
                <ruleml:Rel iri="prOnto:takenToAddress" />
                <ruleml:Var keyref=":eta" />
                <ruleml:Var keyref=":et" />
                <ruleml:Var keyref=":enc" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2421">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en1" />
                <ruleml:Var keyref=":b" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:supAuth" />
                  <ruleml:Expr>
                    <ruleml:Fun iri="prOnto:MSof" />
                    <ruleml:Var keyref=":y" />
                  </ruleml:Expr>
                </ruleml:Expr>
                <ruleml:Var keyref=":enc" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2422">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en2" />
                <ruleml:Var keyref=":b" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:supAuth" />
                  <ruleml:Expr>
                    <ruleml:Fun iri="prOnto:MSof" />
                    <ruleml:Var keyref=":y" />
                  </ruleml:Expr>
                </ruleml:Expr>
                <ruleml:Var keyref=":et" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements233Formula2">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :enc :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:bodyCC :b) & (rioOnto:not :enc :eco)
	 & (prOnto:complyWith' :eco :x GDPR) & (rioOnto:exceptionCha4Sec5Art41Par6 :et),

	(rioOnto:RexistAtTime :a2 :t2) & (rioOnto:>= :t2 :t1) & (rioOnto:and :a2 :ee :eta :en1 :en2) & (prOnto:execute' :ee :b :et)
	 & (prOnto:appropriate :et) & (prOnto:takenToAddress' :eta :et :enc) & (prOnto:Communicate' :en1 :b prOnto:supAuth(prOnto:MSof(:y)) :enc)
	 & (prOnto:Communicate' :en2 :b prOnto:supAuth(prOnto:MSof(:y)) :et)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":enc">enc</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2423">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2424">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:bodyCC" />
              <ruleml:Var key=":b">b</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":enc" />
              <ruleml:Var key=":eco">eco</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2425">
              <ruleml:Rel iri="prOnto:complyWith" />
              <ruleml:Var keyref=":eco" />
              <ruleml:Var keyref=":x" />
              <ruleml:Ind>GDPR</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha4Sec5Art41Par6" />
                <ruleml:Var keyref=":et" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":a2">a2</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:and" />
                <ruleml:Var keyref=":a2" />
                <ruleml:Var key=":ee">ee</ruleml:Var>
                <ruleml:Var key=":eta">eta</ruleml:Var>
                <ruleml:Var key=":en1">en1</ruleml:Var>
                <ruleml:Var key=":en2">en2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2426">
                <ruleml:Rel iri="prOnto:execute" />
                <ruleml:Var keyref=":ee" />
                <ruleml:Var keyref=":b" />
                <ruleml:Var key=":et">et</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:appropriate" />
                <ruleml:Var keyref=":et" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2427">
                <ruleml:Rel iri="prOnto:takenToAddress" />
                <ruleml:Var keyref=":eta" />
                <ruleml:Var keyref=":et" />
                <ruleml:Var keyref=":enc" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2428">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en1" />
                <ruleml:Var keyref=":b" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:supAuth" />
                  <ruleml:Expr>
                    <ruleml:Fun iri="prOnto:MSof" />
                    <ruleml:Var keyref=":y" />
                  </ruleml:Expr>
                </ruleml:Expr>
                <ruleml:Var keyref=":enc" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2429">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en2" />
                <ruleml:Var keyref=":b" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:supAuth" />
                  <ruleml:Expr>
                    <ruleml:Fun iri="prOnto:MSof" />
                    <ruleml:Var keyref=":y" />
                  </ruleml:Expr>
                </ruleml:Expr>
                <ruleml:Var keyref=":et" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements234">
    <lrml:ConstitutiveStatement key="statements234Formula1">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :enc :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:bodyCC :b) & (prOnto:publicAuthority :b),

	(rioOnto:exceptionCha4Sec5Art41Par6 :ep)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":enc">enc</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2430">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2431">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:bodyCC" />
              <ruleml:Var key=":b">b</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:publicAuthority" />
              <ruleml:Var key=":b">b</ruleml:Var>
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:exceptionCha4Sec5Art41Par6" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements235">
    <lrml:PrescriptiveStatement key="statements235Formula1">
      <!--
Permission:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :eor :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:countryOf :w :cw) & (rioOnto:partOf :cw EuropeanUnion)
	 & (prOnto:countryOf :y :cy) & (rioOnto:partOf :cy EuropeanUnion) & (rioOnto:or :eor :eof :emo)
	 & (prOnto:offer' :eof :y :k) & (prOnto:goodsOrServices :k) & (prOnto:monitor' :emo :y :w),

	(rioOnto:RexistAtTime :ead :t2) & (rioOnto:>= :t2 :t1) & (prOnto:adhereTo' :ead :y :acm) & (prOnto:approvedCertificationMechanism :acm)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":eor">eor</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2432">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2433">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:countryOf" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var key=":cw">cw</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:partOf" />
              <ruleml:Var keyref=":cw" />
              <ruleml:Ind>EuropeanUnion</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:countryOf" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":cy">cy</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:partOf" />
              <ruleml:Var keyref=":cy" />
              <ruleml:Ind>EuropeanUnion</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eor" />
              <ruleml:Var key=":eof">eof</ruleml:Var>
              <ruleml:Var key=":emo">emo</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2434">
              <ruleml:Rel iri="prOnto:offer" />
              <ruleml:Var keyref=":eof" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:goodsOrServices" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2435">
              <ruleml:Rel iri="prOnto:monitor" />
              <ruleml:Var keyref=":emo" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Permission iri="rioOnto:Permission">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":ead">ead</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2436">
                <ruleml:Rel iri="prOnto:adhereTo" />
                <ruleml:Var keyref=":ead" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var key=":acm">acm</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:approvedCertificationMechanism" />
                <ruleml:Var keyref=":acm" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Permission>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements236">
    <lrml:PrescriptiveStatement key="statements236Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :ead :etr :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:adhereTo' :ead :y :acm) & (prOnto:approvedCertificationMechanism :acm)
	 & (prOnto:transparent' :etr :ead),

	(rioOnto:RexistAtTime :eno :t1) & (rioOnto:not :eno :eob) & (rioOnto:Obliged' :eob :k :ead :t1)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":ead">ead</ruleml:Var>
              <ruleml:Var key=":etr">etr</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2437">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2438">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2439">
              <ruleml:Rel iri="prOnto:adhereTo" />
              <ruleml:Var keyref=":ead" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":acm">acm</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:approvedCertificationMechanism" />
              <ruleml:Var keyref=":acm" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2440">
              <ruleml:Rel iri="prOnto:transparent" />
              <ruleml:Var keyref=":etr" />
              <ruleml:Var keyref=":ead" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":eno">eno</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:not" />
                <ruleml:Var keyref=":eno" />
                <ruleml:Var key=":eob">eob</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2441">
                <ruleml:Rel iri="rioOnto:Obliged" />
                <ruleml:Var keyref=":eob" />
                <ruleml:Var key=":k">k</ruleml:Var>
                <ruleml:Var keyref=":ead" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements236Formula2">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :ead :etr :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:adhereTo' :ead :x :acm) & (prOnto:approvedCertificationMechanism :acm)
	 & (prOnto:transparent' :etr :ead),

	(rioOnto:RexistAtTime :eno :t1) & (rioOnto:not :eno :eob) & (rioOnto:Obliged' :eob :k :ead :t1)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":ead">ead</ruleml:Var>
              <ruleml:Var key=":etr">etr</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2442">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2443">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2444">
              <ruleml:Rel iri="prOnto:adhereTo" />
              <ruleml:Var keyref=":ead" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var key=":acm">acm</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:approvedCertificationMechanism" />
              <ruleml:Var keyref=":acm" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2445">
              <ruleml:Rel iri="prOnto:transparent" />
              <ruleml:Var keyref=":etr" />
              <ruleml:Var keyref=":ead" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":eno">eno</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:not" />
                <ruleml:Var keyref=":eno" />
                <ruleml:Var key=":eob">eob</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2446">
                <ruleml:Rel iri="rioOnto:Obliged" />
                <ruleml:Var keyref=":eob" />
                <ruleml:Var key=":k">k</ruleml:Var>
                <ruleml:Var keyref=":ead" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements237">
    <lrml:PrescriptiveStatement key="statements237Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :er :ere :eac :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:request' :er :y :ead) & (prOnto:adhereTo' :ead :y :acm)
	 & (prOnto:approvedCertificationMechanism :acm) & (prOnto:bodyACM :b) & (prOnto:responsibleFor' :ere :b :acm)
	 & (prOnto:accreditedBy' :eac :b prOnto:supAuth(prOnto:MSof(:y))),

	(rioOnto:RexistAtTime :eor :t1) & (rioOnto:or :eor :en1 :en2) & (prOnto:Communicate' :en1 :y :b prOnto:allInfoAbout(:ep)) & (prOnto:Communicate' :en2 :y prOnto:supAuth(prOnto:MSof(:y)) prOnto:allInfoAbout(:ep))
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":er">er</ruleml:Var>
              <ruleml:Var key=":ere">ere</ruleml:Var>
              <ruleml:Var key=":eac">eac</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2447">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2448">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2449">
              <ruleml:Rel iri="prOnto:request" />
              <ruleml:Var keyref=":er" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":ead">ead</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2450">
              <ruleml:Rel iri="prOnto:adhereTo" />
              <ruleml:Var keyref=":ead" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":acm">acm</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:approvedCertificationMechanism" />
              <ruleml:Var keyref=":acm" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:bodyACM" />
              <ruleml:Var key=":b">b</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2451">
              <ruleml:Rel iri="prOnto:responsibleFor" />
              <ruleml:Var keyref=":ere" />
              <ruleml:Var keyref=":b" />
              <ruleml:Var keyref=":acm" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2452">
              <ruleml:Rel iri="prOnto:accreditedBy" />
              <ruleml:Var keyref=":eac" />
              <ruleml:Var keyref=":b" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:supAuth" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:MSof" />
                  <ruleml:Var keyref=":y" />
                </ruleml:Expr>
              </ruleml:Expr>
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":eor">eor</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:or" />
                <ruleml:Var keyref=":eor" />
                <ruleml:Var key=":en1">en1</ruleml:Var>
                <ruleml:Var key=":en2">en2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2453">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en1" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":b" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:allInfoAbout" />
                  <ruleml:Var keyref=":ep" />
                </ruleml:Expr>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2454">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en2" />
                <ruleml:Var keyref=":y" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:supAuth" />
                  <ruleml:Expr>
                    <ruleml:Fun iri="prOnto:MSof" />
                    <ruleml:Var keyref=":y" />
                  </ruleml:Expr>
                </ruleml:Expr>
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:allInfoAbout" />
                  <ruleml:Var keyref=":ep" />
                </ruleml:Expr>
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements237Formula2">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :er :ere :eac :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:request' :er :x :ead) & (prOnto:adhereTo' :ead :x :acm)
	 & (prOnto:approvedCertificationMechanism :acm) & (prOnto:bodyACM :b) & (prOnto:responsibleFor' :ere :b :acm)
	 & (prOnto:accreditedBy' :eac :b prOnto:supAuth(prOnto:MSof(:y))),

	(rioOnto:RexistAtTime :eor :t1) & (rioOnto:or :eor :en1 :en2) & (prOnto:Communicate' :en1 :x :b prOnto:allInfoAbout(:ep)) & (prOnto:Communicate' :en2 :x prOnto:supAuth(prOnto:MSof(:y)) prOnto:allInfoAbout(:ep))
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":er">er</ruleml:Var>
              <ruleml:Var key=":ere">ere</ruleml:Var>
              <ruleml:Var key=":eac">eac</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2455">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2456">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2457">
              <ruleml:Rel iri="prOnto:request" />
              <ruleml:Var keyref=":er" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var key=":ead">ead</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2458">
              <ruleml:Rel iri="prOnto:adhereTo" />
              <ruleml:Var keyref=":ead" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var key=":acm">acm</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:approvedCertificationMechanism" />
              <ruleml:Var keyref=":acm" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:bodyACM" />
              <ruleml:Var key=":b">b</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2459">
              <ruleml:Rel iri="prOnto:responsibleFor" />
              <ruleml:Var keyref=":ere" />
              <ruleml:Var keyref=":b" />
              <ruleml:Var keyref=":acm" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2460">
              <ruleml:Rel iri="prOnto:accreditedBy" />
              <ruleml:Var keyref=":eac" />
              <ruleml:Var keyref=":b" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:supAuth" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:MSof" />
                  <ruleml:Var keyref=":y" />
                </ruleml:Expr>
              </ruleml:Expr>
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":eor">eor</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:or" />
                <ruleml:Var keyref=":eor" />
                <ruleml:Var key=":en1">en1</ruleml:Var>
                <ruleml:Var key=":en2">en2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2461">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en1" />
                <ruleml:Var keyref=":x" />
                <ruleml:Var keyref=":b" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:allInfoAbout" />
                  <ruleml:Var keyref=":ep" />
                </ruleml:Expr>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2462">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en2" />
                <ruleml:Var keyref=":x" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:supAuth" />
                  <ruleml:Expr>
                    <ruleml:Fun iri="prOnto:MSof" />
                    <ruleml:Var keyref=":y" />
                  </ruleml:Expr>
                </ruleml:Expr>
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:allInfoAbout" />
                  <ruleml:Var keyref=":ep" />
                </ruleml:Expr>
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements238">
    <lrml:ConstitutiveStatement key="statements238Formula1">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :ead :ere :eac :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:adhereTo' :ead :y :acm) & (prOnto:approvedCertificationMechanism :acm)
	 & (prOnto:bodyACM :b) & (prOnto:responsibleFor' :ere :b :acm) & (prOnto:accreditedBy' :eac :b prOnto:supAuth(prOnto:MSof(:y))),

	(rioOnto:RexistAtTime :ena :t2) & (rioOnto:< :t2 rioOnto:+(:t1, 3y)) & (rioOnto:not :ena :ead)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":ead">ead</ruleml:Var>
              <ruleml:Var key=":ere">ere</ruleml:Var>
              <ruleml:Var key=":eac">eac</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2463">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2464">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2465">
              <ruleml:Rel iri="prOnto:adhereTo" />
              <ruleml:Var keyref=":ead" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":acm">acm</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:approvedCertificationMechanism" />
              <ruleml:Var keyref=":acm" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:bodyACM" />
              <ruleml:Var key=":b">b</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2466">
              <ruleml:Rel iri="prOnto:responsibleFor" />
              <ruleml:Var keyref=":ere" />
              <ruleml:Var keyref=":b" />
              <ruleml:Var keyref=":acm" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2467">
              <ruleml:Rel iri="prOnto:accreditedBy" />
              <ruleml:Var keyref=":eac" />
              <ruleml:Var keyref=":b" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:supAuth" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:MSof" />
                  <ruleml:Var keyref=":y" />
                </ruleml:Expr>
              </ruleml:Expr>
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":ena">ena</ruleml:Var>
              <ruleml:Var key=":t2">t2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:&lt;" />
              <ruleml:Var keyref=":t2" />
              <ruleml:Expr>
                <ruleml:Fun iri="rioOnto:+" />
                <ruleml:Var keyref=":t1" />
                <ruleml:Ind>3y</ruleml:Ind>
              </ruleml:Expr>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":ena" />
              <ruleml:Var keyref=":ead" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
    <lrml:ConstitutiveStatement key="statements238Formula2">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :ead :ere :eac :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:adhereTo' :ead :x :acm) & (prOnto:approvedCertificationMechanism :acm)
	 & (prOnto:bodyACM :b) & (prOnto:responsibleFor' :ere :b :acm) & (prOnto:accreditedBy' :eac :b prOnto:supAuth(prOnto:MSof(:y))),

	(rioOnto:RexistAtTime :ena :t2) & (rioOnto:< :t2 rioOnto:+(:t1, 3y)) & (rioOnto:not :ena :ead)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":ead">ead</ruleml:Var>
              <ruleml:Var key=":ere">ere</ruleml:Var>
              <ruleml:Var key=":eac">eac</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2468">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2469">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2470">
              <ruleml:Rel iri="prOnto:adhereTo" />
              <ruleml:Var keyref=":ead" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var key=":acm">acm</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:approvedCertificationMechanism" />
              <ruleml:Var keyref=":acm" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:bodyACM" />
              <ruleml:Var key=":b">b</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2471">
              <ruleml:Rel iri="prOnto:responsibleFor" />
              <ruleml:Var keyref=":ere" />
              <ruleml:Var keyref=":b" />
              <ruleml:Var keyref=":acm" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2472">
              <ruleml:Rel iri="prOnto:accreditedBy" />
              <ruleml:Var keyref=":eac" />
              <ruleml:Var keyref=":b" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:supAuth" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:MSof" />
                  <ruleml:Var keyref=":y" />
                </ruleml:Expr>
              </ruleml:Expr>
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":ena">ena</ruleml:Var>
              <ruleml:Var key=":t2">t2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:&lt;" />
              <ruleml:Var keyref=":t2" />
              <ruleml:Expr>
                <ruleml:Fun iri="rioOnto:+" />
                <ruleml:Var keyref=":t1" />
                <ruleml:Ind>3y</ruleml:Ind>
              </ruleml:Expr>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":ena" />
              <ruleml:Var keyref=":ead" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements239">
    <lrml:PrescriptiveStatement key="statements239Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :er :ere :eac :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:request' :er :y :ead) & (prOnto:adhereTo' :ead :y :acm)
	 & (prOnto:approvedCertificationMechanism :acm) & (prOnto:bodyACM :b) & (prOnto:responsibleFor' :ere :b :acm)
	 & (prOnto:accreditedBy' :eac :b prOnto:supAuth(prOnto:MSof(:y))),

	(rioOnto:RexistAtTime :a2 :t1) & (rioOnto:and :a2 :ead :en) & (prOnto:Communicate' :en :b prOnto:supAuth(prOnto:MSof(:y)) :ead)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":er">er</ruleml:Var>
              <ruleml:Var key=":ere">ere</ruleml:Var>
              <ruleml:Var key=":eac">eac</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2473">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2474">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2475">
              <ruleml:Rel iri="prOnto:request" />
              <ruleml:Var keyref=":er" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":ead">ead</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2476">
              <ruleml:Rel iri="prOnto:adhereTo" />
              <ruleml:Var keyref=":ead" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":acm">acm</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:approvedCertificationMechanism" />
              <ruleml:Var keyref=":acm" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:bodyACM" />
              <ruleml:Var key=":b">b</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2477">
              <ruleml:Rel iri="prOnto:responsibleFor" />
              <ruleml:Var keyref=":ere" />
              <ruleml:Var keyref=":b" />
              <ruleml:Var keyref=":acm" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2478">
              <ruleml:Rel iri="prOnto:accreditedBy" />
              <ruleml:Var keyref=":eac" />
              <ruleml:Var keyref=":b" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:supAuth" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:MSof" />
                  <ruleml:Var keyref=":y" />
                </ruleml:Expr>
              </ruleml:Expr>
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":a2">a2</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:and" />
                <ruleml:Var keyref=":a2" />
                <ruleml:Var keyref=":ead" />
                <ruleml:Var key=":en">en</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2479">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en" />
                <ruleml:Var keyref=":b" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:supAuth" />
                  <ruleml:Expr>
                    <ruleml:Fun iri="prOnto:MSof" />
                    <ruleml:Var keyref=":y" />
                  </ruleml:Expr>
                </ruleml:Expr>
                <ruleml:Var keyref=":ead" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements239Formula2">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :er :ere :eac :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:request' :er :x :ead) & (prOnto:adhereTo' :ead :x :acm)
	 & (prOnto:approvedCertificationMechanism :acm) & (prOnto:bodyACM :b) & (prOnto:responsibleFor' :ere :b :acm)
	 & (prOnto:accreditedBy' :eac :b prOnto:supAuth(prOnto:MSof(:y))),

	(rioOnto:RexistAtTime :a2 :t1) & (rioOnto:and :a2 :ead :en) & (prOnto:Communicate' :en :b prOnto:supAuth(prOnto:MSof(:y)) :ead)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":er">er</ruleml:Var>
              <ruleml:Var key=":ere">ere</ruleml:Var>
              <ruleml:Var key=":eac">eac</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2480">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2481">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2482">
              <ruleml:Rel iri="prOnto:request" />
              <ruleml:Var keyref=":er" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var key=":ead">ead</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2483">
              <ruleml:Rel iri="prOnto:adhereTo" />
              <ruleml:Var keyref=":ead" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var key=":acm">acm</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:approvedCertificationMechanism" />
              <ruleml:Var keyref=":acm" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:bodyACM" />
              <ruleml:Var key=":b">b</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2484">
              <ruleml:Rel iri="prOnto:responsibleFor" />
              <ruleml:Var keyref=":ere" />
              <ruleml:Var keyref=":b" />
              <ruleml:Var keyref=":acm" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2485">
              <ruleml:Rel iri="prOnto:accreditedBy" />
              <ruleml:Var keyref=":eac" />
              <ruleml:Var keyref=":b" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:supAuth" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:MSof" />
                  <ruleml:Var keyref=":y" />
                </ruleml:Expr>
              </ruleml:Expr>
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":a2">a2</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:and" />
                <ruleml:Var keyref=":a2" />
                <ruleml:Var keyref=":ead" />
                <ruleml:Var key=":en">en</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2486">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en" />
                <ruleml:Var keyref=":b" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:supAuth" />
                  <ruleml:Expr>
                    <ruleml:Fun iri="prOnto:MSof" />
                    <ruleml:Var keyref=":y" />
                  </ruleml:Expr>
                </ruleml:Expr>
                <ruleml:Var keyref=":ead" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements240">
    <lrml:ConstitutiveStatement key="statements240Formula1">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :ead :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:adhereTo' :ead :y :acm) & (prOnto:approvedCertificationMechanism :acm)
	 & (prOnto:bodyACM :b) & (prOnto:accreditedBy' :eac :b prOnto:supAuth(prOnto:MSof(:y))),

	(rioOnto:RexistAtTime :en :t1) & (prOnto:responsibleFor' :ere :b :ead)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":ead">ead</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2487">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2488">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2489">
              <ruleml:Rel iri="prOnto:adhereTo" />
              <ruleml:Var keyref=":ead" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":acm">acm</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:approvedCertificationMechanism" />
              <ruleml:Var keyref=":acm" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:bodyACM" />
              <ruleml:Var key=":b">b</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2490">
              <ruleml:Rel iri="prOnto:accreditedBy" />
              <ruleml:Var keyref=":eac" />
              <ruleml:Var keyref=":b" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:supAuth" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:MSof" />
                  <ruleml:Var keyref=":y" />
                </ruleml:Expr>
              </ruleml:Expr>
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":en">en</ruleml:Var>
              <ruleml:Var keyref=":t1" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2491">
              <ruleml:Rel iri="prOnto:responsibleFor" />
              <ruleml:Var keyref=":ere" />
              <ruleml:Var keyref=":b" />
              <ruleml:Var keyref=":ead" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
    <lrml:ConstitutiveStatement key="statements240Formula2">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :ewd :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:adhereTo' :ead :y :acm) & (prOnto:withdrawConsentFrom' :ewd :b :ead)
	 & (prOnto:approvedCertificationMechanism :acm) & (prOnto:bodyACM :b) & (prOnto:accreditedBy' :eac :b prOnto:supAuth(prOnto:MSof(:y))),

	(rioOnto:RexistAtTime :en :t1) & (prOnto:responsibleFor' :ere :b :ewd)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":ewd">ewd</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2492">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2493">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2494">
              <ruleml:Rel iri="prOnto:adhereTo" />
              <ruleml:Var keyref=":ead" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":acm">acm</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2495">
              <ruleml:Rel iri="prOnto:withdrawConsentFrom" />
              <ruleml:Var keyref=":ewd" />
              <ruleml:Var keyref=":b" />
              <ruleml:Var keyref=":ead" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:approvedCertificationMechanism" />
              <ruleml:Var keyref=":acm" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:bodyACM" />
              <ruleml:Var key=":b">b</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2496">
              <ruleml:Rel iri="prOnto:accreditedBy" />
              <ruleml:Var keyref=":eac" />
              <ruleml:Var keyref=":b" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:supAuth" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:MSof" />
                  <ruleml:Var keyref=":y" />
                </ruleml:Expr>
              </ruleml:Expr>
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":en">en</ruleml:Var>
              <ruleml:Var keyref=":t1" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2497">
              <ruleml:Rel iri="prOnto:responsibleFor" />
              <ruleml:Var keyref=":ere" />
              <ruleml:Var keyref=":b" />
              <ruleml:Var keyref=":ewd" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
    <lrml:ConstitutiveStatement key="statements240Formula3">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :ead :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:adhereTo' :ead :x :acm) & (prOnto:approvedCertificationMechanism :acm)
	 & (prOnto:bodyACM :b) & (prOnto:accreditedBy' :eac :b prOnto:supAuth(prOnto:MSof(:y))),

	(rioOnto:RexistAtTime :en :t1) & (prOnto:responsibleFor' :ere :b :ead)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":ead">ead</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2498">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2499">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2500">
              <ruleml:Rel iri="prOnto:adhereTo" />
              <ruleml:Var keyref=":ead" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var key=":acm">acm</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:approvedCertificationMechanism" />
              <ruleml:Var keyref=":acm" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:bodyACM" />
              <ruleml:Var key=":b">b</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2501">
              <ruleml:Rel iri="prOnto:accreditedBy" />
              <ruleml:Var keyref=":eac" />
              <ruleml:Var keyref=":b" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:supAuth" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:MSof" />
                  <ruleml:Var keyref=":y" />
                </ruleml:Expr>
              </ruleml:Expr>
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":en">en</ruleml:Var>
              <ruleml:Var keyref=":t1" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2502">
              <ruleml:Rel iri="prOnto:responsibleFor" />
              <ruleml:Var keyref=":ere" />
              <ruleml:Var keyref=":b" />
              <ruleml:Var keyref=":ead" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
    <lrml:ConstitutiveStatement key="statements240Formula4">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :ewd :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:adhereTo' :ead :x :acm) & (prOnto:withdrawConsentFrom' :ewd :b :ead)
	 & (prOnto:approvedCertificationMechanism :acm) & (prOnto:bodyACM :b) & (prOnto:accreditedBy' :eac :b prOnto:supAuth(prOnto:MSof(:y))),

	(rioOnto:RexistAtTime :en :t1) & (prOnto:responsibleFor' :ere :b :ewd)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":ewd">ewd</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2503">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2504">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2505">
              <ruleml:Rel iri="prOnto:adhereTo" />
              <ruleml:Var keyref=":ead" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var key=":acm">acm</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2506">
              <ruleml:Rel iri="prOnto:withdrawConsentFrom" />
              <ruleml:Var keyref=":ewd" />
              <ruleml:Var keyref=":b" />
              <ruleml:Var keyref=":ead" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:approvedCertificationMechanism" />
              <ruleml:Var keyref=":acm" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:bodyACM" />
              <ruleml:Var key=":b">b</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2507">
              <ruleml:Rel iri="prOnto:accreditedBy" />
              <ruleml:Var keyref=":eac" />
              <ruleml:Var keyref=":b" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:supAuth" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:MSof" />
                  <ruleml:Var keyref=":y" />
                </ruleml:Expr>
              </ruleml:Expr>
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":en">en</ruleml:Var>
              <ruleml:Var keyref=":t1" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2508">
              <ruleml:Rel iri="prOnto:responsibleFor" />
              <ruleml:Var keyref=":ere" />
              <ruleml:Var keyref=":b" />
              <ruleml:Var keyref=":ewd" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements241">
    <lrml:PrescriptiveStatement key="statements241Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :ead :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:adhereTo' :ead :y :acm) & (prOnto:approvedCertificationMechanism :acm)
	 & (prOnto:bodyACM :b) & (prOnto:accreditedBy' :eac :b prOnto:supAuth(prOnto:MSof(:y))),

	(rioOnto:RexistAtTime :en :t2) & (rioOnto:>= :t2 :t1) & (prOnto:Communicate' :en :b prOnto:supAuth(prOnto:MSof(:y)) :l) & (prOnto:letterReasonFor :l :ead)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":ead">ead</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2509">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2510">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2511">
              <ruleml:Rel iri="prOnto:adhereTo" />
              <ruleml:Var keyref=":ead" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":acm">acm</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:approvedCertificationMechanism" />
              <ruleml:Var keyref=":acm" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:bodyACM" />
              <ruleml:Var key=":b">b</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2512">
              <ruleml:Rel iri="prOnto:accreditedBy" />
              <ruleml:Var keyref=":eac" />
              <ruleml:Var keyref=":b" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:supAuth" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:MSof" />
                  <ruleml:Var keyref=":y" />
                </ruleml:Expr>
              </ruleml:Expr>
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":en">en</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2513">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en" />
                <ruleml:Var keyref=":b" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:supAuth" />
                  <ruleml:Expr>
                    <ruleml:Fun iri="prOnto:MSof" />
                    <ruleml:Var keyref=":y" />
                  </ruleml:Expr>
                </ruleml:Expr>
                <ruleml:Var key=":l">l</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:letterReasonFor" />
                <ruleml:Var key=":l">l</ruleml:Var>
                <ruleml:Var keyref=":ead" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements241Formula2">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :ewd :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:adhereTo' :ead :y :acm) & (prOnto:withdrawConsentFrom' :ewd :b :ead)
	 & (prOnto:approvedCertificationMechanism :acm) & (prOnto:bodyACM :b) & (prOnto:accreditedBy' :eac :b prOnto:supAuth(prOnto:MSof(:y))),

	(rioOnto:RexistAtTime :en :t2) & (rioOnto:>= :t2 :t1) & (prOnto:Communicate' :en :b prOnto:supAuth(prOnto:MSof(:y)) :l) & (prOnto:letterReasonFor :l :ewd)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":ewd">ewd</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2514">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2515">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2516">
              <ruleml:Rel iri="prOnto:adhereTo" />
              <ruleml:Var keyref=":ead" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":acm">acm</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2517">
              <ruleml:Rel iri="prOnto:withdrawConsentFrom" />
              <ruleml:Var keyref=":ewd" />
              <ruleml:Var keyref=":b" />
              <ruleml:Var keyref=":ead" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:approvedCertificationMechanism" />
              <ruleml:Var keyref=":acm" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:bodyACM" />
              <ruleml:Var key=":b">b</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2518">
              <ruleml:Rel iri="prOnto:accreditedBy" />
              <ruleml:Var keyref=":eac" />
              <ruleml:Var keyref=":b" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:supAuth" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:MSof" />
                  <ruleml:Var keyref=":y" />
                </ruleml:Expr>
              </ruleml:Expr>
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":en">en</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2519">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en" />
                <ruleml:Var keyref=":b" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:supAuth" />
                  <ruleml:Expr>
                    <ruleml:Fun iri="prOnto:MSof" />
                    <ruleml:Var keyref=":y" />
                  </ruleml:Expr>
                </ruleml:Expr>
                <ruleml:Var key=":l">l</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:letterReasonFor" />
                <ruleml:Var key=":l">l</ruleml:Var>
                <ruleml:Var keyref=":ewd" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements241Formula3">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :ead :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:adhereTo' :ead :x :acm) & (prOnto:approvedCertificationMechanism :acm)
	 & (prOnto:bodyACM :b) & (prOnto:accreditedBy' :eac :b prOnto:supAuth(prOnto:MSof(:y))),

	(rioOnto:RexistAtTime :en :t2) & (rioOnto:>= :t2 :t1) & (prOnto:Communicate' :en :b prOnto:supAuth(prOnto:MSof(:y)) :l) & (prOnto:letterReasonFor :l :ead)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":ead">ead</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2520">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2521">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2522">
              <ruleml:Rel iri="prOnto:adhereTo" />
              <ruleml:Var keyref=":ead" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var key=":acm">acm</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:approvedCertificationMechanism" />
              <ruleml:Var keyref=":acm" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:bodyACM" />
              <ruleml:Var key=":b">b</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2523">
              <ruleml:Rel iri="prOnto:accreditedBy" />
              <ruleml:Var keyref=":eac" />
              <ruleml:Var keyref=":b" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:supAuth" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:MSof" />
                  <ruleml:Var keyref=":y" />
                </ruleml:Expr>
              </ruleml:Expr>
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":en">en</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2524">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en" />
                <ruleml:Var keyref=":b" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:supAuth" />
                  <ruleml:Expr>
                    <ruleml:Fun iri="prOnto:MSof" />
                    <ruleml:Var keyref=":y" />
                  </ruleml:Expr>
                </ruleml:Expr>
                <ruleml:Var key=":l">l</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:letterReasonFor" />
                <ruleml:Var key=":l">l</ruleml:Var>
                <ruleml:Var keyref=":ead" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements241Formula4">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :ewd :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:adhereTo' :ead :x :acm) & (prOnto:withdrawConsentFrom' :ewd :b :ead)
	 & (prOnto:approvedCertificationMechanism :acm) & (prOnto:bodyACM :b) & (prOnto:accreditedBy' :eac :b prOnto:supAuth(prOnto:MSof(:y))),

	(rioOnto:RexistAtTime :en :t2) & (rioOnto:>= :t2 :t1) & (prOnto:Communicate' :en :b prOnto:supAuth(prOnto:MSof(:y)) :l) & (prOnto:letterReasonFor :l :ewd)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":ewd">ewd</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2525">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2526">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2527">
              <ruleml:Rel iri="prOnto:adhereTo" />
              <ruleml:Var keyref=":ead" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var key=":acm">acm</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2528">
              <ruleml:Rel iri="prOnto:withdrawConsentFrom" />
              <ruleml:Var keyref=":ewd" />
              <ruleml:Var keyref=":b" />
              <ruleml:Var keyref=":ead" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:approvedCertificationMechanism" />
              <ruleml:Var keyref=":acm" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:bodyACM" />
              <ruleml:Var key=":b">b</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2529">
              <ruleml:Rel iri="prOnto:accreditedBy" />
              <ruleml:Var keyref=":eac" />
              <ruleml:Var keyref=":b" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:supAuth" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:MSof" />
                  <ruleml:Var keyref=":y" />
                </ruleml:Expr>
              </ruleml:Expr>
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":en">en</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2530">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en" />
                <ruleml:Var keyref=":b" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:supAuth" />
                  <ruleml:Expr>
                    <ruleml:Fun iri="prOnto:MSof" />
                    <ruleml:Var keyref=":y" />
                  </ruleml:Expr>
                </ruleml:Expr>
                <ruleml:Var key=":l">l</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:letterReasonFor" />
                <ruleml:Var key=":l">l</ruleml:Var>
                <ruleml:Var keyref=":ewd" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements242">
    <lrml:PrescriptiveStatement key="statements242Formula1">
      <!--
Permission:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ea) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:thirdCountry :c) & (prOnto:authorizedBy' :ea :et EuropeanUnion)
	 & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x) & (prOnto:Transmit' :et :x :z :c),

	(rioOnto:RexistAtTime :et :t1)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ea">ea</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:thirdCountry" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2531">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":ea" />
              <ruleml:Var key=":et">et</ruleml:Var>
              <ruleml:Ind>EuropeanUnion</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2532">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2533">
              <ruleml:Rel iri="prOnto:Transmit" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Permission iri="rioOnto:Permission">
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":t1" />
            </ruleml:Atom>
          </lrml:Permission>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements242Formula2">
      <!--
Permission:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :eco :ea) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:contain' :eco :k :c) & (prOnto:thirdCountry :c)
	 & (prOnto:authorizedBy' :ea :et EuropeanUnion) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:Transmit' :et :x :z :k),

	(rioOnto:RexistAtTime :et :t1)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":eco">eco</ruleml:Var>
              <ruleml:Var key=":ea">ea</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2534">
              <ruleml:Rel iri="prOnto:contain" />
              <ruleml:Var keyref=":eco" />
              <ruleml:Var key=":k">k</ruleml:Var>
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:thirdCountry" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2535">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":ea" />
              <ruleml:Var key=":et">et</ruleml:Var>
              <ruleml:Ind>EuropeanUnion</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2536">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2537">
              <ruleml:Rel iri="prOnto:Transmit" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Permission iri="rioOnto:Permission">
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":t1" />
            </ruleml:Atom>
          </lrml:Permission>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements242Formula3">
      <!--
Permission:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ea) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:internationalOrganization :c) & (prOnto:authorizedBy' :ea :et EuropeanUnion)
	 & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x) & (prOnto:Transmit' :et :x :z :c),

	(rioOnto:RexistAtTime :et :t1)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ea">ea</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:internationalOrganization" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2538">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":ea" />
              <ruleml:Var key=":et">et</ruleml:Var>
              <ruleml:Ind>EuropeanUnion</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2539">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2540">
              <ruleml:Rel iri="prOnto:Transmit" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Permission iri="rioOnto:Permission">
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":t1" />
            </ruleml:Atom>
          </lrml:Permission>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements243">
    <lrml:ConstitutiveStatement key="statements243Formula1">
      <!--
Entailment:
(
	(prOnto:DataSubject :w) & (prOnto:PersonalData :z :w) & (rioOnto:RexistAtTime :ea :t1) & (prOnto:authorizedBy' :ea :et EuropeanUnion)
	 & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x) & (prOnto:Transmit' :et :x :z :c),

	(rioOnto:RexistAtTime :en :t2) & (rioOnto:> :t1 rioOnto:+(:t2, 4y)) & (rioOnto:not :en :ea)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":ea">ea</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2541">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":ea" />
              <ruleml:Var key=":et">et</ruleml:Var>
              <ruleml:Ind>EuropeanUnion</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2542">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2543">
              <ruleml:Rel iri="prOnto:Transmit" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":en">en</ruleml:Var>
              <ruleml:Var keyref=":t2" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:&gt;" />
              <ruleml:Var keyref=":t1" />
              <ruleml:Expr>
                <ruleml:Fun iri="rioOnto:+" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Ind>4y</ruleml:Ind>
              </ruleml:Expr>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en" />
              <ruleml:Var keyref=":ea" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements244">
    <lrml:PrescriptiveStatement key="statements244Formula1">
      <!--
Permission:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :en :ei1 :er1 :ei2 :er2 :ef) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:thirdCountry :c) & (rioOnto:not :en :ea)
	 & (prOnto:authorizedBy' :ea :et EuropeanUnion) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:Transmit' :et :x :z :c) & (prOnto:measure :em1) & (prOnto:implement' :ei1 :y :em1)
	 & (prOnto:relatedTo' :er1 :ei1 :et) & (prOnto:appropriate :em1) & (prOnto:measure :em2)
	 & (prOnto:implement' :ei2 :y :em2) & (prOnto:relatedTo' :er2 :ei2 :et) & (prOnto:enforce' :ef :em2 :erf)
	 & (prOnto:rightsAndFreedomsOf' :erf :w),

	(rioOnto:RexistAtTime :et :t1)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":en">en</ruleml:Var>
              <ruleml:Var key=":ei1">ei1</ruleml:Var>
              <ruleml:Var key=":er1">er1</ruleml:Var>
              <ruleml:Var key=":ei2">ei2</ruleml:Var>
              <ruleml:Var key=":er2">er2</ruleml:Var>
              <ruleml:Var key=":ef">ef</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:thirdCountry" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en" />
              <ruleml:Var key=":ea">ea</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2544">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":ea" />
              <ruleml:Var key=":et">et</ruleml:Var>
              <ruleml:Ind>EuropeanUnion</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2545">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2546">
              <ruleml:Rel iri="prOnto:Transmit" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:measure" />
              <ruleml:Var key=":em1">em1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2547">
              <ruleml:Rel iri="prOnto:implement" />
              <ruleml:Var keyref=":ei1" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":em1" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2548">
              <ruleml:Rel iri="prOnto:relatedTo" />
              <ruleml:Var keyref=":er1" />
              <ruleml:Var keyref=":ei1" />
              <ruleml:Var keyref=":et" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:appropriate" />
              <ruleml:Var keyref=":em1" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:measure" />
              <ruleml:Var key=":em2">em2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2549">
              <ruleml:Rel iri="prOnto:implement" />
              <ruleml:Var keyref=":ei2" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":em2" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2550">
              <ruleml:Rel iri="prOnto:relatedTo" />
              <ruleml:Var keyref=":er2" />
              <ruleml:Var keyref=":ei2" />
              <ruleml:Var keyref=":et" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2551">
              <ruleml:Rel iri="prOnto:enforce" />
              <ruleml:Var keyref=":ef" />
              <ruleml:Var keyref=":em2" />
              <ruleml:Var key=":erf">erf</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2552">
              <ruleml:Rel iri="prOnto:rightsAndFreedomsOf" />
              <ruleml:Var keyref=":erf" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Permission iri="rioOnto:Permission">
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":t1" />
            </ruleml:Atom>
          </lrml:Permission>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements244Formula2">
      <!--
Permission:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :en :ei1 :er1 :ei2 :er2 :ef) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:internationalOrganization :c) & (rioOnto:not :en :ea)
	 & (prOnto:authorizedBy' :ea :et EuropeanUnion) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:Transmit' :et :x :z :c) & (prOnto:measure :em1) & (prOnto:implement' :ei1 :y :em1)
	 & (prOnto:relatedTo' :er1 :ei1 :et) & (prOnto:appropriate :em1) & (prOnto:measure :em2)
	 & (prOnto:implement' :ei2 :y :em2) & (prOnto:relatedTo' :er2 :ei2 :et) & (prOnto:enforce' :ef :em2 :erf)
	 & (prOnto:rightsAndFreedomsOf' :erf :w),

	(rioOnto:RexistAtTime :et :t1)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":en">en</ruleml:Var>
              <ruleml:Var key=":ei1">ei1</ruleml:Var>
              <ruleml:Var key=":er1">er1</ruleml:Var>
              <ruleml:Var key=":ei2">ei2</ruleml:Var>
              <ruleml:Var key=":er2">er2</ruleml:Var>
              <ruleml:Var key=":ef">ef</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:internationalOrganization" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en" />
              <ruleml:Var key=":ea">ea</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2553">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":ea" />
              <ruleml:Var key=":et">et</ruleml:Var>
              <ruleml:Ind>EuropeanUnion</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2554">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2555">
              <ruleml:Rel iri="prOnto:Transmit" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:measure" />
              <ruleml:Var key=":em1">em1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2556">
              <ruleml:Rel iri="prOnto:implement" />
              <ruleml:Var keyref=":ei1" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":em1" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2557">
              <ruleml:Rel iri="prOnto:relatedTo" />
              <ruleml:Var keyref=":er1" />
              <ruleml:Var keyref=":ei1" />
              <ruleml:Var keyref=":et" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:appropriate" />
              <ruleml:Var keyref=":em1" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:measure" />
              <ruleml:Var key=":em2">em2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2558">
              <ruleml:Rel iri="prOnto:implement" />
              <ruleml:Var keyref=":ei2" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":em2" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2559">
              <ruleml:Rel iri="prOnto:relatedTo" />
              <ruleml:Var keyref=":er2" />
              <ruleml:Var keyref=":ei2" />
              <ruleml:Var keyref=":et" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2560">
              <ruleml:Rel iri="prOnto:enforce" />
              <ruleml:Var keyref=":ef" />
              <ruleml:Var keyref=":em2" />
              <ruleml:Var key=":erf">erf</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2561">
              <ruleml:Rel iri="prOnto:rightsAndFreedomsOf" />
              <ruleml:Var keyref=":erf" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Permission iri="rioOnto:Permission">
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":t1" />
            </ruleml:Atom>
          </lrml:Permission>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements245">
    <lrml:ConstitutiveStatement key="statements245Formula1">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :epa1 :epa2) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:Transmit' :et :x :z :k) & (prOnto:contract :c) & (prOnto:partyOf' :epa1 :pa1 :c)
	 & (prOnto:partyOf' :epa2 :pa2 :c) & (prOnto:publicAuthority :pa1) & (prOnto:publicAuthority :pa2),

	(rioOnto:RexistAtTime :ei1 :t1) & (prOnto:measure :c) & (prOnto:implement' :ei1 :y :c) & (prOnto:appropriate :c)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":epa1">epa1</ruleml:Var>
              <ruleml:Var key=":epa2">epa2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2562">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2563">
              <ruleml:Rel iri="prOnto:Transmit" />
              <ruleml:Var key=":et">et</ruleml:Var>
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:contract" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2564">
              <ruleml:Rel iri="prOnto:partyOf" />
              <ruleml:Var keyref=":epa1" />
              <ruleml:Var key=":pa1">pa1</ruleml:Var>
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2565">
              <ruleml:Rel iri="prOnto:partyOf" />
              <ruleml:Var keyref=":epa2" />
              <ruleml:Var key=":pa2">pa2</ruleml:Var>
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:publicAuthority" />
              <ruleml:Var keyref=":pa1" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:publicAuthority" />
              <ruleml:Var keyref=":pa2" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":ei1">ei1</ruleml:Var>
              <ruleml:Var keyref=":t1" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:measure" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2566">
              <ruleml:Rel iri="prOnto:implement" />
              <ruleml:Var keyref=":ei1" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:appropriate" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements246">
    <lrml:ConstitutiveStatement key="statements246Formula1">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :epa1 :epa2) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:Transmit' :et :x :z :k) & (prOnto:bindingCorporateRules :c),

	(rioOnto:RexistAtTime :ei1 :t1) & (prOnto:measure :c) & (prOnto:implement' :ei1 :y :c) & (prOnto:appropriate :c)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":epa1">epa1</ruleml:Var>
              <ruleml:Var key=":epa2">epa2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2567">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2568">
              <ruleml:Rel iri="prOnto:Transmit" />
              <ruleml:Var key=":et">et</ruleml:Var>
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:bindingCorporateRules" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":ei1">ei1</ruleml:Var>
              <ruleml:Var keyref=":t1" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:measure" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2569">
              <ruleml:Rel iri="prOnto:implement" />
              <ruleml:Var keyref=":ei1" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:appropriate" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements247">
    <lrml:ConstitutiveStatement key="statements247Formula1">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ei :ef :ead) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y1 :z) & (prOnto:Controller :y2 :z) & (prOnto:Processor :x)
	 & (prOnto:nominates' :edp :y2 :x) & (prOnto:Transmit' :et :x :z :y1) & (prOnto:countryOf :y1 :k)
	 & (prOnto:thirdCountry :k) & (prOnto:codeOfConduct :cc) & (prOnto:adhereTo' :ead :y2 :cc)
	 & (prOnto:measure :em) & (prOnto:implement' :ei :k :em) & (prOnto:enforce' :ef :em :erf)
	 & (prOnto:rightsAndFreedomsOf' :erf :w),

	(rioOnto:RexistAtTime :ei1 :t1) & (prOnto:measure :cc) & (prOnto:implement' :ei1 :y2 :cc) & (prOnto:appropriate :cc)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ei">ei</ruleml:Var>
              <ruleml:Var key=":ef">ef</ruleml:Var>
              <ruleml:Var key=":ead">ead</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y1">y1</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y2">y2</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2570">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y2" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2571">
              <ruleml:Rel iri="prOnto:Transmit" />
              <ruleml:Var key=":et">et</ruleml:Var>
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":y1" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:countryOf" />
              <ruleml:Var keyref=":y1" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:thirdCountry" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:codeOfConduct" />
              <ruleml:Var key=":cc">cc</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2572">
              <ruleml:Rel iri="prOnto:adhereTo" />
              <ruleml:Var keyref=":ead" />
              <ruleml:Var keyref=":y2" />
              <ruleml:Var keyref=":cc" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:measure" />
              <ruleml:Var key=":em">em</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2573">
              <ruleml:Rel iri="prOnto:implement" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var keyref=":k" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2574">
              <ruleml:Rel iri="prOnto:enforce" />
              <ruleml:Var keyref=":ef" />
              <ruleml:Var keyref=":em" />
              <ruleml:Var key=":erf">erf</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2575">
              <ruleml:Rel iri="prOnto:rightsAndFreedomsOf" />
              <ruleml:Var keyref=":erf" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":ei1">ei1</ruleml:Var>
              <ruleml:Var keyref=":t1" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:measure" />
              <ruleml:Var keyref=":cc" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2576">
              <ruleml:Rel iri="prOnto:implement" />
              <ruleml:Var keyref=":ei1" />
              <ruleml:Var keyref=":y2" />
              <ruleml:Var keyref=":cc" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:appropriate" />
              <ruleml:Var keyref=":cc" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements248">
    <lrml:ConstitutiveStatement key="statements248Formula1">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ei :ef) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y1 :z) & (prOnto:Controller :y2 :z) & (prOnto:Processor :x)
	 & (prOnto:nominates' :edp :y2 :x) & (prOnto:Transmit' :et :x :z :y1) & (prOnto:countryOf :y1 :k)
	 & (prOnto:thirdCountry :k) & (prOnto:approvedCertificationMechanism :c) & (prOnto:measure :em)
	 & (prOnto:implement' :ei :k :em) & (prOnto:enforce' :ef :em :erf) & (prOnto:rightsAndFreedomsOf' :erf :w),

	(rioOnto:RexistAtTime :ei1 :t1) & (prOnto:measure :c) & (prOnto:implement' :ei1 :y2 :c) & (prOnto:appropriate :c)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ei">ei</ruleml:Var>
              <ruleml:Var key=":ef">ef</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y1">y1</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y2">y2</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2577">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y2" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2578">
              <ruleml:Rel iri="prOnto:Transmit" />
              <ruleml:Var key=":et">et</ruleml:Var>
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":y1" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:countryOf" />
              <ruleml:Var keyref=":y1" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:thirdCountry" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:approvedCertificationMechanism" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:measure" />
              <ruleml:Var key=":em">em</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2579">
              <ruleml:Rel iri="prOnto:implement" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var keyref=":k" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2580">
              <ruleml:Rel iri="prOnto:enforce" />
              <ruleml:Var keyref=":ef" />
              <ruleml:Var keyref=":em" />
              <ruleml:Var key=":erf">erf</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2581">
              <ruleml:Rel iri="prOnto:rightsAndFreedomsOf" />
              <ruleml:Var keyref=":erf" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":ei1">ei1</ruleml:Var>
              <ruleml:Var keyref=":t1" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:measure" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2582">
              <ruleml:Rel iri="prOnto:implement" />
              <ruleml:Var keyref=":ei1" />
              <ruleml:Var keyref=":y2" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:appropriate" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements249">
    <lrml:ConstitutiveStatement key="statements249Formula1">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep1 :ep2 :ea) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :x :z) & (prOnto:Controller :y :z) & (prOnto:Processor :x)
	 & (prOnto:nominates' :edp :y2 :x) & (prOnto:Transmit' :et :x :z :x) & (prOnto:countryOf :x :k)
	 & (prOnto:thirdCountry :k) & (prOnto:contract :c) & (prOnto:partyOf' :ep1 :y :c)
	 & (prOnto:partyOf' :ep2 :x :c) & (prOnto:authorizedBy' :ea :c prOnto:supAuth(prOnto:MSof(:y))),

	(rioOnto:RexistAtTime :ei :t1) & (prOnto:measure :c) & (prOnto:implement' :ei :y :c) & (prOnto:appropriate :c)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep1">ep1</ruleml:Var>
              <ruleml:Var key=":ep2">ep2</ruleml:Var>
              <ruleml:Var key=":ea">ea</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":x">x</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2583">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y2" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2584">
              <ruleml:Rel iri="prOnto:Transmit" />
              <ruleml:Var key=":et">et</ruleml:Var>
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:countryOf" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:thirdCountry" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:contract" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2585">
              <ruleml:Rel iri="prOnto:partyOf" />
              <ruleml:Var keyref=":ep1" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2586">
              <ruleml:Rel iri="prOnto:partyOf" />
              <ruleml:Var keyref=":ep2" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2587">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":ea" />
              <ruleml:Var keyref=":c" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:supAuth" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:MSof" />
                  <ruleml:Var keyref=":y" />
                </ruleml:Expr>
              </ruleml:Expr>
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":ei">ei</ruleml:Var>
              <ruleml:Var keyref=":t1" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:measure" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2588">
              <ruleml:Rel iri="prOnto:implement" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:appropriate" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements250">
    <lrml:ConstitutiveStatement key="statements250Formula1">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep1 :ep2 :ef :ea) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y1 :z) & (prOnto:Controller :y2 :z) & (prOnto:Processor :x)
	 & (prOnto:nominates' :edp :y2 :x) & (prOnto:Transmit' :et :x :z :y1) & (prOnto:countryOf :y1 :k)
	 & (prOnto:thirdCountry :k) & (prOnto:contract :c) & (prOnto:partyOf' :ep1 :pa1 :c)
	 & (prOnto:partyOf' :ep2 :pa2 :c) & (prOnto:publicAuthority :pa1) & (prOnto:publicAuthority :pa2)
	 & (prOnto:enforce' :ef :c :erf) & (prOnto:rightsAndFreedomsOf' :erf :w) & (prOnto:authorizedBy' :ea :c prOnto:supAuth(prOnto:MSof(:y2))),

	(rioOnto:RexistAtTime :ei :t1) & (prOnto:measure :c) & (prOnto:implement' :ei :y2 :c) & (prOnto:appropriate :c)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep1">ep1</ruleml:Var>
              <ruleml:Var key=":ep2">ep2</ruleml:Var>
              <ruleml:Var key=":ef">ef</ruleml:Var>
              <ruleml:Var key=":ea">ea</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y1">y1</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y2">y2</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2589">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y2" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2590">
              <ruleml:Rel iri="prOnto:Transmit" />
              <ruleml:Var key=":et">et</ruleml:Var>
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":y1" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:countryOf" />
              <ruleml:Var keyref=":y1" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:thirdCountry" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:contract" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2591">
              <ruleml:Rel iri="prOnto:partyOf" />
              <ruleml:Var keyref=":ep1" />
              <ruleml:Var key=":pa1">pa1</ruleml:Var>
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2592">
              <ruleml:Rel iri="prOnto:partyOf" />
              <ruleml:Var keyref=":ep2" />
              <ruleml:Var key=":pa2">pa2</ruleml:Var>
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:publicAuthority" />
              <ruleml:Var keyref=":pa1" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:publicAuthority" />
              <ruleml:Var keyref=":pa2" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2593">
              <ruleml:Rel iri="prOnto:enforce" />
              <ruleml:Var keyref=":ef" />
              <ruleml:Var keyref=":c" />
              <ruleml:Var key=":erf">erf</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2594">
              <ruleml:Rel iri="prOnto:rightsAndFreedomsOf" />
              <ruleml:Var keyref=":erf" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2595">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":ea" />
              <ruleml:Var keyref=":c" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:supAuth" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:MSof" />
                  <ruleml:Var keyref=":y2" />
                </ruleml:Expr>
              </ruleml:Expr>
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":ei">ei</ruleml:Var>
              <ruleml:Var keyref=":t1" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:measure" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2596">
              <ruleml:Rel iri="prOnto:implement" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var keyref=":y2" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:appropriate" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements251">
    <lrml:PrescriptiveStatement key="statements251Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :epa :ecw :ef) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:bindingCorporateRules :c) & (prOnto:partyOf' :epa :x :c)
	 & (prOnto:complyWith' :ecw :x :c) & (prOnto:enforce' :ef :c :erf) & (prOnto:rightsAndFreedomsOf' :erf :w),

	(rioOnto:RexistAtTime :ea :t1) & (prOnto:authorizedBy' :ea :c prOnto:supAuth(prOnto:MSof(:y)))
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":epa">epa</ruleml:Var>
              <ruleml:Var key=":ecw">ecw</ruleml:Var>
              <ruleml:Var key=":ef">ef</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:bindingCorporateRules" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2597">
              <ruleml:Rel iri="prOnto:partyOf" />
              <ruleml:Var keyref=":epa" />
              <ruleml:Var key=":x">x</ruleml:Var>
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2598">
              <ruleml:Rel iri="prOnto:complyWith" />
              <ruleml:Var keyref=":ecw" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2599">
              <ruleml:Rel iri="prOnto:enforce" />
              <ruleml:Var keyref=":ef" />
              <ruleml:Var keyref=":c" />
              <ruleml:Var key=":erf">erf</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2600">
              <ruleml:Rel iri="prOnto:rightsAndFreedomsOf" />
              <ruleml:Var keyref=":erf" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":ea">ea</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2601">
                <ruleml:Rel iri="prOnto:authorizedBy" />
                <ruleml:Var keyref=":ea" />
                <ruleml:Var keyref=":c" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:supAuth" />
                  <ruleml:Expr>
                    <ruleml:Fun iri="prOnto:MSof" />
                    <ruleml:Var keyref=":y" />
                  </ruleml:Expr>
                </ruleml:Expr>
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements252">
    <lrml:PrescriptiveStatement key="statements252Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :epa :et :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :k :z) & (prOnto:Controller :y :z) & (prOnto:Processor :x)
	 & (prOnto:nominates' :edp :y :x) & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:Purpose :epu)
	 & (prOnto:isBasedOn :ep :epu) & (prOnto:bindingCorporateRules :c) & (prOnto:partyOf' :epa :p :c)
	 & (prOnto:Transmit' :et :x :z :k) & (prOnto:countryOf :k :t) & (prOnto:thirdCountry :t),

	(rioOnto:RexistAtTime :a2 :t1) & (rioOnto:and :a2 :ed1 :ed2 :ed3 :ed4 :ed5 :ed6 :ed7 :ed8 :ed9 :ed10 :ed11 :ed12 :ed13 :ed14 :ed15 :ed16 :ed17 :ed18 :ed19) & (prOnto:describe' :ed1 :c prOnto:contactDetails(:p)) & (prOnto:describe' :ed2 :c :et)
	 & (prOnto:describe' :ed3 :c :ca) & (prOnto:categoryOf :ca :w) & (prOnto:describe' :ed4 :c prOnto:contactDetails(:ep))
	 & (prOnto:describe' :ed5 :epu :c) & (prOnto:describe' :ed6 :c prOnto:contactDetails(:w)) & (prOnto:describe' :ed7 :c prOnto:contactDetails(:t))
	 & (prOnto:describe' :ed8 :c :n) & (prOnto:legalNatureOf' :n :c) & (prOnto:describe' :ed9 :c :ei)
	 & (prOnto:implement' :ei :c GDPR) & (prOnto:describe' :ed10 :c :erf) & (prOnto:rightsAndFreedomsOf' :erf :w)
	 & (prOnto:describe' :ed11 :c :em1) & (prOnto:measure :em1) & (prOnto:describe' :ed12 :c :eac)
	 & (rioOnto:cause' :eac :em1 :ef) & (prOnto:enforce' :ef :w :erf) & (prOnto:describe' :ed13 :c :ere)
	 & (prOnto:responsibleFor' :ere :k :evf) & (prOnto:violationOf' :evf :c) & (prOnto:describe' :ed14 :c prOnto:mediaOf(:a2))
	 & (prOnto:describe' :ed15 :c prOnto:complaintProcedureOf(:c)) & (prOnto:describe' :ed16 :c :em2) & (prOnto:measure :em2)
	 & (rioOnto:cause :em2 :en2) & (prOnto:Communicate' :en1 :k :w :ch) & (prOnto:Communicate' :en2 :k prOnto:supAuth(prOnto:MSof(:y)) :ch)
	 & (prOnto:changeOf :ch :c) & (prOnto:describe' :ed17 :c :em3) & (prOnto:measure :em3)
	 & (prOnto:partyOf prOnto:supAuth(prOnto:MSof(:y)) :em3) & (rioOnto:cause :em3 :eco) & (prOnto:complyWith' :eco :p GDPR)
	 & (prOnto:describe' :ed18 :c :em4) & (prOnto:measure :em4) & (rioOnto:cause :em4 :en3)
	 & (prOnto:Communicate' :en3 :k prOnto:supAuth(prOnto:MSof(:y)) :lr) & (prOnto:legalRequirement :lr) & (prOnto:complyWith :p :lr)
	 & (rioOnto:cause :lr :eno) & (rioOnto:not :eno :eae) & (prOnto:complyWith' :eae :p :c)
	 & (prOnto:describe' :ed19 :c :etf) & (prOnto:trainingFor' :etf :c GDPR) & (prOnto:workIn :pe :p)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":epa">epa</ruleml:Var>
              <ruleml:Var key=":et">et</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":k">k</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2602">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2603">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Purpose" />
              <ruleml:Var key=":epu">epu</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isBasedOn" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":epu" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:bindingCorporateRules" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2604">
              <ruleml:Rel iri="prOnto:partyOf" />
              <ruleml:Var keyref=":epa" />
              <ruleml:Var key=":p">p</ruleml:Var>
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2605">
              <ruleml:Rel iri="prOnto:Transmit" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:countryOf" />
              <ruleml:Var keyref=":k" />
              <ruleml:Var key=":t">t</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:thirdCountry" />
              <ruleml:Var keyref=":t" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":a2">a2</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:and" />
                <ruleml:Var keyref=":a2" />
                <ruleml:Var key=":ed1">ed1</ruleml:Var>
                <ruleml:Var key=":ed2">ed2</ruleml:Var>
                <ruleml:Var key=":ed3">ed3</ruleml:Var>
                <ruleml:Var key=":ed4">ed4</ruleml:Var>
                <ruleml:Var key=":ed5">ed5</ruleml:Var>
                <ruleml:Var key=":ed6">ed6</ruleml:Var>
                <ruleml:Var key=":ed7">ed7</ruleml:Var>
                <ruleml:Var key=":ed8">ed8</ruleml:Var>
                <ruleml:Var key=":ed9">ed9</ruleml:Var>
                <ruleml:Var key=":ed10">ed10</ruleml:Var>
                <ruleml:Var key=":ed11">ed11</ruleml:Var>
                <ruleml:Var key=":ed12">ed12</ruleml:Var>
                <ruleml:Var key=":ed13">ed13</ruleml:Var>
                <ruleml:Var key=":ed14">ed14</ruleml:Var>
                <ruleml:Var key=":ed15">ed15</ruleml:Var>
                <ruleml:Var key=":ed16">ed16</ruleml:Var>
                <ruleml:Var key=":ed17">ed17</ruleml:Var>
                <ruleml:Var key=":ed18">ed18</ruleml:Var>
                <ruleml:Var key=":ed19">ed19</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2606">
                <ruleml:Rel iri="prOnto:describe" />
                <ruleml:Var keyref=":ed1" />
                <ruleml:Var keyref=":c" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:contactDetails" />
                  <ruleml:Var keyref=":p" />
                </ruleml:Expr>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2607">
                <ruleml:Rel iri="prOnto:describe" />
                <ruleml:Var keyref=":ed2" />
                <ruleml:Var keyref=":c" />
                <ruleml:Var keyref=":et" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2608">
                <ruleml:Rel iri="prOnto:describe" />
                <ruleml:Var keyref=":ed3" />
                <ruleml:Var keyref=":c" />
                <ruleml:Var key=":ca">ca</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:categoryOf" />
                <ruleml:Var keyref=":ca" />
                <ruleml:Var keyref=":w" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2609">
                <ruleml:Rel iri="prOnto:describe" />
                <ruleml:Var keyref=":ed4" />
                <ruleml:Var keyref=":c" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:contactDetails" />
                  <ruleml:Var keyref=":ep" />
                </ruleml:Expr>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2610">
                <ruleml:Rel iri="prOnto:describe" />
                <ruleml:Var keyref=":ed5" />
                <ruleml:Var keyref=":epu" />
                <ruleml:Var keyref=":c" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2611">
                <ruleml:Rel iri="prOnto:describe" />
                <ruleml:Var keyref=":ed6" />
                <ruleml:Var keyref=":c" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:contactDetails" />
                  <ruleml:Var keyref=":w" />
                </ruleml:Expr>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2612">
                <ruleml:Rel iri="prOnto:describe" />
                <ruleml:Var keyref=":ed7" />
                <ruleml:Var keyref=":c" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:contactDetails" />
                  <ruleml:Var keyref=":t" />
                </ruleml:Expr>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2613">
                <ruleml:Rel iri="prOnto:describe" />
                <ruleml:Var keyref=":ed8" />
                <ruleml:Var keyref=":c" />
                <ruleml:Var key=":n">n</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2614">
                <ruleml:Rel iri="prOnto:legalNatureOf" />
                <ruleml:Var keyref=":n" />
                <ruleml:Var keyref=":c" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2615">
                <ruleml:Rel iri="prOnto:describe" />
                <ruleml:Var keyref=":ed9" />
                <ruleml:Var keyref=":c" />
                <ruleml:Var key=":ei">ei</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2616">
                <ruleml:Rel iri="prOnto:implement" />
                <ruleml:Var keyref=":ei" />
                <ruleml:Var keyref=":c" />
                <ruleml:Ind>GDPR</ruleml:Ind>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2617">
                <ruleml:Rel iri="prOnto:describe" />
                <ruleml:Var keyref=":ed10" />
                <ruleml:Var keyref=":c" />
                <ruleml:Var key=":erf">erf</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2618">
                <ruleml:Rel iri="prOnto:rightsAndFreedomsOf" />
                <ruleml:Var keyref=":erf" />
                <ruleml:Var keyref=":w" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2619">
                <ruleml:Rel iri="prOnto:describe" />
                <ruleml:Var keyref=":ed11" />
                <ruleml:Var keyref=":c" />
                <ruleml:Var key=":em1">em1</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:measure" />
                <ruleml:Var keyref=":em1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2620">
                <ruleml:Rel iri="prOnto:describe" />
                <ruleml:Var keyref=":ed12" />
                <ruleml:Var keyref=":c" />
                <ruleml:Var key=":eac">eac</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2621">
                <ruleml:Rel iri="rioOnto:cause" />
                <ruleml:Var keyref=":eac" />
                <ruleml:Var keyref=":em1" />
                <ruleml:Var key=":ef">ef</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2622">
                <ruleml:Rel iri="prOnto:enforce" />
                <ruleml:Var keyref=":ef" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":erf" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2623">
                <ruleml:Rel iri="prOnto:describe" />
                <ruleml:Var keyref=":ed13" />
                <ruleml:Var keyref=":c" />
                <ruleml:Var key=":ere">ere</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2624">
                <ruleml:Rel iri="prOnto:responsibleFor" />
                <ruleml:Var keyref=":ere" />
                <ruleml:Var keyref=":k" />
                <ruleml:Var key=":evf">evf</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2625">
                <ruleml:Rel iri="prOnto:violationOf" />
                <ruleml:Var keyref=":evf" />
                <ruleml:Var keyref=":c" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2626">
                <ruleml:Rel iri="prOnto:describe" />
                <ruleml:Var keyref=":ed14" />
                <ruleml:Var keyref=":c" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:mediaOf" />
                  <ruleml:Var keyref=":a2" />
                </ruleml:Expr>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2627">
                <ruleml:Rel iri="prOnto:describe" />
                <ruleml:Var keyref=":ed15" />
                <ruleml:Var keyref=":c" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:complaintProcedureOf" />
                  <ruleml:Var keyref=":c" />
                </ruleml:Expr>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2628">
                <ruleml:Rel iri="prOnto:describe" />
                <ruleml:Var keyref=":ed16" />
                <ruleml:Var keyref=":c" />
                <ruleml:Var key=":em2">em2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:measure" />
                <ruleml:Var keyref=":em2" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:cause" />
                <ruleml:Var keyref=":em2" />
                <ruleml:Var key=":en2">en2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2629">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var key=":en1">en1</ruleml:Var>
                <ruleml:Var keyref=":k" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var key=":ch">ch</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2630">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en2" />
                <ruleml:Var keyref=":k" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:supAuth" />
                  <ruleml:Expr>
                    <ruleml:Fun iri="prOnto:MSof" />
                    <ruleml:Var keyref=":y" />
                  </ruleml:Expr>
                </ruleml:Expr>
                <ruleml:Var keyref=":ch" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:changeOf" />
                <ruleml:Var keyref=":ch" />
                <ruleml:Var keyref=":c" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2631">
                <ruleml:Rel iri="prOnto:describe" />
                <ruleml:Var keyref=":ed17" />
                <ruleml:Var keyref=":c" />
                <ruleml:Var key=":em3">em3</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:measure" />
                <ruleml:Var keyref=":em3" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:partyOf" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:supAuth" />
                  <ruleml:Expr>
                    <ruleml:Fun iri="prOnto:MSof" />
                    <ruleml:Var keyref=":y" />
                  </ruleml:Expr>
                </ruleml:Expr>
                <ruleml:Var keyref=":em3" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:cause" />
                <ruleml:Var keyref=":em3" />
                <ruleml:Var key=":eco">eco</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2632">
                <ruleml:Rel iri="prOnto:complyWith" />
                <ruleml:Var keyref=":eco" />
                <ruleml:Var keyref=":p" />
                <ruleml:Ind>GDPR</ruleml:Ind>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2633">
                <ruleml:Rel iri="prOnto:describe" />
                <ruleml:Var keyref=":ed18" />
                <ruleml:Var keyref=":c" />
                <ruleml:Var key=":em4">em4</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:measure" />
                <ruleml:Var keyref=":em4" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:cause" />
                <ruleml:Var keyref=":em4" />
                <ruleml:Var key=":en3">en3</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2634">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en3" />
                <ruleml:Var keyref=":k" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:supAuth" />
                  <ruleml:Expr>
                    <ruleml:Fun iri="prOnto:MSof" />
                    <ruleml:Var keyref=":y" />
                  </ruleml:Expr>
                </ruleml:Expr>
                <ruleml:Var key=":lr">lr</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:legalRequirement" />
                <ruleml:Var keyref=":lr" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:complyWith" />
                <ruleml:Var keyref=":p" />
                <ruleml:Var keyref=":lr" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:cause" />
                <ruleml:Var keyref=":lr" />
                <ruleml:Var key=":eno">eno</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:not" />
                <ruleml:Var keyref=":eno" />
                <ruleml:Var key=":eae">eae</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2635">
                <ruleml:Rel iri="prOnto:complyWith" />
                <ruleml:Var keyref=":eae" />
                <ruleml:Var keyref=":p" />
                <ruleml:Var keyref=":c" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2636">
                <ruleml:Rel iri="prOnto:describe" />
                <ruleml:Var keyref=":ed19" />
                <ruleml:Var keyref=":c" />
                <ruleml:Var key=":etf">etf</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2637">
                <ruleml:Rel iri="prOnto:trainingFor" />
                <ruleml:Var keyref=":etf" />
                <ruleml:Var keyref=":c" />
                <ruleml:Ind>GDPR</ruleml:Ind>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:workIn" />
                <ruleml:Var key=":pe">pe</ruleml:Var>
                <ruleml:Var keyref=":p" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements252Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :epa :em :et :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :k :z) & (prOnto:Controller :y :z) & (prOnto:Processor :x)
	 & (prOnto:nominates' :edp :y :x) & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:bindingCorporateRules :c)
	 & (prOnto:partyOf' :epa :p :c) & (prOnto:Transmit' :et :x :z :k) & (prOnto:countryOf :k :t)
	 & (prOnto:thirdCountry :t) & (prOnto:monitor' :em :o :eco) & (prOnto:complyWith' :eco :c GDPR),

	(rioOnto:RexistAtTime :a2 :t1) & (rioOnto:and :a2 :ed1 :ed2 :en) & (prOnto:describe' :ed1 :c :ts1) & (prOnto:relatedTo :ts1 :o)
	 & (rioOnto:cause :ts1 :em) & (prOnto:describe' :ed2 :c :ts2) & (prOnto:relatedTo :et2 :p)
	 & (rioOnto:cause :ts2 :eco) & (prOnto:Communicate' :en :p :o :ts2)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":epa">epa</ruleml:Var>
              <ruleml:Var key=":em">em</ruleml:Var>
              <ruleml:Var key=":et">et</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":k">k</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2638">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2639">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:bindingCorporateRules" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2640">
              <ruleml:Rel iri="prOnto:partyOf" />
              <ruleml:Var keyref=":epa" />
              <ruleml:Var key=":p">p</ruleml:Var>
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2641">
              <ruleml:Rel iri="prOnto:Transmit" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:countryOf" />
              <ruleml:Var keyref=":k" />
              <ruleml:Var key=":t">t</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:thirdCountry" />
              <ruleml:Var keyref=":t" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2642">
              <ruleml:Rel iri="prOnto:monitor" />
              <ruleml:Var keyref=":em" />
              <ruleml:Var key=":o">o</ruleml:Var>
              <ruleml:Var key=":eco">eco</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2643">
              <ruleml:Rel iri="prOnto:complyWith" />
              <ruleml:Var keyref=":eco" />
              <ruleml:Var keyref=":c" />
              <ruleml:Ind>GDPR</ruleml:Ind>
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":a2">a2</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:and" />
                <ruleml:Var keyref=":a2" />
                <ruleml:Var key=":ed1">ed1</ruleml:Var>
                <ruleml:Var key=":ed2">ed2</ruleml:Var>
                <ruleml:Var key=":en">en</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2644">
                <ruleml:Rel iri="prOnto:describe" />
                <ruleml:Var keyref=":ed1" />
                <ruleml:Var keyref=":c" />
                <ruleml:Var key=":ts1">ts1</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:relatedTo" />
                <ruleml:Var keyref=":ts1" />
                <ruleml:Var keyref=":o" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:cause" />
                <ruleml:Var keyref=":ts1" />
                <ruleml:Var keyref=":em" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2645">
                <ruleml:Rel iri="prOnto:describe" />
                <ruleml:Var keyref=":ed2" />
                <ruleml:Var keyref=":c" />
                <ruleml:Var key=":ts2">ts2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:relatedTo" />
                <ruleml:Var key=":et2">et2</ruleml:Var>
                <ruleml:Var keyref=":p" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:cause" />
                <ruleml:Var keyref=":ts2" />
                <ruleml:Var keyref=":eco" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2646">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en" />
                <ruleml:Var keyref=":p" />
                <ruleml:Var keyref=":o" />
                <ruleml:Var keyref=":ts2" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements253">
    <lrml:PrescriptiveStatement key="statements253Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep1 :ep2) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:countryOf :y :c) & (prOnto:legalClaim :l) & (prOnto:countryOf :l :k)
	 & (prOnto:thirdCountry :k) & (rioOnto:=/= :c :k) & (rioOnto:imply :ei :l :et)
	 & (prOnto:Transmit' :et :x :z :k) & (prOnto:contract :co) & (prOnto:partyOf' :ep1 :k :c)
	 & (prOnto:partyOf' :ep2 EuropeanUnion :c),

	(rioOnto:RexistAtTime :er :t1) & (prOnto:enforce' :er :y :l)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep1">ep1</ruleml:Var>
              <ruleml:Var key=":ep2">ep2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2647">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:countryOf" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:legalClaim" />
              <ruleml:Var key=":l">l</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:countryOf" />
              <ruleml:Var keyref=":l" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:thirdCountry" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:=/=" />
              <ruleml:Var keyref=":c" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:imply" />
              <ruleml:Var key=":ei">ei</ruleml:Var>
              <ruleml:Var keyref=":l" />
              <ruleml:Var key=":et">et</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2648">
              <ruleml:Rel iri="prOnto:Transmit" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:contract" />
              <ruleml:Var key=":co">co</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2649">
              <ruleml:Rel iri="prOnto:partyOf" />
              <ruleml:Var keyref=":ep1" />
              <ruleml:Var keyref=":k" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2650">
              <ruleml:Rel iri="prOnto:partyOf" />
              <ruleml:Var keyref=":ep2" />
              <ruleml:Ind>EuropeanUnion</ruleml:Ind>
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":er">er</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2651">
                <ruleml:Rel iri="prOnto:enforce" />
                <ruleml:Var keyref=":er" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":l" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements254">
    <lrml:PrescriptiveStatement key="statements254Formula1">
      <!--
Permission:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :en1 :en2 :en3 :elt :elf :ecw :eim :er) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (rioOnto:not :en1 :ea) & (prOnto:authorizedBy' :ea :et EuropeanUnion) & (prOnto:Transmit' :et :x :z :c)
	 & (prOnto:internationalOrganization :c) & (rioOnto:not :en2 :ei) & (prOnto:implement' :ei :y :em)
	 & (prOnto:measure :em) & (prOnto:appropriate :em) & (rioOnto:not :en3 :eto)
	 & (prOnto:Transmit' :eto :x :z :c) & (prOnto:limitedTo' :elt :et :w) & (prOnto:legitimateInterestOf' :elf :y)
	 & (prOnto:complyWith' :ecw :et :erf) & (prOnto:rightsAndFreedomsOf' :erf :w) & (prOnto:implement' :eim :y :em1)
	 & (prOnto:measure :em1) & (prOnto:enforce' :er :em1 :eco) & (prOnto:complyWith' :eco :et GDPR)
	 & (rioOnto:exceptionCha5Art49Par1FromPoint1ToPoint6 :et),

	(rioOnto:RexistAtTime :et :t1)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":en1">en1</ruleml:Var>
              <ruleml:Var key=":en2">en2</ruleml:Var>
              <ruleml:Var key=":en3">en3</ruleml:Var>
              <ruleml:Var key=":elt">elt</ruleml:Var>
              <ruleml:Var key=":elf">elf</ruleml:Var>
              <ruleml:Var key=":ecw">ecw</ruleml:Var>
              <ruleml:Var key=":eim">eim</ruleml:Var>
              <ruleml:Var key=":er">er</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2652">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en1" />
              <ruleml:Var key=":ea">ea</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2653">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":ea" />
              <ruleml:Var key=":et">et</ruleml:Var>
              <ruleml:Ind>EuropeanUnion</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2654">
              <ruleml:Rel iri="prOnto:Transmit" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:internationalOrganization" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en2" />
              <ruleml:Var key=":ei">ei</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2655">
              <ruleml:Rel iri="prOnto:implement" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":em">em</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:measure" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:appropriate" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha5Art49Par1FromPoint1ToPoint6" />
                <ruleml:Var keyref=":et" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en3" />
              <ruleml:Var key=":eto">eto</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2656">
              <ruleml:Rel iri="prOnto:Transmit" />
              <ruleml:Var keyref=":eto" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2657">
              <ruleml:Rel iri="prOnto:limitedTo" />
              <ruleml:Var keyref=":elt" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2658">
              <ruleml:Rel iri="prOnto:legitimateInterestOf" />
              <ruleml:Var keyref=":elf" />
              <ruleml:Var keyref=":y" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2659">
              <ruleml:Rel iri="prOnto:complyWith" />
              <ruleml:Var keyref=":ecw" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var key=":erf">erf</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2660">
              <ruleml:Rel iri="prOnto:rightsAndFreedomsOf" />
              <ruleml:Var keyref=":erf" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2661">
              <ruleml:Rel iri="prOnto:implement" />
              <ruleml:Var keyref=":eim" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":em1">em1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:measure" />
              <ruleml:Var keyref=":em1" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2662">
              <ruleml:Rel iri="prOnto:enforce" />
              <ruleml:Var keyref=":er" />
              <ruleml:Var keyref=":em1" />
              <ruleml:Var key=":eco">eco</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2663">
              <ruleml:Rel iri="prOnto:complyWith" />
              <ruleml:Var keyref=":eco" />
              <ruleml:Var keyref=":et" />
              <ruleml:Ind>GDPR</ruleml:Ind>
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Permission iri="rioOnto:Permission">
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":t1" />
            </ruleml:Atom>
          </lrml:Permission>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements254Formula2">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :en1 :en2 :en3 :elt :elf :ecw :eim :er) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (rioOnto:not :en1 :ea) & (prOnto:authorizedBy' :ea :et EuropeanUnion) & (prOnto:Transmit' :et :x :z :c)
	 & (prOnto:internationalOrganization :c) & (rioOnto:not :en2 :ei) & (prOnto:implement' :ei :y :em)
	 & (prOnto:measure :em) & (prOnto:appropriate :em) & (rioOnto:not :en3 :eto)
	 & (prOnto:Transmit' :eto :x :z :c) & (prOnto:limitedTo' :elt :et :w) & (prOnto:legitimateInterestOf' :elf :y)
	 & (prOnto:complyWith' :ecw :et :erf) & (prOnto:rightsAndFreedomsOf' :erf :w) & (prOnto:implement' :eim :y :em1)
	 & (prOnto:measure :em1) & (prOnto:enforce' :er :em1 :eco) & (prOnto:complyWith' :eco :et GDPR)
	 & (rioOnto:exceptionCha5Art49Par1FromPoint1ToPoint6 :et),

	(rioOnto:RexistAtTime :a2 :t1) & (rioOnto:and :a2 :eno1 :eno2 :eno3) & (prOnto:Communicate' :eno1 :y prOnto:supAuth(prOnto:MSof(:y)) :et) & (prOnto:Communicate' :eno2 :y :w :et)
	 & (prOnto:Communicate' :eno1 :y :w :elf)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":en1">en1</ruleml:Var>
              <ruleml:Var key=":en2">en2</ruleml:Var>
              <ruleml:Var key=":en3">en3</ruleml:Var>
              <ruleml:Var key=":elt">elt</ruleml:Var>
              <ruleml:Var key=":elf">elf</ruleml:Var>
              <ruleml:Var key=":ecw">ecw</ruleml:Var>
              <ruleml:Var key=":eim">eim</ruleml:Var>
              <ruleml:Var key=":er">er</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2664">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en1" />
              <ruleml:Var key=":ea">ea</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2665">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":ea" />
              <ruleml:Var key=":et">et</ruleml:Var>
              <ruleml:Ind>EuropeanUnion</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2666">
              <ruleml:Rel iri="prOnto:Transmit" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:internationalOrganization" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en2" />
              <ruleml:Var key=":ei">ei</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2667">
              <ruleml:Rel iri="prOnto:implement" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":em">em</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:measure" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:appropriate" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha5Art49Par1FromPoint1ToPoint6" />
                <ruleml:Var keyref=":et" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en3" />
              <ruleml:Var key=":eto">eto</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2668">
              <ruleml:Rel iri="prOnto:Transmit" />
              <ruleml:Var keyref=":eto" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2669">
              <ruleml:Rel iri="prOnto:limitedTo" />
              <ruleml:Var keyref=":elt" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2670">
              <ruleml:Rel iri="prOnto:legitimateInterestOf" />
              <ruleml:Var keyref=":elf" />
              <ruleml:Var keyref=":y" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2671">
              <ruleml:Rel iri="prOnto:complyWith" />
              <ruleml:Var keyref=":ecw" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var key=":erf">erf</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2672">
              <ruleml:Rel iri="prOnto:rightsAndFreedomsOf" />
              <ruleml:Var keyref=":erf" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2673">
              <ruleml:Rel iri="prOnto:implement" />
              <ruleml:Var keyref=":eim" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":em1">em1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:measure" />
              <ruleml:Var keyref=":em1" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2674">
              <ruleml:Rel iri="prOnto:enforce" />
              <ruleml:Var keyref=":er" />
              <ruleml:Var keyref=":em1" />
              <ruleml:Var key=":eco">eco</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2675">
              <ruleml:Rel iri="prOnto:complyWith" />
              <ruleml:Var keyref=":eco" />
              <ruleml:Var keyref=":et" />
              <ruleml:Ind>GDPR</ruleml:Ind>
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":a2">a2</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:and" />
                <ruleml:Var keyref=":a2" />
                <ruleml:Var key=":eno1">eno1</ruleml:Var>
                <ruleml:Var key=":eno2">eno2</ruleml:Var>
                <ruleml:Var key=":eno3">eno3</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2676">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":eno1" />
                <ruleml:Var keyref=":y" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:supAuth" />
                  <ruleml:Expr>
                    <ruleml:Fun iri="prOnto:MSof" />
                    <ruleml:Var keyref=":y" />
                  </ruleml:Expr>
                </ruleml:Expr>
                <ruleml:Var keyref=":et" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2677">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":eno2" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":et" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2678">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":eno1" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":elf" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements254Formula3">
      <!--
Permission:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :en1 :en2 :en3 :elt :elf :ecw :eim :er) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (rioOnto:not :en1 :ea) & (prOnto:authorizedBy' :ea :et EuropeanUnion) & (prOnto:Transmit' :et :x :z :c)
	 & (prOnto:thirdCountry :c) & (rioOnto:not :en2 :ei) & (prOnto:implement' :ei :y :em)
	 & (prOnto:measure :em) & (prOnto:appropriate :em) & (rioOnto:not :en3 :eto)
	 & (prOnto:Transmit' :eto :x :z :c) & (prOnto:limitedTo' :elt :et :w) & (prOnto:legitimateInterestOf' :elf :y)
	 & (prOnto:complyWith' :ecw :et :erf) & (prOnto:rightsAndFreedomsOf' :erf :w) & (prOnto:implement' :eim :y :em1)
	 & (prOnto:measure :em1) & (prOnto:enforce' :er :em1 :eco) & (prOnto:complyWith' :eco :et GDPR)
	 & (rioOnto:exceptionCha5Art49Par1FromPoint1ToPoint6 :et),

	(rioOnto:RexistAtTime :et :t1)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":en1">en1</ruleml:Var>
              <ruleml:Var key=":en2">en2</ruleml:Var>
              <ruleml:Var key=":en3">en3</ruleml:Var>
              <ruleml:Var key=":elt">elt</ruleml:Var>
              <ruleml:Var key=":elf">elf</ruleml:Var>
              <ruleml:Var key=":ecw">ecw</ruleml:Var>
              <ruleml:Var key=":eim">eim</ruleml:Var>
              <ruleml:Var key=":er">er</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2679">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en1" />
              <ruleml:Var key=":ea">ea</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2680">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":ea" />
              <ruleml:Var key=":et">et</ruleml:Var>
              <ruleml:Ind>EuropeanUnion</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2681">
              <ruleml:Rel iri="prOnto:Transmit" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:thirdCountry" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en2" />
              <ruleml:Var key=":ei">ei</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2682">
              <ruleml:Rel iri="prOnto:implement" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":em">em</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:measure" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:appropriate" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha5Art49Par1FromPoint1ToPoint6" />
                <ruleml:Var keyref=":et" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en3" />
              <ruleml:Var key=":eto">eto</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2683">
              <ruleml:Rel iri="prOnto:Transmit" />
              <ruleml:Var keyref=":eto" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2684">
              <ruleml:Rel iri="prOnto:limitedTo" />
              <ruleml:Var keyref=":elt" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2685">
              <ruleml:Rel iri="prOnto:legitimateInterestOf" />
              <ruleml:Var keyref=":elf" />
              <ruleml:Var keyref=":y" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2686">
              <ruleml:Rel iri="prOnto:complyWith" />
              <ruleml:Var keyref=":ecw" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var key=":erf">erf</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2687">
              <ruleml:Rel iri="prOnto:rightsAndFreedomsOf" />
              <ruleml:Var keyref=":erf" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2688">
              <ruleml:Rel iri="prOnto:implement" />
              <ruleml:Var keyref=":eim" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":em1">em1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:measure" />
              <ruleml:Var keyref=":em1" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2689">
              <ruleml:Rel iri="prOnto:enforce" />
              <ruleml:Var keyref=":er" />
              <ruleml:Var keyref=":em1" />
              <ruleml:Var key=":eco">eco</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2690">
              <ruleml:Rel iri="prOnto:complyWith" />
              <ruleml:Var keyref=":eco" />
              <ruleml:Var keyref=":et" />
              <ruleml:Ind>GDPR</ruleml:Ind>
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Permission iri="rioOnto:Permission">
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":t1" />
            </ruleml:Atom>
          </lrml:Permission>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements254Formula4">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :en1 :en2 :en3 :elt :elf :ecw :eim :er) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (rioOnto:not :en1 :ea) & (prOnto:authorizedBy' :ea :et EuropeanUnion) & (prOnto:Transmit' :et :x :z :c)
	 & (prOnto:thirdCountry :c) & (rioOnto:not :en2 :ei) & (prOnto:implement' :ei :y :em)
	 & (prOnto:measure :em) & (prOnto:appropriate :em) & (rioOnto:not :en3 :eto)
	 & (prOnto:Transmit' :eto :x :z :c) & (prOnto:limitedTo' :elt :et :w) & (prOnto:legitimateInterestOf' :elf :y)
	 & (prOnto:complyWith' :ecw :et :erf) & (prOnto:rightsAndFreedomsOf' :erf :w) & (prOnto:implement' :eim :y :em1)
	 & (prOnto:measure :em1) & (prOnto:enforce' :er :em1 :eco) & (prOnto:complyWith' :eco :et GDPR)
	 & (rioOnto:exceptionCha5Art49Par1FromPoint1ToPoint6 :et),

	(rioOnto:RexistAtTime :a2 :t1) & (rioOnto:and :a2 :eno1 :eno2 :eno3) & (prOnto:Communicate' :eno1 :y prOnto:supAuth(prOnto:MSof(:y)) :et) & (prOnto:Communicate' :eno2 :y :w :et)
	 & (prOnto:Communicate' :eno1 :y :w :elf)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":en1">en1</ruleml:Var>
              <ruleml:Var key=":en2">en2</ruleml:Var>
              <ruleml:Var key=":en3">en3</ruleml:Var>
              <ruleml:Var key=":elt">elt</ruleml:Var>
              <ruleml:Var key=":elf">elf</ruleml:Var>
              <ruleml:Var key=":ecw">ecw</ruleml:Var>
              <ruleml:Var key=":eim">eim</ruleml:Var>
              <ruleml:Var key=":er">er</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2691">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en1" />
              <ruleml:Var key=":ea">ea</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2692">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":ea" />
              <ruleml:Var key=":et">et</ruleml:Var>
              <ruleml:Ind>EuropeanUnion</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2693">
              <ruleml:Rel iri="prOnto:Transmit" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:thirdCountry" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en2" />
              <ruleml:Var key=":ei">ei</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2694">
              <ruleml:Rel iri="prOnto:implement" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":em">em</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:measure" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:appropriate" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha5Art49Par1FromPoint1ToPoint6" />
                <ruleml:Var keyref=":et" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en3" />
              <ruleml:Var key=":eto">eto</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2695">
              <ruleml:Rel iri="prOnto:Transmit" />
              <ruleml:Var keyref=":eto" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2696">
              <ruleml:Rel iri="prOnto:limitedTo" />
              <ruleml:Var keyref=":elt" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2697">
              <ruleml:Rel iri="prOnto:legitimateInterestOf" />
              <ruleml:Var keyref=":elf" />
              <ruleml:Var keyref=":y" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2698">
              <ruleml:Rel iri="prOnto:complyWith" />
              <ruleml:Var keyref=":ecw" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var key=":erf">erf</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2699">
              <ruleml:Rel iri="prOnto:rightsAndFreedomsOf" />
              <ruleml:Var keyref=":erf" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2700">
              <ruleml:Rel iri="prOnto:implement" />
              <ruleml:Var keyref=":eim" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":em1">em1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:measure" />
              <ruleml:Var keyref=":em1" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2701">
              <ruleml:Rel iri="prOnto:enforce" />
              <ruleml:Var keyref=":er" />
              <ruleml:Var keyref=":em1" />
              <ruleml:Var key=":eco">eco</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2702">
              <ruleml:Rel iri="prOnto:complyWith" />
              <ruleml:Var keyref=":eco" />
              <ruleml:Var keyref=":et" />
              <ruleml:Ind>GDPR</ruleml:Ind>
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":a2">a2</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:and" />
                <ruleml:Var keyref=":a2" />
                <ruleml:Var key=":eno1">eno1</ruleml:Var>
                <ruleml:Var key=":eno2">eno2</ruleml:Var>
                <ruleml:Var key=":eno3">eno3</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2703">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":eno1" />
                <ruleml:Var keyref=":y" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:supAuth" />
                  <ruleml:Expr>
                    <ruleml:Fun iri="prOnto:MSof" />
                    <ruleml:Var keyref=":y" />
                  </ruleml:Expr>
                </ruleml:Expr>
                <ruleml:Var keyref=":et" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2704">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":eno2" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":et" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2705">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":eno1" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var keyref=":elf" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements255">
    <lrml:PrescriptiveStatement key="statements255Formula1">
      <!--
Permission:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :en1 :en2 :ehc :eau :eno) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (rioOnto:not :en1 :ea) & (prOnto:authorizedBy' :ea :et EuropeanUnion) & (prOnto:Transmit' :et :x :z :c)
	 & (prOnto:internationalOrganization :c) & (rioOnto:not :en2 :ei) & (prOnto:implement' :ei :y :em)
	 & (prOnto:measure :em) & (prOnto:appropriate :em) & (prOnto:consent :c)
	 & (prOnto:hasConsented' :ehc :w :c) & (prOnto:authorizedBy' :eau :et :c) & (prOnto:Communicate' :eno :y :w :er)
	 & (prOnto:riskFor' :er :w) & (rioOnto:exceptionCha5Art49Par3 :et),

	(rioOnto:RexistAtTime :et :t1)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":en1">en1</ruleml:Var>
              <ruleml:Var key=":en2">en2</ruleml:Var>
              <ruleml:Var key=":ehc">ehc</ruleml:Var>
              <ruleml:Var key=":eau">eau</ruleml:Var>
              <ruleml:Var key=":eno">eno</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2706">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en1" />
              <ruleml:Var key=":ea">ea</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2707">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":ea" />
              <ruleml:Var key=":et">et</ruleml:Var>
              <ruleml:Ind>EuropeanUnion</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2708">
              <ruleml:Rel iri="prOnto:Transmit" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:internationalOrganization" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en2" />
              <ruleml:Var key=":ei">ei</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2709">
              <ruleml:Rel iri="prOnto:implement" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":em">em</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:measure" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:appropriate" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:consent" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2710">
              <ruleml:Rel iri="prOnto:hasConsented" />
              <ruleml:Var keyref=":ehc" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2711">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":eau" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2712">
              <ruleml:Rel iri="prOnto:Communicate" />
              <ruleml:Var keyref=":eno" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var key=":er">er</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2713">
              <ruleml:Rel iri="prOnto:riskFor" />
              <ruleml:Var keyref=":er" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha5Art49Par3" />
                <ruleml:Var keyref=":et" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Permission iri="rioOnto:Permission">
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":t1" />
            </ruleml:Atom>
          </lrml:Permission>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements255Formula2">
      <!--
Permission:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :en1 :en2 :ehc :eau :eno :en3 :en3) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (rioOnto:not :en1 :ea) & (prOnto:authorizedBy' :ea :et EuropeanUnion) & (prOnto:Transmit' :et :x :z :c)
	 & (prOnto:thirdCountry :c) & (rioOnto:not :en2 :ei) & (prOnto:implement' :ei :y :em)
	 & (prOnto:measure :em) & (prOnto:appropriate :em) & (prOnto:consent :c)
	 & (prOnto:hasConsented' :ehc :w :c) & (prOnto:authorizedBy' :eau :et :c) & (prOnto:Communicate' :eno :y :w :er)
	 & (prOnto:riskFor' :er :w) & (rioOnto:exceptionCha5Art49Par3 :et),

	(rioOnto:RexistAtTime :et :t1)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":en1">en1</ruleml:Var>
              <ruleml:Var key=":en2">en2</ruleml:Var>
              <ruleml:Var key=":ehc">ehc</ruleml:Var>
              <ruleml:Var key=":eau">eau</ruleml:Var>
              <ruleml:Var key=":eno">eno</ruleml:Var>
              <ruleml:Var key=":en3">en3</ruleml:Var>
              <ruleml:Var key=":en3">eop</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2714">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en1" />
              <ruleml:Var key=":ea">ea</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2715">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":ea" />
              <ruleml:Var key=":et">et</ruleml:Var>
              <ruleml:Ind>EuropeanUnion</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2716">
              <ruleml:Rel iri="prOnto:Transmit" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:thirdCountry" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en2" />
              <ruleml:Var key=":ei">ei</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2717">
              <ruleml:Rel iri="prOnto:implement" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":em">em</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:measure" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:appropriate" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:consent" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2718">
              <ruleml:Rel iri="prOnto:hasConsented" />
              <ruleml:Var keyref=":ehc" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2719">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":eau" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2720">
              <ruleml:Rel iri="prOnto:Communicate" />
              <ruleml:Var keyref=":eno" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var key=":er">er</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2721">
              <ruleml:Rel iri="prOnto:riskFor" />
              <ruleml:Var keyref=":er" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha5Art49Par3" />
                <ruleml:Var keyref=":et" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Permission iri="rioOnto:Permission">
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":t1" />
            </ruleml:Atom>
          </lrml:Permission>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:ConstitutiveStatement key="statements255Formula3">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :en1 :en2 :ehc :eau :eno) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (rioOnto:not :en1 :ea) & (prOnto:authorizedBy' :ea :et EuropeanUnion) & (prOnto:Transmit' :et :x :z :c)
	 & (prOnto:internationalOrganization :c) & (rioOnto:not :en2 :ei) & (prOnto:implement' :ei :y :em)
	 & (prOnto:measure :em) & (prOnto:appropriate :em) & (prOnto:consent :c)
	 & (prOnto:hasConsented' :ehc :w :c) & (prOnto:authorizedBy' :eau :et :c) & (prOnto:Communicate' :eno :y :w :er)
	 & (prOnto:riskFor' :er :w) & (rioOnto:exceptionCha5Art49Par3 :et),

	(rioOnto:exceptionCha5Art49Par1FromPoint1ToPoint6 :et)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":en1">en1</ruleml:Var>
              <ruleml:Var key=":en2">en2</ruleml:Var>
              <ruleml:Var key=":ehc">ehc</ruleml:Var>
              <ruleml:Var key=":eau">eau</ruleml:Var>
              <ruleml:Var key=":eno">eno</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2722">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en1" />
              <ruleml:Var key=":ea">ea</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2723">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":ea" />
              <ruleml:Var key=":et">et</ruleml:Var>
              <ruleml:Ind>EuropeanUnion</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2724">
              <ruleml:Rel iri="prOnto:Transmit" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:internationalOrganization" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en2" />
              <ruleml:Var key=":ei">ei</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2725">
              <ruleml:Rel iri="prOnto:implement" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":em">em</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:measure" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:appropriate" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:consent" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2726">
              <ruleml:Rel iri="prOnto:hasConsented" />
              <ruleml:Var keyref=":ehc" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2727">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":eau" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2728">
              <ruleml:Rel iri="prOnto:Communicate" />
              <ruleml:Var keyref=":eno" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var key=":er">er</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2729">
              <ruleml:Rel iri="prOnto:riskFor" />
              <ruleml:Var keyref=":er" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha5Art49Par3" />
                <ruleml:Var keyref=":et" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:exceptionCha5Art49Par1FromPoint1ToPoint6" />
              <ruleml:Var keyref=":et" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
    <lrml:ConstitutiveStatement key="statements255Formula4">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :en1 :en2 :ehc :eau :eno :en3 :en3) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (rioOnto:not :en1 :ea) & (prOnto:authorizedBy' :ea :et EuropeanUnion) & (prOnto:Transmit' :et :x :z :c)
	 & (prOnto:thirdCountry :c) & (rioOnto:not :en2 :ei) & (prOnto:implement' :ei :y :em)
	 & (prOnto:measure :em) & (prOnto:appropriate :em) & (prOnto:consent :c)
	 & (prOnto:hasConsented' :ehc :w :c) & (prOnto:authorizedBy' :eau :et :c) & (prOnto:Communicate' :eno :y :w :er)
	 & (prOnto:riskFor' :er :w) & (rioOnto:exceptionCha5Art49Par3 :et),

	(rioOnto:exceptionCha5Art49Par1FromPoint1ToPoint6 :et)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":en1">en1</ruleml:Var>
              <ruleml:Var key=":en2">en2</ruleml:Var>
              <ruleml:Var key=":ehc">ehc</ruleml:Var>
              <ruleml:Var key=":eau">eau</ruleml:Var>
              <ruleml:Var key=":eno">eno</ruleml:Var>
              <ruleml:Var key=":en3">en3</ruleml:Var>
              <ruleml:Var key=":en3">eop</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2730">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en1" />
              <ruleml:Var key=":ea">ea</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2731">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":ea" />
              <ruleml:Var key=":et">et</ruleml:Var>
              <ruleml:Ind>EuropeanUnion</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2732">
              <ruleml:Rel iri="prOnto:Transmit" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:thirdCountry" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en2" />
              <ruleml:Var key=":ei">ei</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2733">
              <ruleml:Rel iri="prOnto:implement" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":em">em</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:measure" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:appropriate" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:consent" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2734">
              <ruleml:Rel iri="prOnto:hasConsented" />
              <ruleml:Var keyref=":ehc" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2735">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":eau" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2736">
              <ruleml:Rel iri="prOnto:Communicate" />
              <ruleml:Var keyref=":eno" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var key=":er">er</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2737">
              <ruleml:Rel iri="prOnto:riskFor" />
              <ruleml:Var keyref=":er" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha5Art49Par3" />
                <ruleml:Var keyref=":et" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:exceptionCha5Art49Par1FromPoint1ToPoint6" />
              <ruleml:Var keyref=":et" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements256">
    <lrml:PrescriptiveStatement key="statements256Formula1">
      <!--
Permission:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :en1 :en2 :ei :ep1 :ep2) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (rioOnto:not :en1 :ea) & (prOnto:authorizedBy' :ea :et EuropeanUnion) & (prOnto:Transmit' :et :x :z :c)
	 & (prOnto:internationalOrganization :c) & (rioOnto:not :en2 :eim) & (prOnto:implement' :eim :y :em)
	 & (prOnto:measure :em) & (prOnto:appropriate :em) & (rioOnto:imply :ei :ee :et)
	 & (prOnto:execute' :ee :k :co) & (prOnto:contract :co) & (prOnto:partyOf' :ep1 :w :co)
	 & (prOnto:partyOf' :ep2 :y :co) & (rioOnto:exceptionCha5Art49Par3 :et),

	(rioOnto:RexistAtTime :et :t1)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":en1">en1</ruleml:Var>
              <ruleml:Var key=":en2">en2</ruleml:Var>
              <ruleml:Var key=":ei">ei</ruleml:Var>
              <ruleml:Var key=":ep1">ep1</ruleml:Var>
              <ruleml:Var key=":ep2">ep2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2738">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en1" />
              <ruleml:Var key=":ea">ea</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2739">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":ea" />
              <ruleml:Var key=":et">et</ruleml:Var>
              <ruleml:Ind>EuropeanUnion</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2740">
              <ruleml:Rel iri="prOnto:Transmit" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:internationalOrganization" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en2" />
              <ruleml:Var key=":eim">eim</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2741">
              <ruleml:Rel iri="prOnto:implement" />
              <ruleml:Var keyref=":eim" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":em">em</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:measure" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:appropriate" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:imply" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var key=":ee">ee</ruleml:Var>
              <ruleml:Var keyref=":et" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2742">
              <ruleml:Rel iri="prOnto:execute" />
              <ruleml:Var keyref=":ee" />
              <ruleml:Var keyref=":k" />
              <ruleml:Var key=":co">co</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:contract" />
              <ruleml:Var keyref=":co" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2743">
              <ruleml:Rel iri="prOnto:partyOf" />
              <ruleml:Var keyref=":ep1" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":co" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2744">
              <ruleml:Rel iri="prOnto:partyOf" />
              <ruleml:Var keyref=":ep2" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":co" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha5Art49Par3" />
                <ruleml:Var keyref=":et" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Permission iri="rioOnto:Permission">
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":t1" />
            </ruleml:Atom>
          </lrml:Permission>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements256Formula2">
      <!--
Permission:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :en1 :en2 :ei :ep1 :ep2) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (rioOnto:not :en1 :ea) & (prOnto:authorizedBy' :ea :et EuropeanUnion) & (prOnto:Transmit' :et :x :z :c)
	 & (prOnto:thirdCountry :c) & (rioOnto:not :en2 :eim) & (prOnto:implement' :eim :y :em)
	 & (prOnto:measure :em) & (prOnto:appropriate :em) & (rioOnto:imply :ei :ee :et)
	 & (prOnto:execute' :ee :k :co) & (prOnto:contract :co) & (prOnto:partyOf' :ep1 :w :co)
	 & (prOnto:partyOf' :ep2 :y :co) & (rioOnto:exceptionCha5Art49Par3 :et),

	(rioOnto:RexistAtTime :et :t1)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":en1">en1</ruleml:Var>
              <ruleml:Var key=":en2">en2</ruleml:Var>
              <ruleml:Var key=":ei">ei</ruleml:Var>
              <ruleml:Var key=":ep1">ep1</ruleml:Var>
              <ruleml:Var key=":ep2">ep2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2745">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en1" />
              <ruleml:Var key=":ea">ea</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2746">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":ea" />
              <ruleml:Var key=":et">et</ruleml:Var>
              <ruleml:Ind>EuropeanUnion</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2747">
              <ruleml:Rel iri="prOnto:Transmit" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:thirdCountry" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en2" />
              <ruleml:Var key=":eim">eim</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2748">
              <ruleml:Rel iri="prOnto:implement" />
              <ruleml:Var keyref=":eim" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":em">em</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:measure" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:appropriate" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:imply" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var key=":ee">ee</ruleml:Var>
              <ruleml:Var keyref=":et" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2749">
              <ruleml:Rel iri="prOnto:execute" />
              <ruleml:Var keyref=":ee" />
              <ruleml:Var keyref=":k" />
              <ruleml:Var key=":co">co</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:contract" />
              <ruleml:Var keyref=":co" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2750">
              <ruleml:Rel iri="prOnto:partyOf" />
              <ruleml:Var keyref=":ep1" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":co" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2751">
              <ruleml:Rel iri="prOnto:partyOf" />
              <ruleml:Var keyref=":ep2" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":co" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha5Art49Par3" />
                <ruleml:Var keyref=":et" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Permission iri="rioOnto:Permission">
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":t1" />
            </ruleml:Atom>
          </lrml:Permission>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:ConstitutiveStatement key="statements256Formula3">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :en1 :en2 :ei :ep1 :ep2) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (rioOnto:not :en1 :ea) & (prOnto:authorizedBy' :ea :et EuropeanUnion) & (prOnto:Transmit' :et :x :z :c)
	 & (prOnto:internationalOrganization :c) & (rioOnto:not :en2 :eim) & (prOnto:implement' :eim :y :em)
	 & (prOnto:measure :em) & (prOnto:appropriate :em) & (rioOnto:imply :ei :ee :et)
	 & (prOnto:execute' :ee :k :co) & (prOnto:contract :co) & (prOnto:partyOf' :ep1 :w :co)
	 & (prOnto:partyOf' :ep2 :y :co) & (rioOnto:exceptionCha5Art49Par3 :et),

	(rioOnto:exceptionCha5Art49Par1FromPoint1ToPoint6 :et)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":en1">en1</ruleml:Var>
              <ruleml:Var key=":en2">en2</ruleml:Var>
              <ruleml:Var key=":ei">ei</ruleml:Var>
              <ruleml:Var key=":ep1">ep1</ruleml:Var>
              <ruleml:Var key=":ep2">ep2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2752">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en1" />
              <ruleml:Var key=":ea">ea</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2753">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":ea" />
              <ruleml:Var key=":et">et</ruleml:Var>
              <ruleml:Ind>EuropeanUnion</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2754">
              <ruleml:Rel iri="prOnto:Transmit" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:internationalOrganization" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en2" />
              <ruleml:Var key=":eim">eim</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2755">
              <ruleml:Rel iri="prOnto:implement" />
              <ruleml:Var keyref=":eim" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":em">em</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:measure" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:appropriate" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:imply" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var key=":ee">ee</ruleml:Var>
              <ruleml:Var keyref=":et" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2756">
              <ruleml:Rel iri="prOnto:execute" />
              <ruleml:Var keyref=":ee" />
              <ruleml:Var keyref=":k" />
              <ruleml:Var key=":co">co</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:contract" />
              <ruleml:Var keyref=":co" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2757">
              <ruleml:Rel iri="prOnto:partyOf" />
              <ruleml:Var keyref=":ep1" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":co" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2758">
              <ruleml:Rel iri="prOnto:partyOf" />
              <ruleml:Var keyref=":ep2" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":co" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha5Art49Par3" />
                <ruleml:Var keyref=":et" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:exceptionCha5Art49Par1FromPoint1ToPoint6" />
              <ruleml:Var keyref=":et" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
    <lrml:ConstitutiveStatement key="statements256Formula4">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :en1 :en2 :ei :ep1 :ep2) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (rioOnto:not :en1 :ea) & (prOnto:authorizedBy' :ea :et EuropeanUnion) & (prOnto:Transmit' :et :x :z :c)
	 & (prOnto:thirdCountry :c) & (rioOnto:not :en2 :eim) & (prOnto:implement' :eim :y :em)
	 & (prOnto:measure :em) & (prOnto:appropriate :em) & (rioOnto:imply :ei :ee :et)
	 & (prOnto:execute' :ee :k :co) & (prOnto:contract :co) & (prOnto:partyOf' :ep1 :w :co)
	 & (prOnto:partyOf' :ep2 :y :co) & (rioOnto:exceptionCha5Art49Par3 :et),

	(rioOnto:exceptionCha5Art49Par1FromPoint1ToPoint6 :et)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":en1">en1</ruleml:Var>
              <ruleml:Var key=":en2">en2</ruleml:Var>
              <ruleml:Var key=":ei">ei</ruleml:Var>
              <ruleml:Var key=":ep1">ep1</ruleml:Var>
              <ruleml:Var key=":ep2">ep2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2759">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en1" />
              <ruleml:Var key=":ea">ea</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2760">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":ea" />
              <ruleml:Var key=":et">et</ruleml:Var>
              <ruleml:Ind>EuropeanUnion</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2761">
              <ruleml:Rel iri="prOnto:Transmit" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:thirdCountry" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en2" />
              <ruleml:Var key=":eim">eim</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2762">
              <ruleml:Rel iri="prOnto:implement" />
              <ruleml:Var keyref=":eim" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":em">em</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:measure" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:appropriate" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:imply" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var key=":ee">ee</ruleml:Var>
              <ruleml:Var keyref=":et" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2763">
              <ruleml:Rel iri="prOnto:execute" />
              <ruleml:Var keyref=":ee" />
              <ruleml:Var keyref=":k" />
              <ruleml:Var key=":co">co</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:contract" />
              <ruleml:Var keyref=":co" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2764">
              <ruleml:Rel iri="prOnto:partyOf" />
              <ruleml:Var keyref=":ep1" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":co" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2765">
              <ruleml:Rel iri="prOnto:partyOf" />
              <ruleml:Var keyref=":ep2" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":co" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha5Art49Par3" />
                <ruleml:Var keyref=":et" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:exceptionCha5Art49Par1FromPoint1ToPoint6" />
              <ruleml:Var keyref=":et" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements257">
    <lrml:PrescriptiveStatement key="statements257Formula1">
      <!--
Permission:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :en1 :en2 :ei :ep1 :eh) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (rioOnto:not :en1 :ea) & (prOnto:authorizedBy' :ea :et EuropeanUnion) & (prOnto:Transmit' :et :x :z :c)
	 & (prOnto:internationalOrganization :c) & (rioOnto:not :en2 :eim) & (prOnto:implement' :eim :y :em)
	 & (prOnto:measure :em) & (prOnto:appropriate :em) & (rioOnto:imply :ei :ee :et)
	 & (prOnto:execute' :ee :k :co) & (prOnto:contract :co) & (prOnto:partyOf' :ep1 :w :co)
	 & (prOnto:legitimateInterestOf' :eh :w) & (rioOnto:exceptionCha5Art49Par3 :et),

	(rioOnto:RexistAtTime :et :t1)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":en1">en1</ruleml:Var>
              <ruleml:Var key=":en2">en2</ruleml:Var>
              <ruleml:Var key=":ei">ei</ruleml:Var>
              <ruleml:Var key=":ep1">ep1</ruleml:Var>
              <ruleml:Var key=":eh">eh</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2766">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en1" />
              <ruleml:Var key=":ea">ea</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2767">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":ea" />
              <ruleml:Var key=":et">et</ruleml:Var>
              <ruleml:Ind>EuropeanUnion</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2768">
              <ruleml:Rel iri="prOnto:Transmit" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:internationalOrganization" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en2" />
              <ruleml:Var key=":eim">eim</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2769">
              <ruleml:Rel iri="prOnto:implement" />
              <ruleml:Var keyref=":eim" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":em">em</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:measure" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:appropriate" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:imply" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var key=":ee">ee</ruleml:Var>
              <ruleml:Var keyref=":et" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2770">
              <ruleml:Rel iri="prOnto:execute" />
              <ruleml:Var keyref=":ee" />
              <ruleml:Var keyref=":k" />
              <ruleml:Var key=":co">co</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:contract" />
              <ruleml:Var keyref=":co" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2771">
              <ruleml:Rel iri="prOnto:partyOf" />
              <ruleml:Var keyref=":ep1" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":co" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2772">
              <ruleml:Rel iri="prOnto:legitimateInterestOf" />
              <ruleml:Var keyref=":eh" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha5Art49Par3" />
                <ruleml:Var keyref=":et" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Permission iri="rioOnto:Permission">
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":t1" />
            </ruleml:Atom>
          </lrml:Permission>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements257Formula2">
      <!--
Permission:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :en1 :en2 :ei :ep1 :eh) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (rioOnto:not :en1 :ea) & (prOnto:authorizedBy' :ea :et EuropeanUnion) & (prOnto:Transmit' :et :x :z :c)
	 & (prOnto:thirdCountry :c) & (rioOnto:not :en2 :eim) & (prOnto:implement' :eim :y :em)
	 & (prOnto:measure :em) & (prOnto:appropriate :em) & (rioOnto:imply :ei :ee :et)
	 & (prOnto:execute' :ee :k :co) & (prOnto:contract :co) & (prOnto:partyOf' :ep1 :w :co)
	 & (prOnto:legitimateInterestOf' :eh :w) & (rioOnto:exceptionCha5Art49Par3 :et),

	(rioOnto:RexistAtTime :et :t1)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":en1">en1</ruleml:Var>
              <ruleml:Var key=":en2">en2</ruleml:Var>
              <ruleml:Var key=":ei">ei</ruleml:Var>
              <ruleml:Var key=":ep1">ep1</ruleml:Var>
              <ruleml:Var key=":eh">eh</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2773">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en1" />
              <ruleml:Var key=":ea">ea</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2774">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":ea" />
              <ruleml:Var key=":et">et</ruleml:Var>
              <ruleml:Ind>EuropeanUnion</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2775">
              <ruleml:Rel iri="prOnto:Transmit" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:thirdCountry" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en2" />
              <ruleml:Var key=":eim">eim</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2776">
              <ruleml:Rel iri="prOnto:implement" />
              <ruleml:Var keyref=":eim" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":em">em</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:measure" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:appropriate" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:imply" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var key=":ee">ee</ruleml:Var>
              <ruleml:Var keyref=":et" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2777">
              <ruleml:Rel iri="prOnto:execute" />
              <ruleml:Var keyref=":ee" />
              <ruleml:Var keyref=":k" />
              <ruleml:Var key=":co">co</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:contract" />
              <ruleml:Var keyref=":co" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2778">
              <ruleml:Rel iri="prOnto:partyOf" />
              <ruleml:Var keyref=":ep1" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":co" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2779">
              <ruleml:Rel iri="prOnto:legitimateInterestOf" />
              <ruleml:Var keyref=":eh" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha5Art49Par3" />
                <ruleml:Var keyref=":et" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Permission iri="rioOnto:Permission">
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":t1" />
            </ruleml:Atom>
          </lrml:Permission>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:ConstitutiveStatement key="statements257Formula3">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :en1 :en2 :ei :ep1 :eh) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (rioOnto:not :en1 :ea) & (prOnto:authorizedBy' :ea :et EuropeanUnion) & (prOnto:Transmit' :et :x :z :c)
	 & (prOnto:internationalOrganization :c) & (rioOnto:not :en2 :eim) & (prOnto:implement' :eim :y :em)
	 & (prOnto:measure :em) & (prOnto:appropriate :em) & (rioOnto:imply :ei :ee :et)
	 & (prOnto:execute' :ee :k :co) & (prOnto:contract :co) & (prOnto:partyOf' :ep1 :w :co)
	 & (prOnto:legitimateInterestOf' :eh :w) & (rioOnto:exceptionCha5Art49Par3 :et),

	(rioOnto:exceptionCha5Art49Par1FromPoint1ToPoint6 :et)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":en1">en1</ruleml:Var>
              <ruleml:Var key=":en2">en2</ruleml:Var>
              <ruleml:Var key=":ei">ei</ruleml:Var>
              <ruleml:Var key=":ep1">ep1</ruleml:Var>
              <ruleml:Var key=":eh">eh</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2780">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en1" />
              <ruleml:Var key=":ea">ea</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2781">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":ea" />
              <ruleml:Var key=":et">et</ruleml:Var>
              <ruleml:Ind>EuropeanUnion</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2782">
              <ruleml:Rel iri="prOnto:Transmit" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:internationalOrganization" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en2" />
              <ruleml:Var key=":eim">eim</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2783">
              <ruleml:Rel iri="prOnto:implement" />
              <ruleml:Var keyref=":eim" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":em">em</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:measure" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:appropriate" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:imply" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var key=":ee">ee</ruleml:Var>
              <ruleml:Var keyref=":et" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2784">
              <ruleml:Rel iri="prOnto:execute" />
              <ruleml:Var keyref=":ee" />
              <ruleml:Var keyref=":k" />
              <ruleml:Var key=":co">co</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:contract" />
              <ruleml:Var keyref=":co" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2785">
              <ruleml:Rel iri="prOnto:partyOf" />
              <ruleml:Var keyref=":ep1" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":co" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2786">
              <ruleml:Rel iri="prOnto:legitimateInterestOf" />
              <ruleml:Var keyref=":eh" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha5Art49Par3" />
                <ruleml:Var keyref=":et" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:exceptionCha5Art49Par1FromPoint1ToPoint6" />
              <ruleml:Var keyref=":et" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
    <lrml:ConstitutiveStatement key="statements257Formula4">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :en1 :en2 :ei :ep1 :eh) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (rioOnto:not :en1 :ea) & (prOnto:authorizedBy' :ea :et EuropeanUnion) & (prOnto:Transmit' :et :x :z :c)
	 & (prOnto:thirdCountry :c) & (rioOnto:not :en2 :eim) & (prOnto:implement' :eim :y :em)
	 & (prOnto:measure :em) & (prOnto:appropriate :em) & (rioOnto:imply :ei :ee :et)
	 & (prOnto:execute' :ee :k :co) & (prOnto:contract :co) & (prOnto:partyOf' :ep1 :w :co)
	 & (prOnto:legitimateInterestOf' :eh :w) & (rioOnto:exceptionCha5Art49Par3 :et),

	(rioOnto:exceptionCha5Art49Par1FromPoint1ToPoint6 :et)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":en1">en1</ruleml:Var>
              <ruleml:Var key=":en2">en2</ruleml:Var>
              <ruleml:Var key=":ei">ei</ruleml:Var>
              <ruleml:Var key=":ep1">ep1</ruleml:Var>
              <ruleml:Var key=":eh">eh</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2787">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en1" />
              <ruleml:Var key=":ea">ea</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2788">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":ea" />
              <ruleml:Var key=":et">et</ruleml:Var>
              <ruleml:Ind>EuropeanUnion</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2789">
              <ruleml:Rel iri="prOnto:Transmit" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:thirdCountry" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en2" />
              <ruleml:Var key=":eim">eim</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2790">
              <ruleml:Rel iri="prOnto:implement" />
              <ruleml:Var keyref=":eim" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":em">em</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:measure" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:appropriate" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:imply" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var key=":ee">ee</ruleml:Var>
              <ruleml:Var keyref=":et" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2791">
              <ruleml:Rel iri="prOnto:execute" />
              <ruleml:Var keyref=":ee" />
              <ruleml:Var keyref=":k" />
              <ruleml:Var key=":co">co</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:contract" />
              <ruleml:Var keyref=":co" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2792">
              <ruleml:Rel iri="prOnto:partyOf" />
              <ruleml:Var keyref=":ep1" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":co" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2793">
              <ruleml:Rel iri="prOnto:legitimateInterestOf" />
              <ruleml:Var keyref=":eh" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha5Art49Par3" />
                <ruleml:Var keyref=":et" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:exceptionCha5Art49Par1FromPoint1ToPoint6" />
              <ruleml:Var keyref=":et" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements258">
    <lrml:PrescriptiveStatement key="statements258Formula1">
      <!--
Permission:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :en1 :en2 :ei :eor) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (rioOnto:not :en1 :ea) & (prOnto:authorizedBy' :ea :et EuropeanUnion) & (prOnto:Transmit' :et :x :z :c)
	 & (prOnto:internationalOrganization :c) & (rioOnto:not :en2 :eim) & (prOnto:implement' :eim :y :em)
	 & (prOnto:measure :em) & (prOnto:appropriate :em) & (rioOnto:imply :ei :epi :et)
	 & (prOnto:PublicInterest' :epi :p) & (rioOnto:or :eor :er1 :er2) & (prOnto:recognize' :er1 :p EuropeanUnion)
	 & (prOnto:recognize' :er2 :p prOnto:MSof(:y)),

	(rioOnto:RexistAtTime :et :t1)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":en1">en1</ruleml:Var>
              <ruleml:Var key=":en2">en2</ruleml:Var>
              <ruleml:Var key=":ei">ei</ruleml:Var>
              <ruleml:Var key=":eor">eor</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2794">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en1" />
              <ruleml:Var key=":ea">ea</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2795">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":ea" />
              <ruleml:Var key=":et">et</ruleml:Var>
              <ruleml:Ind>EuropeanUnion</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2796">
              <ruleml:Rel iri="prOnto:Transmit" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:internationalOrganization" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en2" />
              <ruleml:Var key=":eim">eim</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2797">
              <ruleml:Rel iri="prOnto:implement" />
              <ruleml:Var keyref=":eim" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":em">em</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:measure" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:appropriate" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:imply" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var key=":epi">epi</ruleml:Var>
              <ruleml:Var keyref=":et" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2798">
              <ruleml:Rel iri="prOnto:PublicInterest" />
              <ruleml:Var keyref=":epi" />
              <ruleml:Var key=":p">p</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eor" />
              <ruleml:Var key=":er1">er1</ruleml:Var>
              <ruleml:Var key=":er2">er2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2799">
              <ruleml:Rel iri="prOnto:recognize" />
              <ruleml:Var keyref=":er1" />
              <ruleml:Var keyref=":p" />
              <ruleml:Ind>EuropeanUnion</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2800">
              <ruleml:Rel iri="prOnto:recognize" />
              <ruleml:Var keyref=":er2" />
              <ruleml:Var keyref=":p" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:MSof" />
                <ruleml:Var keyref=":y" />
              </ruleml:Expr>
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Permission iri="rioOnto:Permission">
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":t1" />
            </ruleml:Atom>
          </lrml:Permission>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements258Formula2">
      <!--
Permission:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :en1 :en2 :ei :eo) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (rioOnto:not :en1 :ea) & (prOnto:authorizedBy' :ea :et EuropeanUnion) & (prOnto:Transmit' :et :x :z :c)
	 & (prOnto:thirdCountry :c) & (rioOnto:not :en2 :eim) & (prOnto:implement' :eim :y :em)
	 & (prOnto:measure :em) & (prOnto:appropriate :em) & (rioOnto:imply :ei :epi :et)
	 & (prOnto:PublicInterest' :epi :p) & (rioOnto:or :eo :er1 :er2) & (prOnto:recognize' :er1 :p EuropeanUnion)
	 & (prOnto:recognize' :er2 :p prOnto:MSof(:y)),

	(rioOnto:RexistAtTime :et :t1)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":en1">en1</ruleml:Var>
              <ruleml:Var key=":en2">en2</ruleml:Var>
              <ruleml:Var key=":ei">ei</ruleml:Var>
              <ruleml:Var keyref=":eo" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2801">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en1" />
              <ruleml:Var key=":ea">ea</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2802">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":ea" />
              <ruleml:Var key=":et">et</ruleml:Var>
              <ruleml:Ind>EuropeanUnion</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2803">
              <ruleml:Rel iri="prOnto:Transmit" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:thirdCountry" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en2" />
              <ruleml:Var key=":eim">eim</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2804">
              <ruleml:Rel iri="prOnto:implement" />
              <ruleml:Var keyref=":eim" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":em">em</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:measure" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:appropriate" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:imply" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var key=":epi">epi</ruleml:Var>
              <ruleml:Var keyref=":et" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2805">
              <ruleml:Rel iri="prOnto:PublicInterest" />
              <ruleml:Var keyref=":epi" />
              <ruleml:Var key=":p">p</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eo" />
              <ruleml:Var key=":er1">er1</ruleml:Var>
              <ruleml:Var key=":er2">er2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2806">
              <ruleml:Rel iri="prOnto:recognize" />
              <ruleml:Var keyref=":er1" />
              <ruleml:Var keyref=":p" />
              <ruleml:Ind>EuropeanUnion</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2807">
              <ruleml:Rel iri="prOnto:recognize" />
              <ruleml:Var keyref=":er2" />
              <ruleml:Var keyref=":p" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:MSof" />
                <ruleml:Var keyref=":y" />
              </ruleml:Expr>
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Permission iri="rioOnto:Permission">
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":t1" />
            </ruleml:Atom>
          </lrml:Permission>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:ConstitutiveStatement key="statements258Formula3">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :en1 :en2 :ei :eor) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (rioOnto:not :en1 :ea) & (prOnto:authorizedBy' :ea :et EuropeanUnion) & (prOnto:Transmit' :et :x :z :c)
	 & (prOnto:internationalOrganization :c) & (rioOnto:not :en2 :eim) & (prOnto:implement' :eim :y :em)
	 & (prOnto:measure :em) & (prOnto:appropriate :em) & (rioOnto:imply :ei :epi :et)
	 & (prOnto:PublicInterest' :epi :p) & (rioOnto:or :eor :er1 :er2) & (prOnto:recognize' :er1 :p EuropeanUnion)
	 & (prOnto:recognize' :er2 :p prOnto:MSof(:y)),

	(rioOnto:exceptionCha5Art49Par1FromPoint1ToPoint6 :et)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":en1">en1</ruleml:Var>
              <ruleml:Var key=":en2">en2</ruleml:Var>
              <ruleml:Var key=":ei">ei</ruleml:Var>
              <ruleml:Var key=":eor">eor</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2808">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en1" />
              <ruleml:Var key=":ea">ea</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2809">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":ea" />
              <ruleml:Var key=":et">et</ruleml:Var>
              <ruleml:Ind>EuropeanUnion</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2810">
              <ruleml:Rel iri="prOnto:Transmit" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:internationalOrganization" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en2" />
              <ruleml:Var key=":eim">eim</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2811">
              <ruleml:Rel iri="prOnto:implement" />
              <ruleml:Var keyref=":eim" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":em">em</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:measure" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:appropriate" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:imply" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var key=":epi">epi</ruleml:Var>
              <ruleml:Var keyref=":et" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2812">
              <ruleml:Rel iri="prOnto:PublicInterest" />
              <ruleml:Var keyref=":epi" />
              <ruleml:Var key=":p">p</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eor" />
              <ruleml:Var key=":er1">er1</ruleml:Var>
              <ruleml:Var key=":er2">er2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2813">
              <ruleml:Rel iri="prOnto:recognize" />
              <ruleml:Var keyref=":er1" />
              <ruleml:Var keyref=":p" />
              <ruleml:Ind>EuropeanUnion</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2814">
              <ruleml:Rel iri="prOnto:recognize" />
              <ruleml:Var keyref=":er2" />
              <ruleml:Var keyref=":p" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:MSof" />
                <ruleml:Var keyref=":y" />
              </ruleml:Expr>
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:exceptionCha5Art49Par1FromPoint1ToPoint6" />
              <ruleml:Var keyref=":et" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
    <lrml:ConstitutiveStatement key="statements258Formula4">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :en1 :en2 :ei :eo) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (rioOnto:not :en1 :ea) & (prOnto:authorizedBy' :ea :et EuropeanUnion) & (prOnto:Transmit' :et :x :z :c)
	 & (prOnto:thirdCountry :c) & (rioOnto:not :en2 :eim) & (prOnto:implement' :eim :y :em)
	 & (prOnto:measure :em) & (prOnto:appropriate :em) & (rioOnto:imply :ei :epi :et)
	 & (prOnto:PublicInterest' :epi :p) & (rioOnto:or :eo :er1 :er2) & (prOnto:recognize' :er1 :p EuropeanUnion)
	 & (prOnto:recognize' :er2 :p prOnto:MSof(:y)),

	(rioOnto:exceptionCha5Art49Par1FromPoint1ToPoint6 :et)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":en1">en1</ruleml:Var>
              <ruleml:Var key=":en2">en2</ruleml:Var>
              <ruleml:Var key=":ei">ei</ruleml:Var>
              <ruleml:Var keyref=":eo" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2815">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en1" />
              <ruleml:Var key=":ea">ea</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2816">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":ea" />
              <ruleml:Var key=":et">et</ruleml:Var>
              <ruleml:Ind>EuropeanUnion</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2817">
              <ruleml:Rel iri="prOnto:Transmit" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:thirdCountry" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en2" />
              <ruleml:Var key=":eim">eim</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2818">
              <ruleml:Rel iri="prOnto:implement" />
              <ruleml:Var keyref=":eim" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":em">em</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:measure" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:appropriate" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:imply" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var key=":epi">epi</ruleml:Var>
              <ruleml:Var keyref=":et" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2819">
              <ruleml:Rel iri="prOnto:PublicInterest" />
              <ruleml:Var keyref=":epi" />
              <ruleml:Var key=":p">p</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eo" />
              <ruleml:Var key=":er1">er1</ruleml:Var>
              <ruleml:Var key=":er2">er2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2820">
              <ruleml:Rel iri="prOnto:recognize" />
              <ruleml:Var keyref=":er1" />
              <ruleml:Var keyref=":p" />
              <ruleml:Ind>EuropeanUnion</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2821">
              <ruleml:Rel iri="prOnto:recognize" />
              <ruleml:Var keyref=":er2" />
              <ruleml:Var keyref=":p" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:MSof" />
                <ruleml:Var keyref=":y" />
              </ruleml:Expr>
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:exceptionCha5Art49Par1FromPoint1ToPoint6" />
              <ruleml:Var keyref=":et" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements259">
    <lrml:PrescriptiveStatement key="statements259Formula1">
      <!--
Permission:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :en1 :en2 :ei :eo) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (rioOnto:not :en1 :ea) & (prOnto:authorizedBy' :ea :et EuropeanUnion) & (prOnto:Transmit' :et :x :z :c)
	 & (prOnto:internationalOrganization :c) & (rioOnto:not :en2 :eim) & (prOnto:implement' :eim :y :em)
	 & (prOnto:measure :em) & (prOnto:appropriate :em) & (rioOnto:imply :ei :lc :et)
	 & (prOnto:legalClaim :lc),

	(rioOnto:RexistAtTime :et :t1)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":en1">en1</ruleml:Var>
              <ruleml:Var key=":en2">en2</ruleml:Var>
              <ruleml:Var key=":ei">ei</ruleml:Var>
              <ruleml:Var keyref=":eo" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2822">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en1" />
              <ruleml:Var key=":ea">ea</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2823">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":ea" />
              <ruleml:Var key=":et">et</ruleml:Var>
              <ruleml:Ind>EuropeanUnion</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2824">
              <ruleml:Rel iri="prOnto:Transmit" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:internationalOrganization" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en2" />
              <ruleml:Var key=":eim">eim</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2825">
              <ruleml:Rel iri="prOnto:implement" />
              <ruleml:Var keyref=":eim" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":em">em</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:measure" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:appropriate" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:imply" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var key=":lc">lc</ruleml:Var>
              <ruleml:Var keyref=":et" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:legalClaim" />
              <ruleml:Var keyref=":lc" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Permission iri="rioOnto:Permission">
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":t1" />
            </ruleml:Atom>
          </lrml:Permission>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements259Formula2">
      <!--
Permission:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :en1 :en2 :ei :eo) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (rioOnto:not :en1 :ea) & (prOnto:authorizedBy' :ea :et EuropeanUnion) & (prOnto:Transmit' :et :x :z :c)
	 & (prOnto:thirdCountry :c) & (rioOnto:not :en2 :eim) & (prOnto:implement' :eim :y :em)
	 & (prOnto:measure :em) & (prOnto:appropriate :em) & (rioOnto:imply :ei :lc :et)
	 & (prOnto:legalClaim :lc),

	(rioOnto:RexistAtTime :et :t1)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":en1">en1</ruleml:Var>
              <ruleml:Var key=":en2">en2</ruleml:Var>
              <ruleml:Var key=":ei">ei</ruleml:Var>
              <ruleml:Var keyref=":eo" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2826">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en1" />
              <ruleml:Var key=":ea">ea</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2827">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":ea" />
              <ruleml:Var key=":et">et</ruleml:Var>
              <ruleml:Ind>EuropeanUnion</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2828">
              <ruleml:Rel iri="prOnto:Transmit" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:thirdCountry" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en2" />
              <ruleml:Var key=":eim">eim</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2829">
              <ruleml:Rel iri="prOnto:implement" />
              <ruleml:Var keyref=":eim" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":em">em</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:measure" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:appropriate" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:imply" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var key=":lc">lc</ruleml:Var>
              <ruleml:Var keyref=":et" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:legalClaim" />
              <ruleml:Var keyref=":lc" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Permission iri="rioOnto:Permission">
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":t1" />
            </ruleml:Atom>
          </lrml:Permission>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:ConstitutiveStatement key="statements259Formula3">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :en1 :en2 :ei :eo) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (rioOnto:not :en1 :ea) & (prOnto:authorizedBy' :ea :et EuropeanUnion) & (prOnto:Transmit' :et :x :z :c)
	 & (prOnto:internationalOrganization :c) & (rioOnto:not :en2 :eim) & (prOnto:implement' :eim :y :em)
	 & (prOnto:measure :em) & (prOnto:appropriate :em) & (rioOnto:imply :ei :lc :et)
	 & (prOnto:legalClaim :lc),

	(rioOnto:exceptionCha5Art49Par1FromPoint1ToPoint6 :et)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":en1">en1</ruleml:Var>
              <ruleml:Var key=":en2">en2</ruleml:Var>
              <ruleml:Var key=":ei">ei</ruleml:Var>
              <ruleml:Var keyref=":eo" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2830">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en1" />
              <ruleml:Var key=":ea">ea</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2831">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":ea" />
              <ruleml:Var key=":et">et</ruleml:Var>
              <ruleml:Ind>EuropeanUnion</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2832">
              <ruleml:Rel iri="prOnto:Transmit" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:internationalOrganization" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en2" />
              <ruleml:Var key=":eim">eim</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2833">
              <ruleml:Rel iri="prOnto:implement" />
              <ruleml:Var keyref=":eim" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":em">em</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:measure" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:appropriate" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:imply" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var key=":lc">lc</ruleml:Var>
              <ruleml:Var keyref=":et" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:legalClaim" />
              <ruleml:Var keyref=":lc" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:exceptionCha5Art49Par1FromPoint1ToPoint6" />
              <ruleml:Var keyref=":et" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
    <lrml:ConstitutiveStatement key="statements259Formula4">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :en1 :en2 :ei :eo) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (rioOnto:not :en1 :ea) & (prOnto:authorizedBy' :ea :et EuropeanUnion) & (prOnto:Transmit' :et :x :z :c)
	 & (prOnto:thirdCountry :c) & (rioOnto:not :en2 :eim) & (prOnto:implement' :eim :y :em)
	 & (prOnto:measure :em) & (prOnto:appropriate :em) & (rioOnto:imply :ei :lc :et)
	 & (prOnto:legalClaim :lc),

	(rioOnto:exceptionCha5Art49Par1FromPoint1ToPoint6 :et)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":en1">en1</ruleml:Var>
              <ruleml:Var key=":en2">en2</ruleml:Var>
              <ruleml:Var key=":ei">ei</ruleml:Var>
              <ruleml:Var keyref=":eo" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2834">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en1" />
              <ruleml:Var key=":ea">ea</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2835">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":ea" />
              <ruleml:Var key=":et">et</ruleml:Var>
              <ruleml:Ind>EuropeanUnion</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2836">
              <ruleml:Rel iri="prOnto:Transmit" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:thirdCountry" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en2" />
              <ruleml:Var key=":eim">eim</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2837">
              <ruleml:Rel iri="prOnto:implement" />
              <ruleml:Var keyref=":eim" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":em">em</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:measure" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:appropriate" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:imply" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var key=":lc">lc</ruleml:Var>
              <ruleml:Var keyref=":et" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:legalClaim" />
              <ruleml:Var keyref=":lc" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:exceptionCha5Art49Par1FromPoint1ToPoint6" />
              <ruleml:Var keyref=":et" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements260">
    <lrml:PrescriptiveStatement key="statements260Formula1">
      <!--
Permission:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :en1 :en2 :en3 :ei) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (rioOnto:not :en1 :ea) & (prOnto:authorizedBy' :ea :et EuropeanUnion) & (prOnto:Transmit' :et :x :z :c)
	 & (prOnto:internationalOrganization :c) & (rioOnto:not :en2 :eim) & (prOnto:implement' :eim :y :em)
	 & (prOnto:measure :em) & (prOnto:appropriate :em) & (rioOnto:not :en3 :eat)
	 & (prOnto:ableTo' :eat :w :ehc) & (prOnto:consent :c) & (prOnto:hasConsented' :ehc :w :c)
	 & (prOnto:authorizedBy' :eau :epu :c) & (rioOnto:imply :ei :epr :et) & (prOnto:protect' :epr :k prOnto:vitalInterest(:w)),

	(rioOnto:RexistAtTime :et :t1)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":en1">en1</ruleml:Var>
              <ruleml:Var key=":en2">en2</ruleml:Var>
              <ruleml:Var key=":en3">en3</ruleml:Var>
              <ruleml:Var key=":ei">ei</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2838">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en1" />
              <ruleml:Var key=":ea">ea</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2839">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":ea" />
              <ruleml:Var key=":et">et</ruleml:Var>
              <ruleml:Ind>EuropeanUnion</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2840">
              <ruleml:Rel iri="prOnto:Transmit" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:internationalOrganization" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en2" />
              <ruleml:Var key=":eim">eim</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2841">
              <ruleml:Rel iri="prOnto:implement" />
              <ruleml:Var keyref=":eim" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":em">em</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:measure" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:appropriate" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en3" />
              <ruleml:Var key=":eat">eat</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2842">
              <ruleml:Rel iri="prOnto:ableTo" />
              <ruleml:Var keyref=":eat" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var key=":ehc">ehc</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:consent" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2843">
              <ruleml:Rel iri="prOnto:hasConsented" />
              <ruleml:Var keyref=":ehc" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2844">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":eau" />
              <ruleml:Var keyref=":epu" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:imply" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var key=":epr">epr</ruleml:Var>
              <ruleml:Var keyref=":et" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2845">
              <ruleml:Rel iri="prOnto:protect" />
              <ruleml:Var keyref=":epr" />
              <ruleml:Var key=":k">k</ruleml:Var>
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:vitalInterest" />
                <ruleml:Var keyref=":w" />
              </ruleml:Expr>
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Permission iri="rioOnto:Permission">
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":t1" />
            </ruleml:Atom>
          </lrml:Permission>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements260Formula2">
      <!--
Permission:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :en1 :en2 :en3 :ei) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (rioOnto:not :en1 :ea) & (prOnto:authorizedBy' :ea :et EuropeanUnion) & (prOnto:Transmit' :et :x :z :c)
	 & (prOnto:thirdCountry :c) & (rioOnto:not :en2 :eim) & (prOnto:implement' :eim :y :em)
	 & (prOnto:measure :em) & (prOnto:appropriate :em) & (rioOnto:not :en3 :eat)
	 & (prOnto:ableTo' :eat :w :ehc) & (prOnto:consent :c) & (prOnto:hasConsented' :ehc :w :c)
	 & (rioOnto:imply :ei :epr :et) & (prOnto:protect' :epr :k prOnto:vitalInterest(:w)),

	(rioOnto:RexistAtTime :et :t1)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":en1">en1</ruleml:Var>
              <ruleml:Var key=":en2">en2</ruleml:Var>
              <ruleml:Var key=":en3">en3</ruleml:Var>
              <ruleml:Var key=":ei">ei</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2846">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en1" />
              <ruleml:Var key=":ea">ea</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2847">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":ea" />
              <ruleml:Var key=":et">et</ruleml:Var>
              <ruleml:Ind>EuropeanUnion</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2848">
              <ruleml:Rel iri="prOnto:Transmit" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:thirdCountry" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en2" />
              <ruleml:Var key=":eim">eim</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2849">
              <ruleml:Rel iri="prOnto:implement" />
              <ruleml:Var keyref=":eim" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":em">em</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:measure" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:appropriate" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en3" />
              <ruleml:Var key=":eat">eat</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2850">
              <ruleml:Rel iri="prOnto:ableTo" />
              <ruleml:Var keyref=":eat" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var key=":ehc">ehc</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:consent" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2851">
              <ruleml:Rel iri="prOnto:hasConsented" />
              <ruleml:Var keyref=":ehc" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:imply" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var key=":epr">epr</ruleml:Var>
              <ruleml:Var keyref=":et" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2852">
              <ruleml:Rel iri="prOnto:protect" />
              <ruleml:Var keyref=":epr" />
              <ruleml:Var key=":k">k</ruleml:Var>
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:vitalInterest" />
                <ruleml:Var keyref=":w" />
              </ruleml:Expr>
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Permission iri="rioOnto:Permission">
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":t1" />
            </ruleml:Atom>
          </lrml:Permission>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:ConstitutiveStatement key="statements260Formula3">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :en1 :en2 :en3 :ei) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (rioOnto:not :en1 :ea) & (prOnto:authorizedBy' :ea :et EuropeanUnion) & (prOnto:Transmit' :et :x :z :c)
	 & (prOnto:internationalOrganization :c) & (rioOnto:not :en2 :eim) & (prOnto:implement' :eim :y :em)
	 & (prOnto:measure :em) & (prOnto:appropriate :em) & (rioOnto:not :en3 :eat)
	 & (prOnto:ableTo' :eat :w :ehc) & (prOnto:consent :c) & (prOnto:hasConsented' :ehc :w :c)
	 & (rioOnto:imply :ei :epr :et) & (prOnto:protect' :epr :k prOnto:vitalInterest(:w)),

	(rioOnto:exceptionCha5Art49Par1FromPoint1ToPoint6 :et)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":en1">en1</ruleml:Var>
              <ruleml:Var key=":en2">en2</ruleml:Var>
              <ruleml:Var key=":en3">en3</ruleml:Var>
              <ruleml:Var key=":ei">ei</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2853">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en1" />
              <ruleml:Var key=":ea">ea</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2854">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":ea" />
              <ruleml:Var key=":et">et</ruleml:Var>
              <ruleml:Ind>EuropeanUnion</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2855">
              <ruleml:Rel iri="prOnto:Transmit" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:internationalOrganization" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en2" />
              <ruleml:Var key=":eim">eim</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2856">
              <ruleml:Rel iri="prOnto:implement" />
              <ruleml:Var keyref=":eim" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":em">em</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:measure" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:appropriate" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en3" />
              <ruleml:Var key=":eat">eat</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2857">
              <ruleml:Rel iri="prOnto:ableTo" />
              <ruleml:Var keyref=":eat" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var key=":ehc">ehc</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:consent" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2858">
              <ruleml:Rel iri="prOnto:hasConsented" />
              <ruleml:Var keyref=":ehc" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:imply" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var key=":epr">epr</ruleml:Var>
              <ruleml:Var keyref=":et" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2859">
              <ruleml:Rel iri="prOnto:protect" />
              <ruleml:Var keyref=":epr" />
              <ruleml:Var key=":k">k</ruleml:Var>
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:vitalInterest" />
                <ruleml:Var keyref=":w" />
              </ruleml:Expr>
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:exceptionCha5Art49Par1FromPoint1ToPoint6" />
              <ruleml:Var keyref=":et" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
    <lrml:ConstitutiveStatement key="statements260Formula4">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :en1 :en2 :en3 :ei) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (rioOnto:not :en1 :ea) & (prOnto:authorizedBy' :ea :et EuropeanUnion) & (prOnto:Transmit' :et :x :z :c)
	 & (prOnto:thirdCountry :c) & (rioOnto:not :en2 :eim) & (prOnto:implement' :eim :y :em)
	 & (prOnto:measure :em) & (prOnto:appropriate :em) & (rioOnto:not :en3 :eat)
	 & (prOnto:ableTo' :eat :w :ehc) & (prOnto:consent :c) & (prOnto:hasConsented' :ehc :w :c)
	 & (rioOnto:imply :ei :epr :et) & (prOnto:protect' :epr :k prOnto:vitalInterest(:w)),

	(rioOnto:exceptionCha5Art49Par1FromPoint1ToPoint6 :et)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":en1">en1</ruleml:Var>
              <ruleml:Var key=":en2">en2</ruleml:Var>
              <ruleml:Var key=":en3">en3</ruleml:Var>
              <ruleml:Var key=":ei">ei</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2860">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en1" />
              <ruleml:Var key=":ea">ea</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2861">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":ea" />
              <ruleml:Var key=":et">et</ruleml:Var>
              <ruleml:Ind>EuropeanUnion</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2862">
              <ruleml:Rel iri="prOnto:Transmit" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:thirdCountry" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en2" />
              <ruleml:Var key=":eim">eim</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2863">
              <ruleml:Rel iri="prOnto:implement" />
              <ruleml:Var keyref=":eim" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":em">em</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:measure" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:appropriate" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en3" />
              <ruleml:Var key=":eat">eat</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2864">
              <ruleml:Rel iri="prOnto:ableTo" />
              <ruleml:Var keyref=":eat" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var key=":ehc">ehc</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:consent" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2865">
              <ruleml:Rel iri="prOnto:hasConsented" />
              <ruleml:Var keyref=":ehc" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:imply" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var key=":epr">epr</ruleml:Var>
              <ruleml:Var keyref=":et" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2866">
              <ruleml:Rel iri="prOnto:protect" />
              <ruleml:Var keyref=":epr" />
              <ruleml:Var key=":k">k</ruleml:Var>
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:vitalInterest" />
                <ruleml:Var keyref=":w" />
              </ruleml:Expr>
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:exceptionCha5Art49Par1FromPoint1ToPoint6" />
              <ruleml:Var keyref=":et" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements261">
    <lrml:PrescriptiveStatement key="statements261Formula1">
      <!--
Permission:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :en1 :en2 :ei :epo :eat :elt) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (rioOnto:not :en1 :ea) & (prOnto:authorizedBy' :ea :et EuropeanUnion) & (prOnto:Transmit' :et :x :z :c)
	 & (prOnto:internationalOrganization :c) & (rioOnto:not :en2 :eim) & (prOnto:implement' :eim :y :em)
	 & (prOnto:measure :em) & (prOnto:appropriate :em) & (rioOnto:imply :ei :r :et)
	 & (prOnto:register :r) & (prOnto:Communicate' :en :r :p :i) & (prOnto:public :p)
	 & (prOnto:ableTo' :eat :p :r) & (prOnto:access' :ecc :p :r) & (prOnto:limitedTo' :elt :et :w),

	(rioOnto:RexistAtTime :et :t1)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":en1">en1</ruleml:Var>
              <ruleml:Var key=":en2">en2</ruleml:Var>
              <ruleml:Var key=":ei">ei</ruleml:Var>
              <ruleml:Var key=":epo">epo</ruleml:Var>
              <ruleml:Var key=":eat">eat</ruleml:Var>
              <ruleml:Var key=":elt">elt</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2867">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en1" />
              <ruleml:Var keyref=":ea" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2868">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":ea" />
              <ruleml:Var key=":et">et</ruleml:Var>
              <ruleml:Ind>EuropeanUnion</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2869">
              <ruleml:Rel iri="prOnto:Transmit" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:internationalOrganization" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en2" />
              <ruleml:Var key=":eim">eim</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2870">
              <ruleml:Rel iri="prOnto:implement" />
              <ruleml:Var keyref=":eim" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":em">em</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:measure" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:appropriate" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:imply" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var key=":r">r</ruleml:Var>
              <ruleml:Var keyref=":et" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:register" />
              <ruleml:Var keyref=":r" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2871">
              <ruleml:Rel iri="prOnto:Communicate" />
              <ruleml:Var keyref=":en" />
              <ruleml:Var keyref=":r" />
              <ruleml:Var key=":p">p</ruleml:Var>
              <ruleml:Var key=":i">i</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:public" />
              <ruleml:Var keyref=":p" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2872">
              <ruleml:Rel iri="prOnto:ableTo" />
              <ruleml:Var keyref=":eat" />
              <ruleml:Var keyref=":p" />
              <ruleml:Var keyref=":r" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2873">
              <ruleml:Rel iri="prOnto:access" />
              <ruleml:Var keyref=":ecc" />
              <ruleml:Var keyref=":p" />
              <ruleml:Var keyref=":r" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2874">
              <ruleml:Rel iri="prOnto:limitedTo" />
              <ruleml:Var keyref=":elt" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Permission iri="rioOnto:Permission">
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":t1" />
            </ruleml:Atom>
          </lrml:Permission>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements261Formula2">
      <!--
Permission:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :en1 :en2 :ei :epo :eac :eor :elt) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (rioOnto:not :en1 :ea) & (prOnto:authorizedBy' :ea :et EuropeanUnion) & (prOnto:Transmit' :et :x :z :c)
	 & (prOnto:internationalOrganization :c) & (rioOnto:not :en2 :eim) & (prOnto:implement' :eim :y :em)
	 & (prOnto:measure :em) & (prOnto:appropriate :em) & (rioOnto:imply :ei :r :et)
	 & (prOnto:register :r) & (prOnto:Communicate' :en :r :p :i) & (prOnto:public :p)
	 & (prOnto:ableTo' :eat :k :ecc) & (prOnto:access' :ecc :k :r) & (rioOnto:or :eor :eau1 :eau2)
	 & (prOnto:authorizedBy' :eau1 :eac EuropeanUnion) & (prOnto:authorizedBy' :eau2 :eac prOnto:MSof(:y)) & (prOnto:limitedTo' :elt :et :w),

	(rioOnto:RexistAtTime :et :t1)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":en1">en1</ruleml:Var>
              <ruleml:Var key=":en2">en2</ruleml:Var>
              <ruleml:Var key=":ei">ei</ruleml:Var>
              <ruleml:Var key=":epo">epo</ruleml:Var>
              <ruleml:Var key=":eac">eat</ruleml:Var>
              <ruleml:Var key=":eor">eor</ruleml:Var>
              <ruleml:Var key=":elt">elt</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2875">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en1" />
              <ruleml:Var key=":ea">ea</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2876">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":ea" />
              <ruleml:Var key=":et">et</ruleml:Var>
              <ruleml:Ind>EuropeanUnion</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2877">
              <ruleml:Rel iri="prOnto:Transmit" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:internationalOrganization" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en2" />
              <ruleml:Var key=":eim">eim</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2878">
              <ruleml:Rel iri="prOnto:implement" />
              <ruleml:Var keyref=":eim" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":em">em</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:measure" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:appropriate" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:imply" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var key=":r">r</ruleml:Var>
              <ruleml:Var keyref=":et" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:register" />
              <ruleml:Var keyref=":r" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2879">
              <ruleml:Rel iri="prOnto:Communicate" />
              <ruleml:Var keyref=":en" />
              <ruleml:Var keyref=":r" />
              <ruleml:Var key=":p">p</ruleml:Var>
              <ruleml:Var key=":i">i</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:public" />
              <ruleml:Var keyref=":p" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2880">
              <ruleml:Rel iri="prOnto:ableTo" />
              <ruleml:Var keyref=":eat" />
              <ruleml:Var key=":k">k</ruleml:Var>
              <ruleml:Var key=":ecc">ecc</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2881">
              <ruleml:Rel iri="prOnto:access" />
              <ruleml:Var keyref=":ecc" />
              <ruleml:Var keyref=":k" />
              <ruleml:Var keyref=":r" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eor" />
              <ruleml:Var key=":eau1">eau1</ruleml:Var>
              <ruleml:Var key=":eau2">eau2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2882">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":eau1" />
              <ruleml:Var keyref=":eac" />
              <ruleml:Ind>EuropeanUnion</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2883">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":eau2" />
              <ruleml:Var keyref=":eac" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:MSof" />
                <ruleml:Var keyref=":y" />
              </ruleml:Expr>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2884">
              <ruleml:Rel iri="prOnto:limitedTo" />
              <ruleml:Var keyref=":elt" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Permission iri="rioOnto:Permission">
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":t1" />
            </ruleml:Atom>
          </lrml:Permission>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements261Formula3">
      <!--
Permission:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :en1 :en2 :ei :epo :eac :elt) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (rioOnto:not :en1 :ea) & (prOnto:authorizedBy' :ea :et EuropeanUnion) & (prOnto:Transmit' :et :x :z :c)
	 & (prOnto:thirdCountry :c) & (rioOnto:not :en2 :eim) & (prOnto:implement' :eim :y :em)
	 & (prOnto:measure :em) & (prOnto:appropriate :em) & (rioOnto:imply :ei :r :et)
	 & (prOnto:register :r) & (prOnto:Communicate' :en :r :p :i) & (prOnto:public :p)
	 & (prOnto:ableTo' :eat :p :ecc) & (prOnto:access' :ecc :p :r) & (prOnto:limitedTo' :elt :et :w),

	(rioOnto:RexistAtTime :et :t1)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":en1">en1</ruleml:Var>
              <ruleml:Var key=":en2">en2</ruleml:Var>
              <ruleml:Var key=":ei">ei</ruleml:Var>
              <ruleml:Var key=":epo">epo</ruleml:Var>
              <ruleml:Var key=":eac">eac</ruleml:Var>
              <ruleml:Var key=":elt">elt</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2885">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en1" />
              <ruleml:Var keyref=":ea" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2886">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":ea" />
              <ruleml:Var key=":et">et</ruleml:Var>
              <ruleml:Ind>EuropeanUnion</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2887">
              <ruleml:Rel iri="prOnto:Transmit" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:thirdCountry" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en2" />
              <ruleml:Var key=":eim">eim</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2888">
              <ruleml:Rel iri="prOnto:implement" />
              <ruleml:Var keyref=":eim" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":em">em</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:measure" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:appropriate" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:imply" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var key=":r">r</ruleml:Var>
              <ruleml:Var keyref=":et" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:register" />
              <ruleml:Var keyref=":r" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2889">
              <ruleml:Rel iri="prOnto:Communicate" />
              <ruleml:Var keyref=":en" />
              <ruleml:Var keyref=":r" />
              <ruleml:Var key=":p">p</ruleml:Var>
              <ruleml:Var key=":i">i</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:public" />
              <ruleml:Var keyref=":p" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2890">
              <ruleml:Rel iri="prOnto:ableTo" />
              <ruleml:Var keyref=":eat" />
              <ruleml:Var keyref=":p" />
              <ruleml:Var key=":ecc">ecc</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2891">
              <ruleml:Rel iri="prOnto:access" />
              <ruleml:Var keyref=":ecc" />
              <ruleml:Var keyref=":p" />
              <ruleml:Var keyref=":r" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2892">
              <ruleml:Rel iri="prOnto:limitedTo" />
              <ruleml:Var keyref=":elt" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Permission iri="rioOnto:Permission">
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":t1" />
            </ruleml:Atom>
          </lrml:Permission>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements261Formula4">
      <!--
Permission:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :en1 :en2 :ei :epo :eat :eor :elt) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (rioOnto:not :en1 :ea) & (prOnto:authorizedBy' :ea :et EuropeanUnion) & (prOnto:Transmit' :et :x :z :c)
	 & (prOnto:thirdCountry :c) & (rioOnto:not :en2 :eim) & (prOnto:implement' :eim :y :em)
	 & (prOnto:measure :em) & (prOnto:appropriate :em) & (rioOnto:imply :ei :r :et)
	 & (prOnto:register :r) & (prOnto:Communicate' :en :r :p :i) & (prOnto:public :p)
	 & (prOnto:ableTo' :eat :k :ecc) & (prOnto:access' :ecc :k :r) & (rioOnto:or :eor :eau1 :eau2)
	 & (prOnto:authorizedBy' :eau1 :eac EuropeanUnion) & (prOnto:authorizedBy' :eau2 :eac prOnto:MSof(:y)) & (prOnto:limitedTo' :elt :et :w),

	(rioOnto:RexistAtTime :et :t1)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":en1">en1</ruleml:Var>
              <ruleml:Var key=":en2">en2</ruleml:Var>
              <ruleml:Var key=":ei">ei</ruleml:Var>
              <ruleml:Var key=":epo">epo</ruleml:Var>
              <ruleml:Var key=":eat">eat</ruleml:Var>
              <ruleml:Var key=":eor">eor</ruleml:Var>
              <ruleml:Var key=":elt">elt</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2893">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en1" />
              <ruleml:Var key=":ea">ea</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2894">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":ea" />
              <ruleml:Var key=":et">et</ruleml:Var>
              <ruleml:Ind>EuropeanUnion</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2895">
              <ruleml:Rel iri="prOnto:Transmit" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:thirdCountry" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en2" />
              <ruleml:Var key=":eim">eim</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2896">
              <ruleml:Rel iri="prOnto:implement" />
              <ruleml:Var keyref=":eim" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":em">em</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:measure" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:appropriate" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:imply" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var key=":r">r</ruleml:Var>
              <ruleml:Var keyref=":et" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:register" />
              <ruleml:Var keyref=":r" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2897">
              <ruleml:Rel iri="prOnto:Communicate" />
              <ruleml:Var keyref=":en" />
              <ruleml:Var keyref=":r" />
              <ruleml:Var key=":p">p</ruleml:Var>
              <ruleml:Var key=":i">i</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:public" />
              <ruleml:Var keyref=":p" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2898">
              <ruleml:Rel iri="prOnto:ableTo" />
              <ruleml:Var keyref=":eat" />
              <ruleml:Var key=":k">k</ruleml:Var>
              <ruleml:Var key=":ecc">ecc</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2899">
              <ruleml:Rel iri="prOnto:access" />
              <ruleml:Var keyref=":ecc" />
              <ruleml:Var keyref=":k" />
              <ruleml:Var keyref=":r" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eor" />
              <ruleml:Var key=":eau1">eau1</ruleml:Var>
              <ruleml:Var key=":eau2">eau2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2900">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":eau1" />
              <ruleml:Var keyref=":eac" />
              <ruleml:Ind>EuropeanUnion</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2901">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":eau2" />
              <ruleml:Var keyref=":eac" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:MSof" />
                <ruleml:Var keyref=":y" />
              </ruleml:Expr>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2902">
              <ruleml:Rel iri="prOnto:limitedTo" />
              <ruleml:Var keyref=":elt" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Permission iri="rioOnto:Permission">
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":t1" />
            </ruleml:Atom>
          </lrml:Permission>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements262">
    <lrml:ConstitutiveStatement key="statements262Formula1">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :et :ert :eh) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:Transmit' :et :x :z :c) & (prOnto:relatedTo' :ert :et :pp) & (prOnto:publicPowers :pp)
	 & (prOnto:hold' :eh :p :pp) & (prOnto:publicAuthority :p),

	(rioOnto:exceptionCha5Art49Par3 :et)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":et">et</ruleml:Var>
              <ruleml:Var key=":ert">ert</ruleml:Var>
              <ruleml:Var key=":eh">eh</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2903">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2904">
              <ruleml:Rel iri="prOnto:Transmit" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2905">
              <ruleml:Rel iri="prOnto:relatedTo" />
              <ruleml:Var keyref=":ert" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var key=":pp">pp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:publicPowers" />
              <ruleml:Var keyref=":pp" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2906">
              <ruleml:Rel iri="prOnto:hold" />
              <ruleml:Var keyref=":eh" />
              <ruleml:Var key=":p">p</ruleml:Var>
              <ruleml:Var keyref=":pp" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:publicAuthority" />
              <ruleml:Var keyref=":p" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:Atom>
            <ruleml:Rel iri="rioOnto:exceptionCha5Art49Par3" />
            <ruleml:Var keyref=":et" />
          </ruleml:Atom>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements263">
    <lrml:PrescriptiveStatement key="statements263Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :eo1 :et :en1 :en2 :elf :ecw :eim :er :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :k :z) & (prOnto:Controller :y :z) & (prOnto:Processor :x)
	 & (prOnto:nominates' :edp :y :x) & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:register :r)
	 & (rioOnto:or :eo1 :er1 :er2) & (prOnto:responsibleFor' :er1 :y :r) & (prOnto:isRepresentedBy :y :k)
	 & (prOnto:Representative :k) & (prOnto:responsibleFor' :er2 :k :r) & (prOnto:Transmit' :et :x :z :k)
	 & (prOnto:countryOf :k :c) & (prOnto:thirdCountry :c) & (rioOnto:not :en1 :ea)
	 & (prOnto:authorizedBy' :ea :et EuropeanUnion) & (rioOnto:not :en2 :ei) & (prOnto:implement' :ei :y :em)
	 & (prOnto:measure :em) & (prOnto:appropriate :em) & (prOnto:legitimateInterestOf' :elf :y)
	 & (prOnto:complyWith' :ecw :et :erf) & (prOnto:rightsAndFreedomsOf' :erf :w) & (prOnto:implement' :eim :y :em1)
	 & (prOnto:measure :em1) & (prOnto:enforce' :er :em1 :eco) & (prOnto:complyWith' :eco :et GDPR)
	 & (rioOnto:exceptionCha5Art49Par1FromPoint1ToPoint6 :et),

	(rioOnto:RexistAtTime :a2 :t1) & (rioOnto:and :a2 :ew1 :ew2) & (prOnto:writeIn' :ew1 :y :r :eim) & (prOnto:writeIn' :ew2 :x :r :eim)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":eo1">eo1</ruleml:Var>
              <ruleml:Var key=":et">et</ruleml:Var>
              <ruleml:Var key=":en1">en1</ruleml:Var>
              <ruleml:Var key=":en2">en2</ruleml:Var>
              <ruleml:Var key=":elf">elf</ruleml:Var>
              <ruleml:Var key=":ecw">ecw</ruleml:Var>
              <ruleml:Var key=":eim">eim</ruleml:Var>
              <ruleml:Var key=":er">er</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":k">k</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2907">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2908">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:register" />
              <ruleml:Var key=":r">r</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eo1" />
              <ruleml:Var key=":er1">er1</ruleml:Var>
              <ruleml:Var key=":er2">er2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2909">
              <ruleml:Rel iri="prOnto:responsibleFor" />
              <ruleml:Var keyref=":er1" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":r" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isRepresentedBy" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Representative" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2910">
              <ruleml:Rel iri="prOnto:responsibleFor" />
              <ruleml:Var keyref=":er2" />
              <ruleml:Var keyref=":k" />
              <ruleml:Var keyref=":r" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2911">
              <ruleml:Rel iri="prOnto:Transmit" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:countryOf" />
              <ruleml:Var keyref=":k" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:thirdCountry" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en1" />
              <ruleml:Var key=":ea">ea</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2912">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":ea" />
              <ruleml:Var key=":et">et</ruleml:Var>
              <ruleml:Ind>EuropeanUnion</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en2" />
              <ruleml:Var key=":ei">ei</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2913">
              <ruleml:Rel iri="prOnto:implement" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":em">em</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:measure" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:appropriate" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha5Art49Par1FromPoint1ToPoint6" />
                <ruleml:Var keyref=":et" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Atom keyref=":A2914">
              <ruleml:Rel iri="prOnto:legitimateInterestOf" />
              <ruleml:Var keyref=":elf" />
              <ruleml:Var keyref=":y" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2915">
              <ruleml:Rel iri="prOnto:complyWith" />
              <ruleml:Var keyref=":ecw" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var key=":erf">erf</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2916">
              <ruleml:Rel iri="prOnto:rightsAndFreedomsOf" />
              <ruleml:Var keyref=":erf" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2917">
              <ruleml:Rel iri="prOnto:implement" />
              <ruleml:Var keyref=":eim" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":em1">em1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:measure" />
              <ruleml:Var keyref=":em1" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2918">
              <ruleml:Rel iri="prOnto:enforce" />
              <ruleml:Var keyref=":er" />
              <ruleml:Var keyref=":em1" />
              <ruleml:Var key=":eco">eco</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2919">
              <ruleml:Rel iri="prOnto:complyWith" />
              <ruleml:Var keyref=":eco" />
              <ruleml:Var keyref=":et" />
              <ruleml:Ind>GDPR</ruleml:Ind>
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":a2">a2</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:and" />
                <ruleml:Var keyref=":a2" />
                <ruleml:Var key=":ew1">ew1</ruleml:Var>
                <ruleml:Var key=":ew2">ew2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2920">
                <ruleml:Rel iri="prOnto:writeIn" />
                <ruleml:Var keyref=":ew1" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":r" />
                <ruleml:Var keyref=":eim" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2921">
                <ruleml:Rel iri="prOnto:writeIn" />
                <ruleml:Var keyref=":ew2" />
                <ruleml:Var keyref=":x" />
                <ruleml:Var keyref=":r" />
                <ruleml:Var keyref=":eim" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements263Formula2">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :eo1 :et :en1 :en2 :elf :ecw :eim :er :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :k :z) & (prOnto:Controller :y :z) & (prOnto:Processor :x)
	 & (prOnto:nominates' :edp :y :x) & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:register :r)
	 & (rioOnto:or :eo1 :er1 :er2) & (prOnto:responsibleFor' :er1 :y :r) & (prOnto:isRepresentedBy :y :k)
	 & (prOnto:Representative :k) & (prOnto:responsibleFor' :er2 :k :r) & (prOnto:Transmit' :et :x :z :k)
	 & (prOnto:countryOf :k :c) & (prOnto:internationalOrganization :c) & (rioOnto:not :en1 :ea)
	 & (prOnto:authorizedBy' :ea :et EuropeanUnion) & (rioOnto:not :en2 :ei) & (prOnto:implement' :ei :y :em)
	 & (prOnto:measure :em) & (prOnto:appropriate :em) & (prOnto:legitimateInterestOf' :elf :y)
	 & (prOnto:complyWith' :ecw :et :erf) & (prOnto:rightsAndFreedomsOf' :erf :w) & (prOnto:implement' :eim :y :em1)
	 & (prOnto:measure :em1) & (prOnto:enforce' :er :em1 :eco) & (prOnto:complyWith' :eco :et GDPR)
	 & (rioOnto:exceptionCha5Art49Par1FromPoint1ToPoint6 :et),

	(rioOnto:RexistAtTime :a2 :t1) & (rioOnto:and :a2 :ew1 :ew2) & (prOnto:writeIn' :ew1 :y :r :eim) & (prOnto:writeIn' :ew2 :x :r :eim)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":eo1">eo1</ruleml:Var>
              <ruleml:Var key=":et">et</ruleml:Var>
              <ruleml:Var key=":en1">en1</ruleml:Var>
              <ruleml:Var key=":en2">en2</ruleml:Var>
              <ruleml:Var key=":elf">elf</ruleml:Var>
              <ruleml:Var key=":ecw">ecw</ruleml:Var>
              <ruleml:Var key=":eim">eim</ruleml:Var>
              <ruleml:Var key=":er">er</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":k">k</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2922">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2923">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:register" />
              <ruleml:Var key=":r">r</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eo1" />
              <ruleml:Var key=":er1">er1</ruleml:Var>
              <ruleml:Var key=":er2">er2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2924">
              <ruleml:Rel iri="prOnto:responsibleFor" />
              <ruleml:Var keyref=":er1" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":r" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isRepresentedBy" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Representative" />
              <ruleml:Var keyref=":k" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2925">
              <ruleml:Rel iri="prOnto:responsibleFor" />
              <ruleml:Var keyref=":er2" />
              <ruleml:Var keyref=":k" />
              <ruleml:Var keyref=":r" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2926">
              <ruleml:Rel iri="prOnto:Transmit" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var key=":k">k</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:countryOf" />
              <ruleml:Var keyref=":k" />
              <ruleml:Var key=":c">c</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:internationalOrganization" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en1" />
              <ruleml:Var key=":ea">ea</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2927">
              <ruleml:Rel iri="prOnto:authorizedBy" />
              <ruleml:Var keyref=":ea" />
              <ruleml:Var key=":et">et</ruleml:Var>
              <ruleml:Ind>EuropeanUnion</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en2" />
              <ruleml:Var key=":ei">ei</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2928">
              <ruleml:Rel iri="prOnto:implement" />
              <ruleml:Var keyref=":ei" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":em">em</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:measure" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:appropriate" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha5Art49Par1FromPoint1ToPoint6" />
                <ruleml:Var keyref=":et" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Atom keyref=":A2929">
              <ruleml:Rel iri="prOnto:legitimateInterestOf" />
              <ruleml:Var keyref=":elf" />
              <ruleml:Var keyref=":y" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2930">
              <ruleml:Rel iri="prOnto:complyWith" />
              <ruleml:Var keyref=":ecw" />
              <ruleml:Var keyref=":et" />
              <ruleml:Var key=":erf">erf</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2931">
              <ruleml:Rel iri="prOnto:rightsAndFreedomsOf" />
              <ruleml:Var keyref=":erf" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2932">
              <ruleml:Rel iri="prOnto:implement" />
              <ruleml:Var keyref=":eim" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":em1">em1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:measure" />
              <ruleml:Var keyref=":em1" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2933">
              <ruleml:Rel iri="prOnto:enforce" />
              <ruleml:Var keyref=":er" />
              <ruleml:Var keyref=":em1" />
              <ruleml:Var key=":eco">eco</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2934">
              <ruleml:Rel iri="prOnto:complyWith" />
              <ruleml:Var keyref=":eco" />
              <ruleml:Var keyref=":et" />
              <ruleml:Ind>GDPR</ruleml:Ind>
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":a2">a2</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:and" />
                <ruleml:Var keyref=":a2" />
                <ruleml:Var key=":ew1">ew1</ruleml:Var>
                <ruleml:Var key=":ew2">ew2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2935">
                <ruleml:Rel iri="prOnto:writeIn" />
                <ruleml:Var keyref=":ew1" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":r" />
                <ruleml:Var keyref=":eim" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2936">
                <ruleml:Rel iri="prOnto:writeIn" />
                <ruleml:Var keyref=":ew2" />
                <ruleml:Var keyref=":x" />
                <ruleml:Var keyref=":r" />
                <ruleml:Var keyref=":eim" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements264">
    <lrml:PrescriptiveStatement key="statements264Formula1">
      <!--
Permission:
(
	(rioOnto:RexistAtTime :edp :t1) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w) & (prOnto:Controller :y :z)
	 & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x),

	(rioOnto:RexistAtTime :el :t1) & (prOnto:lodge' :el :w :c prOnto:supAuth(prOnto:MSof(:y))) & (prOnto:complaint :c)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":edp">edp</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2937">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Permission iri="rioOnto:Permission">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":el">el</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2938">
                <ruleml:Rel iri="prOnto:lodge" />
                <ruleml:Var keyref=":el" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var key=":c">c</ruleml:Var>
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:supAuth" />
                  <ruleml:Expr>
                    <ruleml:Fun iri="prOnto:MSof" />
                    <ruleml:Var keyref=":y" />
                  </ruleml:Expr>
                </ruleml:Expr>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:complaint" />
                <ruleml:Var keyref=":c" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Permission>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements265">
    <lrml:PrescriptiveStatement key="statements265Formula1">
      <!--
Permission:
(
	(rioOnto:RexistAtTime :erl :t1) & (prOnto:relatedTo' :erl :n :d) & (prOnto:naturalPerson :n) & (prOnto:decisionOf :d prOnto:supAuth(prOnto:MSof(:y))),

	(rioOnto:RexistAtTime :er :t1) & (prOnto:request' :er :n :j) & (prOnto:judicialRemedy :j) & (prOnto:relatedTo :j :d)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":erl">erl</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2939">
              <ruleml:Rel iri="prOnto:relatedTo" />
              <ruleml:Var keyref=":erl" />
              <ruleml:Var key=":n">n</ruleml:Var>
              <ruleml:Var key=":d">d</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:naturalPerson" />
              <ruleml:Var keyref=":n" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:decisionOf" />
              <ruleml:Var keyref=":d" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:supAuth" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:MSof" />
                  <ruleml:Var key=":y">y</ruleml:Var>
                </ruleml:Expr>
              </ruleml:Expr>
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Permission iri="rioOnto:Permission">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":er">er</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2940">
                <ruleml:Rel iri="prOnto:request" />
                <ruleml:Var keyref=":er" />
                <ruleml:Var keyref=":n" />
                <ruleml:Var key=":j">j</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:judicialRemedy" />
                <ruleml:Var keyref=":j" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:relatedTo" />
                <ruleml:Var keyref=":j" />
                <ruleml:Var keyref=":d" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Permission>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements265Formula2">
      <!--
Permission:
(
	(rioOnto:RexistAtTime :erl :t1) & (prOnto:relatedTo' :erl :n :l) & (prOnto:legalPerson :l) & (prOnto:decisionOf :d prOnto:supAuth(prOnto:MSof(:y))),

	(rioOnto:RexistAtTime :er :t1) & (prOnto:request' :er :l :j) & (prOnto:judicialRemedy :j) & (prOnto:relatedTo :j :d)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":erl">erl</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2941">
              <ruleml:Rel iri="prOnto:relatedTo" />
              <ruleml:Var keyref=":erl" />
              <ruleml:Var key=":n">n</ruleml:Var>
              <ruleml:Var key=":l">l</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:legalPerson" />
              <ruleml:Var keyref=":l" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:decisionOf" />
              <ruleml:Var keyref=":d" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:supAuth" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:MSof" />
                  <ruleml:Var key=":y">y</ruleml:Var>
                </ruleml:Expr>
              </ruleml:Expr>
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Permission iri="rioOnto:Permission">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":er">er</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2942">
                <ruleml:Rel iri="prOnto:request" />
                <ruleml:Var keyref=":er" />
                <ruleml:Var keyref=":l" />
                <ruleml:Var key=":j">j</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:judicialRemedy" />
                <ruleml:Var keyref=":j" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:relatedTo" />
                <ruleml:Var keyref=":j" />
                <ruleml:Var keyref=":d" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Permission>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements266">
    <lrml:PrescriptiveStatement key="statements266Formula1">
      <!--
Permission:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :el :en) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:lodge' :el :w :c prOnto:supAuth(prOnto:MSof(:y))) & (prOnto:complaint :c) & (rioOnto:not :en :eas)
	 & (prOnto:assistFor' :eas prOnto:supAuth(prOnto:MSof(:y)) :w :el),

	(rioOnto:RexistAtTime :er :t1) & (prOnto:request' :er :w :j) & (prOnto:judicialRemedy :j) & (prOnto:relatedTo :j :en)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":el">el</ruleml:Var>
              <ruleml:Var key=":en">en</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2943">
              <ruleml:Rel iri="prOnto:lodge" />
              <ruleml:Var keyref=":el" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var key=":c">c</ruleml:Var>
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:supAuth" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:MSof" />
                  <ruleml:Var key=":y">y</ruleml:Var>
                </ruleml:Expr>
              </ruleml:Expr>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:complaint" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en" />
              <ruleml:Var key=":eas">eas</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2944">
              <ruleml:Rel iri="prOnto:assistFor" />
              <ruleml:Var keyref=":eas" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:supAuth" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:MSof" />
                  <ruleml:Var keyref=":y" />
                </ruleml:Expr>
              </ruleml:Expr>
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":el" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Permission iri="rioOnto:Permission">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":er">er</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2945">
                <ruleml:Rel iri="prOnto:request" />
                <ruleml:Var keyref=":er" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var key=":j">j</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:judicialRemedy" />
                <ruleml:Var keyref=":j" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:relatedTo" />
                <ruleml:Var keyref=":j" />
                <ruleml:Var keyref=":en" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Permission>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements266Formula2">
      <!--
Permission:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :el :en) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:lodge' :el :w :c prOnto:supAuth(prOnto:MSof(:y))) & (prOnto:complaint :c) & (rioOnto:RexistAtTime :eno :t2)
	 & (rioOnto:>= :t2 rioOnto:+(:t1, 3M)) & (rioOnto:not :eno :en) & (prOnto:Communicate' :en prOnto:supAuth(prOnto:MSof(:y)) :w prOnto:progressOf(:c)),

	(rioOnto:RexistAtTime :er :t2) & (prOnto:request' :er :w :j) & (prOnto:judicialRemedy :j) & (prOnto:relatedTo :j :en)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":el">el</ruleml:Var>
              <ruleml:Var key=":en">en</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2946">
              <ruleml:Rel iri="prOnto:lodge" />
              <ruleml:Var keyref=":el" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var key=":c">c</ruleml:Var>
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:supAuth" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:MSof" />
                  <ruleml:Var key=":y">y</ruleml:Var>
                </ruleml:Expr>
              </ruleml:Expr>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:complaint" />
              <ruleml:Var keyref=":c" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":eno">eno</ruleml:Var>
              <ruleml:Var key=":t2">t2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:&gt;=" />
              <ruleml:Var keyref=":t2" />
              <ruleml:Expr>
                <ruleml:Fun iri="rioOnto:+" />
                <ruleml:Var keyref=":t1" />
                <ruleml:Ind>3M</ruleml:Ind>
              </ruleml:Expr>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":eno" />
              <ruleml:Var key=":en">en</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2947">
              <ruleml:Rel iri="prOnto:Communicate" />
              <ruleml:Var keyref=":en" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:supAuth" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:MSof" />
                  <ruleml:Var keyref=":y" />
                </ruleml:Expr>
              </ruleml:Expr>
              <ruleml:Var keyref=":w" />
              <ruleml:Expr>
                <ruleml:Fun iri="prOnto:progressOf" />
                <ruleml:Var keyref=":c" />
              </ruleml:Expr>
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Permission iri="rioOnto:Permission">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":er">er</ruleml:Var>
                <ruleml:Var keyref=":t2" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2948">
                <ruleml:Rel iri="prOnto:request" />
                <ruleml:Var keyref=":er" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var key=":j">j</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:judicialRemedy" />
                <ruleml:Var keyref=":j" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:relatedTo" />
                <ruleml:Var keyref=":j" />
                <ruleml:Var keyref=":en" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Permission>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements267">
    <lrml:PrescriptiveStatement key="statements267Formula1">
      <!--
Permission:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :ev :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:violationOf' :ev :erf) & (prOnto:rightsAndFreedomsOf' :erf :w)
	 & (prOnto:relatedTo :erf :ep),

	(rioOnto:RexistAtTime :er :t1) & (prOnto:request' :er :w :j) & (prOnto:judicialRemedy :j) & (prOnto:relatedTo :j :ep)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":ev">ev</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2949">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2950">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2951">
              <ruleml:Rel iri="prOnto:violationOf" />
              <ruleml:Var keyref=":ev" />
              <ruleml:Var keyref=":erf" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2952">
              <ruleml:Rel iri="prOnto:rightsAndFreedomsOf" />
              <ruleml:Var keyref=":erf" />
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:relatedTo" />
              <ruleml:Var keyref=":erf" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Permission iri="rioOnto:Permission">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":er">er</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2953">
                <ruleml:Rel iri="prOnto:request" />
                <ruleml:Var keyref=":er" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var key=":j">j</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:judicialRemedy" />
                <ruleml:Var keyref=":j" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:relatedTo" />
                <ruleml:Var keyref=":j" />
                <ruleml:Var keyref=":ep" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Permission>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements268">
    <lrml:PrescriptiveStatement key="statements268Formula1">
      <!--
Permission:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z),

	(rioOnto:RexistAtTime :a2 :t1) & (rioOnto:and :a2 :ede :ecw :el) & (prOnto:mandate' :ede :w :k) & (prOnto:notForProfitBody :k)
	 & (prOnto:complyWith' :ecw :k prOnto:MSof(:w)) & (prOnto:relatedTo :k GDPR) & (prOnto:lodge' :el :k :c prOnto:supAuth(prOnto:MSof(:y)))
	 & (prOnto:complaint :c)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2954">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2955">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Permission iri="rioOnto:Permission">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":a2">a2</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:and" />
                <ruleml:Var keyref=":a2" />
                <ruleml:Var key=":ede">ede</ruleml:Var>
                <ruleml:Var key=":ecw">ecw</ruleml:Var>
                <ruleml:Var key=":el">el</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2956">
                <ruleml:Rel iri="prOnto:mandate" />
                <ruleml:Var keyref=":ede" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var key=":k">k</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:notForProfitBody" />
                <ruleml:Var keyref=":k" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2957">
                <ruleml:Rel iri="prOnto:complyWith" />
                <ruleml:Var keyref=":ecw" />
                <ruleml:Var keyref=":k" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:MSof" />
                  <ruleml:Var keyref=":w" />
                </ruleml:Expr>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:relatedTo" />
                <ruleml:Var keyref=":k" />
                <ruleml:Ind>GDPR</ruleml:Ind>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2958">
                <ruleml:Rel iri="prOnto:lodge" />
                <ruleml:Var keyref=":el" />
                <ruleml:Var keyref=":k" />
                <ruleml:Var key=":c">c</ruleml:Var>
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:supAuth" />
                  <ruleml:Expr>
                    <ruleml:Fun iri="prOnto:MSof" />
                    <ruleml:Var keyref=":y" />
                  </ruleml:Expr>
                </ruleml:Expr>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:complaint" />
                <ruleml:Var keyref=":c" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Permission>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements268Formula2">
      <!--
Permission:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z),

	(rioOnto:RexistAtTime :a2 :t1) & (rioOnto:and :a2 :ede :ecw :er :eor) & (prOnto:mandate' :ede :w :k) & (prOnto:notForProfitBody :k)
	 & (prOnto:complyWith' :ecw :k prOnto:MSof(:w)) & (prOnto:relatedTo :k GDPR) & (prOnto:request' :er :k :j)
	 & (prOnto:judicialRemedy :j) & (rioOnto:or :eor :er1 :er2 :er3) & (prOnto:relatedTo' :er1 :j :d)
	 & (prOnto:relatedTo' :er2 :j :eno1) & (prOnto:relatedTo' :er3 :j :eno2) & (prOnto:relatedTo' :er4 :j :ep)
	 & (prOnto:decisionOf :d prOnto:supAuth(prOnto:MSof(:y))) & (rioOnto:not :eno1 :eas) & (prOnto:assistFor' :eas prOnto:supAuth(prOnto:MSof(:y)) :w :el)
	 & (prOnto:lodge' :el :w :c prOnto:supAuth(prOnto:MSof(:y))) & (prOnto:complaint :c) & (rioOnto:not :eno2 :en)
	 & (prOnto:Communicate' :en prOnto:supAuth(prOnto:MSof(:y)) :w prOnto:progressOf(:c))
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2959">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2960">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Permission iri="rioOnto:Permission">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":a2">a2</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:and" />
                <ruleml:Var keyref=":a2" />
                <ruleml:Var key=":ede">ede</ruleml:Var>
                <ruleml:Var key=":ecw">ecw</ruleml:Var>
                <ruleml:Var key=":er">er</ruleml:Var>
                <ruleml:Var key=":eor">eor</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2961">
                <ruleml:Rel iri="prOnto:mandate" />
                <ruleml:Var keyref=":ede" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var key=":k">k</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:notForProfitBody" />
                <ruleml:Var keyref=":k" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2962">
                <ruleml:Rel iri="prOnto:complyWith" />
                <ruleml:Var keyref=":ecw" />
                <ruleml:Var keyref=":k" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:MSof" />
                  <ruleml:Var keyref=":w" />
                </ruleml:Expr>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:relatedTo" />
                <ruleml:Var keyref=":k" />
                <ruleml:Ind>GDPR</ruleml:Ind>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2963">
                <ruleml:Rel iri="prOnto:request" />
                <ruleml:Var keyref=":er" />
                <ruleml:Var keyref=":k" />
                <ruleml:Var key=":j">j</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:judicialRemedy" />
                <ruleml:Var keyref=":j" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:or" />
                <ruleml:Var keyref=":eor" />
                <ruleml:Var key=":er1">er1</ruleml:Var>
                <ruleml:Var key=":er2">er2</ruleml:Var>
                <ruleml:Var key=":er3">er3</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2964">
                <ruleml:Rel iri="prOnto:relatedTo" />
                <ruleml:Var keyref=":er1" />
                <ruleml:Var keyref=":j" />
                <ruleml:Var key=":d">d</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2965">
                <ruleml:Rel iri="prOnto:relatedTo" />
                <ruleml:Var keyref=":er2" />
                <ruleml:Var keyref=":j" />
                <ruleml:Var key=":eno1">eno1</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2966">
                <ruleml:Rel iri="prOnto:relatedTo" />
                <ruleml:Var keyref=":er3" />
                <ruleml:Var keyref=":j" />
                <ruleml:Var key=":eno2">eno2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2967">
                <ruleml:Rel iri="prOnto:relatedTo" />
                <ruleml:Var keyref=":er4" />
                <ruleml:Var keyref=":j" />
                <ruleml:Var key=":ep">ep</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:decisionOf" />
                <ruleml:Var keyref=":d" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:supAuth" />
                  <ruleml:Expr>
                    <ruleml:Fun iri="prOnto:MSof" />
                    <ruleml:Var keyref=":y" />
                  </ruleml:Expr>
                </ruleml:Expr>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:not" />
                <ruleml:Var keyref=":eno1" />
                <ruleml:Var key=":eas">eas</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2968">
                <ruleml:Rel iri="prOnto:assistFor" />
                <ruleml:Var keyref=":eas" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:supAuth" />
                  <ruleml:Expr>
                    <ruleml:Fun iri="prOnto:MSof" />
                    <ruleml:Var keyref=":y" />
                  </ruleml:Expr>
                </ruleml:Expr>
                <ruleml:Var keyref=":w" />
                <ruleml:Var key=":el">el</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2969">
                <ruleml:Rel iri="prOnto:lodge" />
                <ruleml:Var keyref=":el" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var key=":c">c</ruleml:Var>
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:supAuth" />
                  <ruleml:Expr>
                    <ruleml:Fun iri="prOnto:MSof" />
                    <ruleml:Var keyref=":y" />
                  </ruleml:Expr>
                </ruleml:Expr>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:complaint" />
                <ruleml:Var keyref=":c" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:not" />
                <ruleml:Var keyref=":eno2" />
                <ruleml:Var key=":en">en</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2970">
                <ruleml:Rel iri="prOnto:Communicate" />
                <ruleml:Var keyref=":en" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:supAuth" />
                  <ruleml:Expr>
                    <ruleml:Fun iri="prOnto:MSof" />
                    <ruleml:Var keyref=":y" />
                  </ruleml:Expr>
                </ruleml:Expr>
                <ruleml:Var keyref=":w" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:progressOf" />
                  <ruleml:Var keyref=":c" />
                </ruleml:Expr>
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Permission>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements268Formula3">
      <!--
Permission:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z),

	(rioOnto:RexistAtTime :a2 :t1) & (rioOnto:and :a2 :ede :ecw :er) & (prOnto:mandate' :ede :w :k) & (prOnto:notForProfitBody :k)
	 & (prOnto:complyWith' :ecw :k prOnto:MSof(:w)) & (prOnto:relatedTo :k GDPR) & (prOnto:request' :er :k :erf)
	 & (prOnto:receiveFrom' :erf :w :ecf :y) & (prOnto:compensationFor :ecf :evf) & (prOnto:violationOf' :evf GDPR)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2971">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2972">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Permission iri="rioOnto:Permission">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":a2">a2</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:and" />
                <ruleml:Var keyref=":a2" />
                <ruleml:Var key=":ede">ede</ruleml:Var>
                <ruleml:Var key=":ecw">ecw</ruleml:Var>
                <ruleml:Var key=":er">er</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2973">
                <ruleml:Rel iri="prOnto:mandate" />
                <ruleml:Var keyref=":ede" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var key=":k">k</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:notForProfitBody" />
                <ruleml:Var keyref=":k" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2974">
                <ruleml:Rel iri="prOnto:complyWith" />
                <ruleml:Var keyref=":ecw" />
                <ruleml:Var keyref=":k" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:MSof" />
                  <ruleml:Var keyref=":w" />
                </ruleml:Expr>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:relatedTo" />
                <ruleml:Var keyref=":k" />
                <ruleml:Ind>GDPR</ruleml:Ind>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2975">
                <ruleml:Rel iri="prOnto:request" />
                <ruleml:Var keyref=":er" />
                <ruleml:Var keyref=":k" />
                <ruleml:Var key=":erf">erf</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2976">
                <ruleml:Rel iri="prOnto:receiveFrom" />
                <ruleml:Var keyref=":erf" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var key=":ecf">ecf</ruleml:Var>
                <ruleml:Var keyref=":y" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:compensationFor" />
                <ruleml:Var keyref=":ecf" />
                <ruleml:Var key=":evf">evf</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2977">
                <ruleml:Rel iri="prOnto:violationOf" />
                <ruleml:Var keyref=":evf" />
                <ruleml:Ind>GDPR</ruleml:Ind>
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Permission>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements268Formula4">
      <!--
Permission:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z),

	(rioOnto:RexistAtTime :a2 :t1) & (rioOnto:and :a2 :ede :ecw :er) & (prOnto:mandate' :ede :w :k) & (prOnto:notForProfitBody :k)
	 & (prOnto:complyWith' :ecw :k prOnto:MSof(:w)) & (prOnto:relatedTo :k GDPR) & (prOnto:request' :er :k :erf)
	 & (prOnto:receiveFrom' :erf :w :ecf :x) & (prOnto:compensationFor :ecf :evf) & (prOnto:violationOf' :evf GDPR)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2978">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2979">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Permission iri="rioOnto:Permission">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":a2">a2</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:and" />
                <ruleml:Var keyref=":a2" />
                <ruleml:Var key=":ede">ede</ruleml:Var>
                <ruleml:Var key=":ecw">ecw</ruleml:Var>
                <ruleml:Var key=":er">er</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2980">
                <ruleml:Rel iri="prOnto:mandate" />
                <ruleml:Var keyref=":ede" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var key=":k">k</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:notForProfitBody" />
                <ruleml:Var keyref=":k" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2981">
                <ruleml:Rel iri="prOnto:complyWith" />
                <ruleml:Var keyref=":ecw" />
                <ruleml:Var keyref=":k" />
                <ruleml:Expr>
                  <ruleml:Fun iri="prOnto:MSof" />
                  <ruleml:Var keyref=":w" />
                </ruleml:Expr>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:relatedTo" />
                <ruleml:Var keyref=":k" />
                <ruleml:Ind>GDPR</ruleml:Ind>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2982">
                <ruleml:Rel iri="prOnto:request" />
                <ruleml:Var keyref=":er" />
                <ruleml:Var keyref=":k" />
                <ruleml:Var key=":erf">erf</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2983">
                <ruleml:Rel iri="prOnto:receiveFrom" />
                <ruleml:Var keyref=":erf" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var key=":ecf">ecf</ruleml:Var>
                <ruleml:Var keyref=":x" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:compensationFor" />
                <ruleml:Var keyref=":ecf" />
                <ruleml:Var key=":evf">evf</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2984">
                <ruleml:Rel iri="prOnto:violationOf" />
                <ruleml:Var keyref=":evf" />
                <ruleml:Ind>GDPR</ruleml:Ind>
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Permission>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements269">
    <lrml:PrescriptiveStatement key="statements269Formula1">
      <!--
Permission:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :er1 :evf :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:damage :d) & (prOnto:receiveFrom' :er1 :w :d :evf)
	 & (prOnto:violationOf' :evf GDPR),

	(rioOnto:RexistAtTime :er :t1) & (prOnto:request' :er :y :er2) & (prOnto:receiveFrom' :er2 :w :ecf :y) & (prOnto:compensationFor :ecf :evf)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":er1">er1</ruleml:Var>
              <ruleml:Var key=":evf">evf</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2985">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2986">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:damage" />
              <ruleml:Var key=":d">d</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2987">
              <ruleml:Rel iri="prOnto:receiveFrom" />
              <ruleml:Var keyref=":er1" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":d" />
              <ruleml:Var keyref=":evf" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2988">
              <ruleml:Rel iri="prOnto:violationOf" />
              <ruleml:Var keyref=":evf" />
              <ruleml:Ind>GDPR</ruleml:Ind>
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Permission iri="rioOnto:Permission">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":er">er</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2989">
                <ruleml:Rel iri="prOnto:request" />
                <ruleml:Var keyref=":er" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var key=":er2">er2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2990">
                <ruleml:Rel iri="prOnto:receiveFrom" />
                <ruleml:Var keyref=":er2" />
                <ruleml:Var keyref=":w" />
                <ruleml:Var key=":ecf">ecf</ruleml:Var>
                <ruleml:Var keyref=":y" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:compensationFor" />
                <ruleml:Var keyref=":ecf" />
                <ruleml:Var keyref=":evf" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Permission>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements270">
    <lrml:PrescriptiveStatement key="statements270Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :er1 :evf :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:damage :d) & (prOnto:receiveFrom' :er1 :w :d :evf)
	 & (prOnto:violationOf' :evf GDPR) & (rioOnto:exceptionCha8Art82Par2 :d) & (rioOnto:exceptionCha8Art82Par3 :y),

	(rioOnto:RexistAtTime :erf :t1) & (prOnto:responsibleFor' :erf :y :d)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":er1">er1</ruleml:Var>
              <ruleml:Var key=":evf">evf</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2991">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2992">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:damage" />
              <ruleml:Var key=":d">d</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2993">
              <ruleml:Rel iri="prOnto:receiveFrom" />
              <ruleml:Var keyref=":er1" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":d" />
              <ruleml:Var keyref=":evf" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2994">
              <ruleml:Rel iri="prOnto:violationOf" />
              <ruleml:Var keyref=":evf" />
              <ruleml:Ind>GDPR</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha8Art82Par2" />
                <ruleml:Var keyref=":d" />
              </ruleml:Atom>
            </ruleml:Naf>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha8Art82Par3" />
                <ruleml:Var keyref=":y" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":erf">erf</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A2995">
                <ruleml:Rel iri="prOnto:responsibleFor" />
                <ruleml:Var keyref=":erf" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":d" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:ConstitutiveStatement key="statements270Formula2">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :er1 :evf :eor :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:damage :d) & (prOnto:receiveFrom' :er1 :w :d :evf)
	 & (prOnto:violationOf' :evf GDPR) & (rioOnto:or :eor :en1 :en2) & (rioOnto:not :en1 :ec1)
	 & (prOnto:complyWith' :ec1 :x GDPRx) & (rioOnto:partOf GDPRx GDPR) & (prOnto:relatedTo GDPRx :x)
	 & (rioOnto:not :en2 :ec2) & (prOnto:complyWith' :ec2 :x :ery) & (prOnto:request' :ery :y :e)
	 & (prOnto:relatedTo :e GDPR) & (prOnto:lawful :e),

	(rioOnto:exceptionCha8Art82Par2 :d)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":er1">er1</ruleml:Var>
              <ruleml:Var key=":evf">evf</ruleml:Var>
              <ruleml:Var key=":eor">eor</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2996">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2997">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:damage" />
              <ruleml:Var key=":d">d</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2998">
              <ruleml:Rel iri="prOnto:receiveFrom" />
              <ruleml:Var keyref=":er1" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":d" />
              <ruleml:Var keyref=":evf" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A2999">
              <ruleml:Rel iri="prOnto:violationOf" />
              <ruleml:Var keyref=":evf" />
              <ruleml:Ind>GDPR</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eor" />
              <ruleml:Var key=":en1">en1</ruleml:Var>
              <ruleml:Var key=":en2">en2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en1" />
              <ruleml:Var key=":ec1">ec1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A3000">
              <ruleml:Rel iri="prOnto:complyWith" />
              <ruleml:Var keyref=":ec1" />
              <ruleml:Var key=":x">x</ruleml:Var>
              <ruleml:Ind>GDPRx</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:partOf" />
              <ruleml:Ind>GDPRx</ruleml:Ind>
              <ruleml:Ind>GDPR</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:relatedTo" />
              <ruleml:Ind>GDPRx</ruleml:Ind>
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en2" />
              <ruleml:Var key=":ec2">ec2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A3001">
              <ruleml:Rel iri="prOnto:complyWith" />
              <ruleml:Var keyref=":ec2" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var key=":ery">ery</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A3002">
              <ruleml:Rel iri="prOnto:request" />
              <ruleml:Var keyref=":ery" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var key=":e">e</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:relatedTo" />
              <ruleml:Var keyref=":e" />
              <ruleml:Ind>GDPR</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:lawful" />
              <ruleml:Var keyref=":e" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:exceptionCha8Art82Par2" />
              <ruleml:Var keyref=":d" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
    <lrml:PrescriptiveStatement key="statements270Formula3">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :er1 :evf :eor :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:damage :d) & (prOnto:receiveFrom' :er1 :w :d :evf)
	 & (prOnto:violationOf' :evf GDPR) & (rioOnto:or :eor :en1 :en2) & (rioOnto:not :en1 :ec1)
	 & (prOnto:complyWith' :ec1 :x GDPRx) & (rioOnto:partOf GDPRx GDPR) & (prOnto:relatedTo GDPRx :x)
	 & (rioOnto:not :en2 :ec2) & (prOnto:complyWith' :ec2 :x :ery) & (prOnto:request' :ery :y :e)
	 & (prOnto:relatedTo :e GDPR) & (prOnto:lawful :e) & (rioOnto:exceptionCha8Art82Par3 :x),

	(rioOnto:RexistAtTime :erf :t1) & (prOnto:responsibleFor' :erf :x :d)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":er1">er1</ruleml:Var>
              <ruleml:Var key=":evf">evf</ruleml:Var>
              <ruleml:Var key=":eor">eor</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A3003">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A3004">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:damage" />
              <ruleml:Var key=":d">d</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A3005">
              <ruleml:Rel iri="prOnto:receiveFrom" />
              <ruleml:Var keyref=":er1" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":d" />
              <ruleml:Var keyref=":evf" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A3006">
              <ruleml:Rel iri="prOnto:violationOf" />
              <ruleml:Var keyref=":evf" />
              <ruleml:Ind>GDPR</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eor" />
              <ruleml:Var key=":en1">en1</ruleml:Var>
              <ruleml:Var key=":en2">en2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en1" />
              <ruleml:Var key=":ec1">ec1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A3007">
              <ruleml:Rel iri="prOnto:complyWith" />
              <ruleml:Var keyref=":ec1" />
              <ruleml:Var key=":x">x</ruleml:Var>
              <ruleml:Ind>GDPRx</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:partOf" />
              <ruleml:Ind>GDPRx</ruleml:Ind>
              <ruleml:Ind>GDPR</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:relatedTo" />
              <ruleml:Ind>GDPRx</ruleml:Ind>
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en2" />
              <ruleml:Var key=":ec2">ec2</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A3008">
              <ruleml:Rel iri="prOnto:complyWith" />
              <ruleml:Var keyref=":ec2" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var key=":ery">ery</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A3009">
              <ruleml:Rel iri="prOnto:request" />
              <ruleml:Var keyref=":ery" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var key=":e">e</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:relatedTo" />
              <ruleml:Var keyref=":e" />
              <ruleml:Ind>GDPR</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:lawful" />
              <ruleml:Var keyref=":e" />
            </ruleml:Atom>
            <ruleml:Naf>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:exceptionCha8Art82Par3" />
                <ruleml:Var keyref=":x" />
              </ruleml:Atom>
            </ruleml:Naf>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":erf">erf</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A3010">
                <ruleml:Rel iri="prOnto:responsibleFor" />
                <ruleml:Var keyref=":erf" />
                <ruleml:Var keyref=":x" />
                <ruleml:Var key=":d">d</ruleml:Var>
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements271">
    <lrml:ConstitutiveStatement key="statements271Formula1">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :er1 :evf :en :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:damage :d) & (prOnto:receiveFrom' :er1 :w :d :evf)
	 & (prOnto:violationOf' :evf GDPR) & (rioOnto:not :en :ert) & (prOnto:relatedTo' :ert :y :e)
	 & (rioOnto:cause :e :evf),

	(rioOnto:exceptionCha8Art82Par3 :y)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":er1">er1</ruleml:Var>
              <ruleml:Var key=":evf">evf</ruleml:Var>
              <ruleml:Var key=":en">en</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A3011">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A3012">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:damage" />
              <ruleml:Var key=":d">d</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A3013">
              <ruleml:Rel iri="prOnto:receiveFrom" />
              <ruleml:Var keyref=":er1" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":d" />
              <ruleml:Var keyref=":evf" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A3014">
              <ruleml:Rel iri="prOnto:violationOf" />
              <ruleml:Var keyref=":evf" />
              <ruleml:Ind>GDPR</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en" />
              <ruleml:Var key=":ert">ert</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A3015">
              <ruleml:Rel iri="prOnto:relatedTo" />
              <ruleml:Var keyref=":ert" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":e">e</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:cause" />
              <ruleml:Var keyref=":e" />
              <ruleml:Var keyref=":evf" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:exceptionCha8Art82Par3" />
              <ruleml:Var keyref=":y" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
    <lrml:ConstitutiveStatement key="statements271Formula2">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :er1 :evf :en :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:damage :d) & (prOnto:receiveFrom' :er1 :w :d :evf)
	 & (prOnto:violationOf' :evf GDPR) & (rioOnto:not :en :ert) & (prOnto:relatedTo' :ert :x :e)
	 & (rioOnto:cause :e :evf),

	(rioOnto:exceptionCha8Art82Par3 :x)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":er1">er1</ruleml:Var>
              <ruleml:Var key=":evf">evf</ruleml:Var>
              <ruleml:Var key=":en">en</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A3016">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A3017">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:damage" />
              <ruleml:Var key=":d">d</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A3018">
              <ruleml:Rel iri="prOnto:receiveFrom" />
              <ruleml:Var keyref=":er1" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":d" />
              <ruleml:Var keyref=":evf" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A3019">
              <ruleml:Rel iri="prOnto:violationOf" />
              <ruleml:Var keyref=":evf" />
              <ruleml:Ind>GDPR</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en" />
              <ruleml:Var key=":ert">ert</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A3020">
              <ruleml:Rel iri="prOnto:relatedTo" />
              <ruleml:Var keyref=":ert" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var key=":e">e</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:cause" />
              <ruleml:Var keyref=":e" />
              <ruleml:Var keyref=":evf" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:exceptionCha8Art82Par3" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements272">
    <lrml:ConstitutiveStatement key="statements272Formula1">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :er1 :evf :erf1 :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:damage :d) & (prOnto:receiveFrom' :er1 :w :d :evf)
	 & (prOnto:violationOf' :evf GDPR) & (prOnto:responsibleFor' :erf1 :y :dp) & (rioOnto:partOf :dp :d),

	(rioOnto:RexistAtTime :erf2 :t1) & (prOnto:responsibleFor' :erf2 :y :d)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":er1">er1</ruleml:Var>
              <ruleml:Var key=":evf">evf</ruleml:Var>
              <ruleml:Var key=":erf1">erf1</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A3021">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A3022">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:damage" />
              <ruleml:Var key=":d">d</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A3023">
              <ruleml:Rel iri="prOnto:receiveFrom" />
              <ruleml:Var keyref=":er1" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":d" />
              <ruleml:Var keyref=":evf" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A3024">
              <ruleml:Rel iri="prOnto:violationOf" />
              <ruleml:Var keyref=":evf" />
              <ruleml:Ind>GDPR</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A3025">
              <ruleml:Rel iri="prOnto:responsibleFor" />
              <ruleml:Var keyref=":erf1" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var key=":dp">dp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:partOf" />
              <ruleml:Var keyref=":dp" />
              <ruleml:Var keyref=":d" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":erf2">erf2</ruleml:Var>
              <ruleml:Var keyref=":t1" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A3026">
              <ruleml:Rel iri="prOnto:responsibleFor" />
              <ruleml:Var keyref=":erf2" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":d" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
    <lrml:ConstitutiveStatement key="statements272Formula2">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :er1 :evf :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:damage :d) & (prOnto:receiveFrom' :er1 :w :d :evf)
	 & (prOnto:violationOf' :evf GDPR) & (prOnto:responsibleFor' :erf1 :x :dp) & (rioOnto:partOf :dp :d),

	(rioOnto:RexistAtTime :erf2 :t1) & (prOnto:responsibleFor' :erf2 :x :d)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":er1">er1</ruleml:Var>
              <ruleml:Var key=":evf">evf</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A3027">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A3028">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:damage" />
              <ruleml:Var key=":d">d</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A3029">
              <ruleml:Rel iri="prOnto:receiveFrom" />
              <ruleml:Var keyref=":er1" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":d" />
              <ruleml:Var keyref=":evf" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A3030">
              <ruleml:Rel iri="prOnto:violationOf" />
              <ruleml:Var keyref=":evf" />
              <ruleml:Ind>GDPR</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A3031">
              <ruleml:Rel iri="prOnto:responsibleFor" />
              <ruleml:Var keyref=":erf1" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var key=":dp">dp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:partOf" />
              <ruleml:Var keyref=":dp" />
              <ruleml:Var keyref=":d" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":erf2">erf2</ruleml:Var>
              <ruleml:Var keyref=":t1" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A3032">
              <ruleml:Rel iri="prOnto:responsibleFor" />
              <ruleml:Var keyref=":erf2" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":d" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements273">
    <lrml:PrescriptiveStatement key="statements273Formula1">
      <!--
Permission:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :er1 :evf :epa :erf :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:damage :d) & (prOnto:receiveFrom' :er1 :w :d :evf)
	 & (prOnto:violationOf' :evf GDPR) & (prOnto:payFor' :epa :y :d) & (prOnto:responsibleFor' :erf :k :dp)
	 & (rioOnto:partOf :dp :d),

	(rioOnto:RexistAtTime :er :t1) & (prOnto:request' :er :y :epa2) & (prOnto:payFor' :epa2 :k :dp)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":er1">er1</ruleml:Var>
              <ruleml:Var key=":evf">evf</ruleml:Var>
              <ruleml:Var key=":epa">epa</ruleml:Var>
              <ruleml:Var key=":erf">erf</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A3033">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A3034">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:damage" />
              <ruleml:Var key=":d">d</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A3035">
              <ruleml:Rel iri="prOnto:receiveFrom" />
              <ruleml:Var keyref=":er1" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":d" />
              <ruleml:Var keyref=":evf" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A3036">
              <ruleml:Rel iri="prOnto:violationOf" />
              <ruleml:Var keyref=":evf" />
              <ruleml:Ind>GDPR</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A3037">
              <ruleml:Rel iri="prOnto:payFor" />
              <ruleml:Var keyref=":epa" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":d" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A3038">
              <ruleml:Rel iri="prOnto:responsibleFor" />
              <ruleml:Var keyref=":erf" />
              <ruleml:Var key=":k">k</ruleml:Var>
              <ruleml:Var key=":dp">dp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:partOf" />
              <ruleml:Var keyref=":dp" />
              <ruleml:Var keyref=":d" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Permission iri="rioOnto:Permission">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":er">er</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A3039">
                <ruleml:Rel iri="prOnto:request" />
                <ruleml:Var keyref=":er" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var key=":epa2">epa2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A3040">
                <ruleml:Rel iri="prOnto:payFor" />
                <ruleml:Var keyref=":epa2" />
                <ruleml:Var keyref=":k" />
                <ruleml:Var keyref=":dp" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Permission>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements273Formula2">
      <!--
Permission:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :er1 :evf :epa :erf :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (prOnto:damage :d) & (prOnto:receiveFrom' :er1 :w :d :evf)
	 & (prOnto:violationOf' :evf GDPR) & (prOnto:payFor' :epa :x :d) & (prOnto:responsibleFor' :erf :k :dp)
	 & (rioOnto:partOf :dp :d),

	(rioOnto:RexistAtTime :er :t1) & (prOnto:request' :er :x :epa2) & (prOnto:payFor' :epa2 :k :dp)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":er1">er1</ruleml:Var>
              <ruleml:Var key=":evf">evf</ruleml:Var>
              <ruleml:Var key=":epa">epa</ruleml:Var>
              <ruleml:Var key=":erf">erf</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A3041">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A3042">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:damage" />
              <ruleml:Var key=":d">d</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A3043">
              <ruleml:Rel iri="prOnto:receiveFrom" />
              <ruleml:Var keyref=":er1" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":d" />
              <ruleml:Var keyref=":evf" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A3044">
              <ruleml:Rel iri="prOnto:violationOf" />
              <ruleml:Var keyref=":evf" />
              <ruleml:Ind>GDPR</ruleml:Ind>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A3045">
              <ruleml:Rel iri="prOnto:payFor" />
              <ruleml:Var keyref=":epa" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":d" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A3046">
              <ruleml:Rel iri="prOnto:responsibleFor" />
              <ruleml:Var keyref=":erf" />
              <ruleml:Var key=":k">k</ruleml:Var>
              <ruleml:Var key=":dp">dp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:partOf" />
              <ruleml:Var keyref=":dp" />
              <ruleml:Var keyref=":d" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Permission iri="rioOnto:Permission">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":er">er</ruleml:Var>
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A3047">
                <ruleml:Rel iri="prOnto:request" />
                <ruleml:Var keyref=":er" />
                <ruleml:Var keyref=":x" />
                <ruleml:Var key=":epa2">epa2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A3048">
                <ruleml:Rel iri="prOnto:payFor" />
                <ruleml:Var keyref=":epa2" />
                <ruleml:Var keyref=":k" />
                <ruleml:Var keyref=":dp" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Permission>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements274">
    <lrml:PrescriptiveStatement key="statements274Formula1">
      <!--
Permission:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :eh :ert :pi) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:documentation :d) & (prOnto:hold' :eh :p :d) & (rioOnto:partOf :z :d)
	 & (prOnto:PersonalDataProcessing' :ep :k :d) & (prOnto:Judicial :epu) & (prOnto:isBasedOn :ep :epu),

	(rioOnto:RexistAtTime :ed :t2) & (rioOnto:>= :t2 :t1) & (prOnto:disclosure' :ed :p :z)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":eh">eh</ruleml:Var>
              <ruleml:Var key=":ert">ert</ruleml:Var>
              <ruleml:Var key=":pi">pi</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:documentation" />
              <ruleml:Var key=":d">d</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A3049">
              <ruleml:Rel iri="prOnto:hold" />
              <ruleml:Var keyref=":eh" />
              <ruleml:Var key=":p">p</ruleml:Var>
              <ruleml:Var keyref=":d" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:partOf" />
              <ruleml:Var keyref=":z" />
              <ruleml:Var keyref=":d" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A3050">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var key=":k">k</ruleml:Var>
              <ruleml:Var keyref=":d" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Judicial" />
              <ruleml:Var key=":epu">epu</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:isBasedOn" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":epu" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Permission iri="rioOnto:Permission">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":ed">ed</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t2" />
                <ruleml:Var keyref=":t1" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A3051">
                <ruleml:Rel iri="prOnto:disclosure" />
                <ruleml:Var keyref=":ed" />
                <ruleml:Var keyref=":p" />
                <ruleml:Var keyref=":z" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Permission>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
  </lrml:Statements>
  <lrml:Statements key="statements275">
    <lrml:PrescriptiveStatement key="statements275Formula1">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :eor :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (rioOnto:or :eor :ebo1 :ebo2 :ebo3) & (prOnto:isBasedOn' :ebo1 :ep :epi)
	 & (prOnto:PublicInterest :epi) & (prOnto:isBasedOn' :ebo2 :ep :ers) & (prOnto:Research :ers)
	 & (prOnto:isBasedOn' :ebo3 :ep :est) & (prOnto:Statistic :est),

	(rioOnto:RexistAtTime :a2 :t2) & (rioOnto:>= :t1 :t2) & (rioOnto:and :a2 :ei :ec1 :ec2) & (prOnto:measure :em)
	 & (prOnto:implement' :ei :y :em) & (rioOnto:cause' :ec1 :em :epu) & (rioOnto:cause' :ec2 :em :ea)
	 & (rioOnto:and :ea :en :elt) & (rioOnto:not :en :er) & (prOnto:riskFor' :er :erf)
	 & (prOnto:rightsAndFreedomsOf' :erf :w) & (prOnto:limitedTo' :elt :ep :epu)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":eor">eor</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A3052">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A3053">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eor" />
              <ruleml:Var key=":ebo1">ebo1</ruleml:Var>
              <ruleml:Var key=":ebo2">ebo2</ruleml:Var>
              <ruleml:Var key=":ebo3">ebo3</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A3054">
              <ruleml:Rel iri="prOnto:isBasedOn" />
              <ruleml:Var keyref=":ebo1" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var key=":epi">epi</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PublicInterest" />
              <ruleml:Var keyref=":epi" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A3055">
              <ruleml:Rel iri="prOnto:isBasedOn" />
              <ruleml:Var keyref=":ebo2" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var key=":ers">ers</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Research" />
              <ruleml:Var keyref=":ers" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A3056">
              <ruleml:Rel iri="prOnto:isBasedOn" />
              <ruleml:Var keyref=":ebo3" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var key=":est">est</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Statistic" />
              <ruleml:Var keyref=":est" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var key=":a2">a2</ruleml:Var>
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t1" />
                <ruleml:Var keyref=":t2" />
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:and" />
                <ruleml:Var keyref=":a2" />
                <ruleml:Var key=":ei">ei</ruleml:Var>
                <ruleml:Var key=":ec1">ec1</ruleml:Var>
                <ruleml:Var key=":ec2">ec2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="prOnto:measure" />
                <ruleml:Var key=":em">em</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A3057">
                <ruleml:Rel iri="prOnto:implement" />
                <ruleml:Var keyref=":ei" />
                <ruleml:Var keyref=":y" />
                <ruleml:Var keyref=":em" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A3058">
                <ruleml:Rel iri="rioOnto:cause" />
                <ruleml:Var keyref=":ec1" />
                <ruleml:Var keyref=":em" />
                <ruleml:Var keyref=":epu" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A3059">
                <ruleml:Rel iri="rioOnto:cause" />
                <ruleml:Var keyref=":ec2" />
                <ruleml:Var keyref=":em" />
                <ruleml:Var key=":ea">ea</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:and" />
                <ruleml:Var keyref=":ea" />
                <ruleml:Var key=":en">en</ruleml:Var>
                <ruleml:Var key=":elt">elt</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:not" />
                <ruleml:Var keyref=":en" />
                <ruleml:Var key=":er">er</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A3060">
                <ruleml:Rel iri="prOnto:riskFor" />
                <ruleml:Var keyref=":er" />
                <ruleml:Var key=":erf">erf</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom keyref=":A3061">
                <ruleml:Rel iri="prOnto:rightsAndFreedomsOf" />
                <ruleml:Var keyref=":erf" />
                <ruleml:Var keyref=":w" />
              </ruleml:Atom>
              <ruleml:Atom keyref=":A3062">
                <ruleml:Rel iri="prOnto:limitedTo" />
                <ruleml:Var keyref=":elt" />
                <ruleml:Var keyref=":ep" />
                <ruleml:Var keyref=":epu" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:PrescriptiveStatement key="statements275Formula2">
      <!--
Obligation:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :eor :eca :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (rioOnto:or :eor :ebo1 :ebo2 :ebo3) & (prOnto:isBasedOn' :ebo1 :ep :epi)
	 & (prOnto:PublicInterest :epi) & (prOnto:isBasedOn' :ebo2 :ep :ers) & (prOnto:Research :ers)
	 & (prOnto:isBasedOn' :ebo3 :ep :est) & (prOnto:Statistic :est) & (prOnto:measure :em)
	 & (prOnto:implement' :ei :y :em) & (rioOnto:cause' :ec1 :em :epu) & (rioOnto:cause' :ec2 :em :en)
	 & (rioOnto:not :en :eif) & (prOnto:identifiableFrom' :eif :w :z),

	(rioOnto:RexistAtTime :ei :t2) & (rioOnto:>= :t1 :t2)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":eor">eor</ruleml:Var>
              <ruleml:Var key=":eca">eca</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A3063">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A3064">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eor" />
              <ruleml:Var key=":ebo1">ebo1</ruleml:Var>
              <ruleml:Var key=":ebo2">ebo2</ruleml:Var>
              <ruleml:Var key=":ebo3">ebo3</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A3065">
              <ruleml:Rel iri="prOnto:isBasedOn" />
              <ruleml:Var keyref=":ebo1" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var key=":epi">epi</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PublicInterest" />
              <ruleml:Var keyref=":epi" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A3066">
              <ruleml:Rel iri="prOnto:isBasedOn" />
              <ruleml:Var keyref=":ebo2" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var key=":ers">ers</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Research" />
              <ruleml:Var keyref=":ers" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A3067">
              <ruleml:Rel iri="prOnto:isBasedOn" />
              <ruleml:Var keyref=":ebo3" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var key=":est">est</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Statistic" />
              <ruleml:Var keyref=":est" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:measure" />
              <ruleml:Var key=":em">em</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A3068">
              <ruleml:Rel iri="prOnto:implement" />
              <ruleml:Var key=":ei">ei</ruleml:Var>
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A3069">
              <ruleml:Rel iri="rioOnto:cause" />
              <ruleml:Var key=":ec1">ec1</ruleml:Var>
              <ruleml:Var keyref=":em" />
              <ruleml:Var keyref=":epu" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A3070">
              <ruleml:Rel iri="rioOnto:cause" />
              <ruleml:Var key=":ec2">ec2</ruleml:Var>
              <ruleml:Var keyref=":em" />
              <ruleml:Var key=":en">en</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en" />
              <ruleml:Var key=":eif">eif</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A3071">
              <ruleml:Rel iri="prOnto:identifiableFrom" />
              <ruleml:Var keyref=":eif" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <lrml:Obligation iri="rioOnto:Obligation">
            <ruleml:And>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:RexistAtTime" />
                <ruleml:Var keyref=":ei" />
                <ruleml:Var key=":t2">t2</ruleml:Var>
              </ruleml:Atom>
              <ruleml:Atom>
                <ruleml:Rel iri="rioOnto:&gt;=" />
                <ruleml:Var keyref=":t1" />
                <ruleml:Var keyref=":t2" />
              </ruleml:Atom>
            </ruleml:And>
          </lrml:Obligation>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:PrescriptiveStatement>
    <lrml:ConstitutiveStatement key="statements275Formula3">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :eor :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (rioOnto:or :eor :ebo1 :ebo2 :ebo3) & (prOnto:isBasedOn' :ebo1 :ep :epi)
	 & (prOnto:PublicInterest :epi) & (prOnto:isBasedOn' :ebo2 :ep :ers) & (prOnto:Research :ers)
	 & (prOnto:isBasedOn' :ebo3 :ep :est) & (prOnto:Statistic :est),

	(rioOnto:exceptionCha2Art9Par2 :ep)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":eor">eor</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A3072">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A3073">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eor" />
              <ruleml:Var key=":ebo1">ebo1</ruleml:Var>
              <ruleml:Var key=":ebo2">ebo2</ruleml:Var>
              <ruleml:Var key=":ebo3">ebo3</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A3074">
              <ruleml:Rel iri="prOnto:isBasedOn" />
              <ruleml:Var keyref=":ebo1" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var key=":epi">epi</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PublicInterest" />
              <ruleml:Var keyref=":epi" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A3075">
              <ruleml:Rel iri="prOnto:isBasedOn" />
              <ruleml:Var keyref=":ebo2" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var key=":ers">ers</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Research" />
              <ruleml:Var keyref=":ers" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A3076">
              <ruleml:Rel iri="prOnto:isBasedOn" />
              <ruleml:Var keyref=":ebo3" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var key=":est">est</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Statistic" />
              <ruleml:Var keyref=":est" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:exceptionCha2Art9Par2" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
    <lrml:ConstitutiveStatement key="statements275Formula4">
      <!--
Entailment:
(
	(rioOnto:RexistAtTime :a1 :t1) & (rioOnto:and :a1 :ep :eor :eca :edp) & (prOnto:DataSubject :w) & (prOnto:PersonalData :z :w)
	 & (prOnto:Controller :y :z) & (prOnto:Processor :x) & (prOnto:nominates' :edp :y :x)
	 & (prOnto:PersonalDataProcessing' :ep :x :z) & (rioOnto:or :eor :ebo1 :ebo2 :ebo3) & (prOnto:isBasedOn' :ebo1 :ep :epi)
	 & (prOnto:PublicInterest :epi) & (prOnto:isBasedOn' :ebo2 :ep :ers) & (prOnto:Research :ers)
	 & (prOnto:isBasedOn' :ebo3 :ep :est) & (prOnto:Statistic :est) & (prOnto:measure :em)
	 & (prOnto:implement' :ei :y :em) & (rioOnto:cause' :ec1 :em :epu) & (rioOnto:cause' :ec2 :em :en)
	 & (rioOnto:not :en :eif) & (prOnto:identifiableFrom' :eif :w :z),

	(rioOnto:exceptionCha2Art9Par2 :ep)
)
-->
      <ruleml:Rule closure="universal">
        <ruleml:if>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:RexistAtTime" />
              <ruleml:Var key=":a1">a1</ruleml:Var>
              <ruleml:Var key=":t1">t1</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:and" />
              <ruleml:Var keyref=":a1" />
              <ruleml:Var key=":ep">ep</ruleml:Var>
              <ruleml:Var key=":eor">eor</ruleml:Var>
              <ruleml:Var key=":eca">eca</ruleml:Var>
              <ruleml:Var key=":edp">edp</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:DataSubject" />
              <ruleml:Var key=":w">w</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PersonalData" />
              <ruleml:Var key=":z">z</ruleml:Var>
              <ruleml:Var keyref=":w" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Controller" />
              <ruleml:Var key=":y">y</ruleml:Var>
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Processor" />
              <ruleml:Var key=":x">x</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A3077">
              <ruleml:Rel iri="prOnto:nominates" />
              <ruleml:Var keyref=":edp" />
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":x" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A3078">
              <ruleml:Rel iri="prOnto:PersonalDataProcessing" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var keyref=":x" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:or" />
              <ruleml:Var keyref=":eor" />
              <ruleml:Var key=":ebo1">ebo1</ruleml:Var>
              <ruleml:Var key=":ebo2">ebo2</ruleml:Var>
              <ruleml:Var key=":ebo3">ebo3</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A3079">
              <ruleml:Rel iri="prOnto:isBasedOn" />
              <ruleml:Var keyref=":ebo1" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var key=":epi">epi</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:PublicInterest" />
              <ruleml:Var keyref=":epi" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A3080">
              <ruleml:Rel iri="prOnto:isBasedOn" />
              <ruleml:Var keyref=":ebo2" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var key=":ers">ers</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Research" />
              <ruleml:Var keyref=":ers" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A3081">
              <ruleml:Rel iri="prOnto:isBasedOn" />
              <ruleml:Var keyref=":ebo3" />
              <ruleml:Var keyref=":ep" />
              <ruleml:Var key=":est">est</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:Statistic" />
              <ruleml:Var keyref=":est" />
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="prOnto:measure" />
              <ruleml:Var key=":em">em</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A3082">
              <ruleml:Rel iri="prOnto:implement" />
              <ruleml:Var key=":ei">ei</ruleml:Var>
              <ruleml:Var keyref=":y" />
              <ruleml:Var keyref=":em" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A3083">
              <ruleml:Rel iri="rioOnto:cause" />
              <ruleml:Var key=":ec1">ec1</ruleml:Var>
              <ruleml:Var keyref=":em" />
              <ruleml:Var keyref=":epu" />
            </ruleml:Atom>
            <ruleml:Atom keyref=":A3084">
              <ruleml:Rel iri="rioOnto:cause" />
              <ruleml:Var key=":ec2">ec2</ruleml:Var>
              <ruleml:Var keyref=":em" />
              <ruleml:Var key=":en">en</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:not" />
              <ruleml:Var keyref=":en" />
              <ruleml:Var key=":eif">eif</ruleml:Var>
            </ruleml:Atom>
            <ruleml:Atom keyref=":A3085">
              <ruleml:Rel iri="prOnto:identifiableFrom" />
              <ruleml:Var keyref=":eif" />
              <ruleml:Var keyref=":w" />
              <ruleml:Var keyref=":z" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:if>
        <ruleml:then>
          <ruleml:And>
            <ruleml:Atom>
              <ruleml:Rel iri="rioOnto:exceptionCha2Art9Par2" />
              <ruleml:Var keyref=":ep" />
            </ruleml:Atom>
          </ruleml:And>
        </ruleml:then>
      </ruleml:Rule>
    </lrml:ConstitutiveStatement>
  </lrml:Statements>
</lrml:LegalRuleML>

